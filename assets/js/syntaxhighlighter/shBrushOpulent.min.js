!function(){function e(){var e="if elsif else unless case when each while do until include loop break end",r="Array Bignum Binding Class Continuation Dir Exception FalseClass File::Stat File Fixnum Fload Hash Integer IO MatchData Method Module NilClass Numeric Object Proc Range Regexp String Struct::TMS Symbol ThreadGroup Thread Time TrueClass doctype",s="validname VALIDNAME validName valid_name valid-name bread tomato ham ul li span div a b c p input number hash_var array_var node";this.regexList=[{regex:/(\w+([\-\_]\w+)*)?([\.\#]\w+([\-\_]\w+)*)+/g,css:"variable color1"},{regex:new RegExp(this.getKeywords(s),"gm"),css:"variable color1"},{regex:new RegExp(this.getKeywords("def"),"gm"),css:"constants"},{regex:/\/.*/g,css:"comments"},{regex:SyntaxHighlighter.regexLib.doubleQuotedString,css:"string"},{regex:SyntaxHighlighter.regexLib.singleQuotedString,css:"string"},{regex:/\b[A-Z0-9_]+\b/g,css:"constants"},{regex:/:[a-z][A-Za-z0-9_]*/g,css:"color2"},{regex:/(\$|@@|@)\w+/g,css:"variable"},{regex:new RegExp(this.getKeywords(e),"gm"),css:"keyword"},{regex:new RegExp(this.getKeywords(r),"gm"),css:"color1"}]}"undefined"!=typeof require?SyntaxHighlighter=require("shCore").SyntaxHighlighter:null,e.prototype=new SyntaxHighlighter.Highlighter,e.aliases=["opulent","op"],SyntaxHighlighter.brushes.Opulent=e,"undefined"!=typeof exports?exports.Brush=e:null}();