{"version":3,"sources":["revelate/revelate.coffee"],"names":[],"mappings":"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","file":"revelate/revelate.js","sourceRoot":"/source/","sourcesContent":["###\n                                    dP            dP\n                                    88            88\n88d888b. .d8888b. dP   .dP .d8888b. 88 .d8888b. d8888P .d8888b.\n88'  `88 88ooood8 88   d8' 88ooood8 88 88'  `88   88   88ooood8\n88       88.  ... 88 .88'  88.  ... 88 88.  .88   88   88.  ...\ndP       `88888P' 8888P'   `88888P' dP `88888P8   dP   `88888P'\nooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n\nA smart and efficient scroll reveal plugin by Alex Grozav\nfrom Pixevil built to make the web a better place.\n\n@plugin  \tRevelate\n@author \tAlex Grozav\n@website  http://pixevil.com\n@version \t1.0\n@license \tCommercial\n###\n\n(($, window, document) ->\n  \"use strict\"\n\n  # @Revelate\n  $.revelate = (element, options) ->\n    # This is where we place our default values.\n    _defaults =\n      selector: '[data-revelate]'\n      delay: 400\n      edge: [150, 150]\n      screen: [1920, 1080]\n      repeat: false\n      direction: 'vertical'\n      animation:\n        duration: 700\n        easing: 'swing'\n\n    debug: true\n\n    @_defaults = _defaults\n\n    @settings = $.extend {}, _defaults, options\n    @context = $ element\n\n    if @debug\n      console.log @elements\n\n\n    # Get all child elements which have revelate\n    # events attached through data attributes\n    #\n    @initialize = =>\n      @init_animus()\n      @init_window()\n      @init_elements()\n\n      @bind_resize()\n      @bind_scroll()\n\n      return\n\n\n    # Initialize animus plugin for animation objects\n    #\n    @init_animus = =>\n      override =\n        duration: @settings.animation.duration\n        easing: @settings.animation.easing\n\n      @animus = new ($.animus)(override)\n\n      return\n\n\n    # Initialize window size with bleeding edge\n    #\n    @init_window = =>\n      @edge = @settings.edge.slice(0)\n\n      if @settings.direction is 'vertical'\n        win_height = $(window).height()\n        doc_height = $(document).height()\n\n        @edge = @edge.map (edge) =>\n          parseInt edge * (win_height / @settings.screen[1])\n        @viewport = win_height - @edge[1]\n        @endscroll = doc_height - win_height\n      else\n        win_width = $(window).width()\n        doc_width = $(document).width()\n\n        @edge = @edge.map (edge) =>\n          parseInt edge * (win_width / @settings.screen[0])\n        @viewport = win_width - @edge[1]\n        @endscroll = doc_width - win_height\n\n      if @debug\n        console.log \"Edge: \", @edge\n        console.log \"Viewport: \", @viewport\n        console.log \"End Scroll: \", @endscroll\n\n      return\n\n\n\n    # Initialize elements by caching data attributes\n    #\n    @init_elements = =>\n      @elements = {}\n      $(@settings.selector, @context).each (index, element) =>\n        offset = @get_offset $ element\n        data = @get_data $ element\n\n        @elements[offset] = new Array() unless @elements[offset]?\n        @elements[offset].push data\n\n        $(element).attr 'data-revelate-index', \"#{offset}-#{@elements[offset].length - 1}\"\n        $(element).velocity data.starting_animation.state, 1\n\n      return\n\n\n    # Get top or left offset of the element depending\n    # on input settings\n    #\n    @get_offset = (element) ->\n      offset = if @settings.direction is 'vertical'\n        Math.round element.offset().top\n      else\n        Math.round element.offset().left\n\n      offset = 0 if offset < 0\n\n      return offset\n\n\n    # Get animation data for the current element\n    #\n    @get_data = (element) ->\n      data =\n        done: false\n        height: element.outerHeight(true)\n        width: element.outerWidth(true)\n        animation: {}\n\n      # Get repeat data\n      repeat = element.attr \"data-revelate-repeat\"\n      data.repeat = if not repeat? then @settings.repeat else !!repeat\n\n      # Get element delay\n      start = element.attr \"data-revelate-start\"\n      start = if not start? then @settings.delay else parseInt start\n\n      # Create Stacks for ordering animations\n      time_stack = []\n      animation_stack = {}\n\n      # Get initial state animation\n      initial = element.attr \"data-revelate\"\n      initial = element.attr \"data-revelate-initial\" unless initial?\n\n      # Add initial animation to the stacks\n      animation_stack[start] = initial\n      time_stack.push start\n\n      # Get in animation\n      initial_animation_override = if element.attr('data-revelate-in')?\n        @animus.get element.attr('data-revelate-in')\n      else\n        false\n\n      # Get animation timeline\n      timeline = element.data()\n      for key, value of timeline\n        if (atMatch = key.match(/revelateAt([0-9]*)/)) isnt null\n          time = parseInt atMatch[1], 10\n\n          # Add time to time stack\n          animation_stack[time] = value\n          time_stack.push time\n\n      # Set animation timeline\n      #\n      # The time stack is needed to maintain the order of\n      # the object animations since JSON objects aren't ordered\n      time_stack.sort()\n\n      # Last animation from time stack\n      last_animation_time = time_stack[0]\n\n      for key of time_stack\n        data.animation[time_stack[key]] = @animus.get animation_stack[time_stack[key]]\n        last_animation_time = time_stack[key] if time_stack[key] > last_animation_time\n\n      # Set reset state by getting all the animation variables\n      # and setting them to the default values\n      if $.type(data.animation[start].state) isnt 'string'\n        data.animation[start].state = @animus.reset data.animation[start].state, data, true\n        data.starting_animation = data.animation[start]\n        data.animation[start].state = @animus.forcefeed data.animation[start].state, initial_animation_override\n\n      # Get loop data\n      data.loop = if element.attr(\"data-revelate-loop\")?\n        last_animation_time + data.animation[last_animation_time].duration + 1\n      else\n        false\n\n      return data\n\n\n    # Bind functionality to the window resize event\n    #\n    @bind_resize = =>\n      resize_timeout = null\n      $(window).resize =>\n        clearTimeout resize_timeout\n        resize_timeout = setTimeout =>\n          @init_window()\n          @elements = @restructure()\n\n          scroll = @window.scrollTop()\n          @check scroll\n        ,500\n\n      return\n\n\n    # Responsively restructure elements based on current offset\n    #\n    @restructure = =>\n      new_elements = {}\n      $(@settings.selector, @context).each (index, element) =>\n        id = $(element).attr \"data-revelate-index\"\n        [old_offset, index] = id.split \"-\"\n        index = parseInt index\n\n        offset = this.get_offset $ element\n\n        new_elements[offset] = new Array() unless new_elements[offset]?\n        new_elements[offset].push @elements[old_offset][index]\n\n        current = new_elements[offset].length - 1\n        new_elements[offset][current].width = $(element).outerWidth true\n        new_elements[offset][current].height = $(element).outerHeight true\n\n        $(element).attr \"data-revelate-index\", \"#{offset}-#{new_elements[offset].length - 1}\"\n\n      if @debug\n        console.log \"Restructured: \", @elements\n\n      return new_elements\n\n\n    # Bind functionality to the window scroll event\n    #\n    @bind_scroll = =>\n      @window = $(window)\n      @window.scroll =>\n        scroll = @window.scrollTop()\n        @check scroll\n\n      @window.trigger 'scroll'\n\n\n    # Check if elements in view and animate them accordingly\n    #\n    @check = (scroll) ->\n      for offset, group of @elements\n        # Inside viewport\n        for index, data of group\n\n          if @in_viewport offset, data.height, scroll\n            if data.done is off\n              id = offset + '-' + index\n              element = $('[data-revelate-index=\"' + id + '\"]')\n              @animate element, data\n\n              if @debug\n                console.log \"Animate: [#{scroll}, #{offset}]\"\n\n          else\n            if data.repeat is on and data.done is on\n              id = offset + '-' + index\n              element = $('[data-revelate-index=\"' + id + '\"]')\n              @reset element, data\n\n      return\n\n\n    # Check if element offset group is in view\n    #\n    @in_viewport = (offset, height, scroll) ->\n      top = parseInt offset\n      bottom = top + height\n\n      [min, max] = if scroll is 0\n        [0, scroll + @viewport]\n      else if scroll is @endscroll\n        [scroll + @edge[0], scroll + @viewport + @edge[1]]\n      else\n        [scroll + @edge[0], scroll + @viewport]\n\n      return (top >= min and bottom <= max) or (top < min and min < bottom < max) or (min < top < max  and bottom > max) or (top < min and bottom > max)\n\n\n    # Animate the element based on animation objects\n    # and check for repeaters\n    #\n    @animate = (element, data) ->\n      states = ->\n        $.each data.animation, (key, animation) ->\n          animation.timeline = setTimeout ->\n            element.velocity animation.state,\n              easing: animation.easing\n              duration: animation.duration\n              visibility: 'visible'\n            return\n          ,key\n\n      data.done = true\n\n      states()\n      if data.loop\n        data.interval = setInterval states, data.loop\n\n      return\n\n\n    # Reset animation if out of viewport and everything is finished.\n    #\n    @reset = (element, data) ->\n      data.done = false\n\n      if data.loop\n        clearInterval data.interval\n\n      for key, animation of data.animation\n        clearTimeout animation.timeline\n\n      element.velocity data.starting_animation.state,\n        duration: data.starting_animation.duration\n        visibility: 'hidden'\n\n      return\n\n    @initialize()\n\n\n\n  # Lightweight plugin wrapper that prevents multiple instantiations.\n  #\n  $.fn.revelate = (opts) ->\n    @each (index, element) ->\n      unless $.data element, \"revelate\"\n        $.data element, \"revelate\", new $.revelate element, opts\n\n) window.jQuery, window, document\n"]}