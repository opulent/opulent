{"version":3,"sources":["rock-slider/rock-slider.coffee"],"names":[],"mappings":"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","file":"rock-slider/rock-slider.js","sourceRoot":"/source/","sourcesContent":["###\n\n         dP oo       dP\n         88          88\n.d8888b. 88 dP .d888b88 .d8888b. .d8888b.\nY8ooooo. 88 88 88'  `88 88ooood8 88'  `88\n      88 88 88 88.  .88 88.  ... 88.  .88\n`88888P' dP dP `88888P8 `88888P' `88888P8\noooooooooooooooooooooooooooooooooooooooooo\n\n@plugin    jQuery\n@license   CodeCanyon Standard / Extended\n@author    Alex Grozav\n@company   Pixevil\n@website   http://pixevil.com\n@email     alex@grozav.com\n@guide\n  Running rock-slider\n    $('.rock-slider').rockSlider\n      width: 1280\n      height: 720\n      layout: 'layout_name'\n\n  Using methods\n    $('.rock-slider').data('rock-slider').method_name()\n\n  Adding events\n    $('.rock-slider').on 'event_name', ->\n###\n\n(($, window, document) ->\n  \"use strict\"\n\n  # @RockSlider\n  $.rockSlider = (element, options) ->\n\n    # Default attribute values\n    _defaults =\n      width: 1280 # Slide canvas width\n      height: 720 # Slide canvas height\n      animation:\n        in: \"opacity 0\" # Slide initial animation state\n        out: \"fade out\" # Slide default out animation\n        easing: \"swing\" # Default animation easing\n        duration: 500 # Default animation duration\n\n      delay: 4000 # Slide delay / display time\n\n      overlap: 1 # Overlap previous out and current in animations (value >= 0)\n                 # where 0 means overlap and 1 means wait for transition to finish\n\n      layout: \"default\" # RockSlider layout\n      layout_settings: {} # Layout initialization settings\n\n      layer_index: 99 # Starting z-index for layers\n\n      autoplay: true # Autoplay feature\n      pause_on_hover: false # Pause autoplay on hover\n      loop: true # Start from first slide after reaching last\n\n      content_scaling: false # Scale content based on parent width\n      content_scaling_factor: # Scale multiplication coefficient\n        xs: 1\n        sm: 1\n        md: 1\n        lg: 1\n        xlg: 1\n      content_width: null # Set content reference width. Default: canvas width\n\n      content_parallax: true # Fade content on scroll\n      content_parallax_data:\n        mode: 'from-middle'\n        transform:\n          translateY: 0.6 # Scroll fade translate speed coefficient\n          opacity: 0.4 # Scroll fade fade speed coefficient\n        transform_style:\n          opacity: 'default' # from-middle, to-middle, default\n\n      grid:           # Split rock-slider background into tiles\n        rows: 1       # Number of rows to split the background into\n        columns: 1    # Number of columns to split the background into\n        stagger: 100  # Animation delay in between tiles\n\n      canvas_parallax: true # Parallax scroll coefficient\n      canvas_parallax_data:\n        transform:\n          translateY: 0.2\n      canvas_parallax_layers: true # Parallax layers as well\n\n      touch: true # Touch controls\n      keyboard: true # Slide next / prev with keyboard arrows\n      mousewheel: false # Enable Slide on Scroll\n      prevent_scrolling: true # Prevent page scrolling if mousewheel enabled\n\n      loader: true # Add a loader if it doesn't exist in the markup\n\n      scroller: false # Enable Scroller Item\n      scroller_markup: \"<span class=\\\"rock-scroller-1\\\"></span>\" # Markup for scroller item (1 or 2)\n      scroller_position: \"center\" # Scroller position: left, center, right\n\n      progress: true # Add progress bar\n      progress_position: \"bottom\" # Progress bar position top / bottom\n      progress_class: \"rock-progress-light\" # Additional thumbnail classes\n\n      thumbnails: false # Add thumbnails\n      thumbnails_visible: # Maximum number of thumbnails on page\n        phone: 3\n        tablet: 4\n        laptop: 5\n        desktop: 6\n      thumbnails_position: \"after\" # Thumbnails position before or after\n      thumbnails_class: \"\" # Additional thumbnail classes\n\n      controls: true # Add next / prev buttons\n      controls_thumbnail: true # Add thumbnail to controls\n      controls_html:\n        prev: \"&lt;\"\n        next: \"&gt;\"\n      controls_class: \"rock-controls-alternate\" # Additional control classes\n\n      pagination: false # Add pagination\n      pagination_position: \"inside\" # Pagination position outside / inside\n      pagination_class: \"rock-pagination-light\" # Additional pagination classes\n\n      prevent_dragging: true # Prevent image dragging\n\n      screen_size: # Refers to the current screen size\n        xs: 0\n        sm: 768\n        md: 992\n        lg: 1200\n        xlg: 1840\n\n      selector: # Element selectors\n        slide: \".rock-slide\" # Should not be changed unless absolutely necessary\n        content: \".rock-content\"\n        background: \".rock-background\"\n        video_background: \".rock-video-background\"\n        video: \".rock-video\"\n        video_cover: \".rock-video-cover\"\n        layer: \".rock-layer\"\n        object: \".rock-object\"\n        next: \".rock-next\"\n        prev: \".rock-prev\"\n        outer: \".rock-outer\"\n        inner: \".rock-inner\"\n\n    @debug = true\n\n    # Set @options\n    @_defaults = _defaults\n    @settings = $.extend {}, _defaults, options\n    @settings.content_scaling_factor = $.extend {}, @_defaults.content_scaling_factor, @settings.content_scaling_factor\n\n    # Set current @element\n    @context = $ element\n\n    # Animation States\n    @animation = {}\n\n    # Slider\n    @element = $ element\n    @parent = @element.parent()\n    @current = -1\n\n    # Get slider ID\n    @id = if @element.attr('id')?\n      @element.attr 'id'\n    else\n      'rock-' + Math.floor((Math.random() * 1000) + 1)\n\n    # Window\n    @window = $ window\n\n    # Cache\n    @cache = {}\n\n    # Video Players\n    @youtube_player = {}\n    @vimeo_player = {}\n\n    # Timer\n    # Used in slide to set timeout to next slide\n    @timer = {}\n    @timer.timeout = null\n    @timer.start = 0\n    @timer.remaining = 0\n\n    # Sets the @default variables and animations\n    #\n    @initialize = =>\n      # @Loader\n      @add_loader() if @settings.loader\n\n      # Animation States\n      @init_animus()\n\n      # @Settings\n      @set_data_settings()\n\n      # Add RockSlider Classes\n      @add_classes()\n\n      # Wrap Objects\n      @wrap_objects()\n\n      # Set inner\n      @inner = $ @settings.selector.slide, @element\n\n      # Set outer\n      @outer = $ @settings.selector.outer, @element\n\n      # Set Slides\n      @slides = $ @settings.selector.slide, @element\n      @slides_length = @slides.length\n\n      # Set Active Slide\n      @active = @slides.eq(0)\n\n      # Set Size Setup\n      @window_width = @window.width()\n      @window_height = @window.height()\n\n      # Visible @Size\n      @visible_width = @window_width\n      @visible_height = @window_height\n\n      # @Parent Size\n      @parent_width = @parent.width()\n      @parent_height = @parent.height()\n\n      # Entire Element Width\n      @element_width = @parent_width\n      @element_height = @element_width / @settings.width * @settings.height\n\n      # Get current responsive context\n      @set_responsive_context()\n\n      # Setup Layers\n      @setup_layers()\n\n      # Setup Videos\n      @setup_videos()\n\n      # Bind Window Resize\n      @bind_resize()\n\n      # Prevent Image Dragging\n      @prevent_dragging()  if @settings.prevent_dragging is true\n\n      # Perform Initial Load\n      @load =>\n        # Enable features\n        @enable_pause_on_hover()  if @settings.pause_on_hover is true\n        @enable_touch()  if @settings.touch is true\n        @enable_mousewheel()  if @settings.mousewheel is true\n        @enable_keyboard()  if @settings.keyboard is true\n\n        # Scaling value is required for some layouts to set content in the right\n        # position before sliding starts\n        @scale_content()\n\n        # Layout setup\n        @setup()\n\n        # Add feature elements\n        @add_progress_bar()  if @settings.progress is true\n        @add_thumbnails()  if @settings.thumbnails is true\n        @add_scroller()  if @settings.scroller is true\n        @add_pagination()  if @settings.pagination is true\n        @add_controls()  if @settings.controls is true\n\n        # Setup layout and content\n        @setup_scaling() if @settings.content_scaling\n        @setup_content()\n        @setup_layout()\n\n        # Split into grid\n        @setup_grid()\n\n        # Bind Window Scroll\n        @bind_scroll()\n\n        # Refresh sizes after intermediary computations are done\n        @refresh()\n\n        # Enable scrolling events\n        @enable_content_parallax() if @settings.content_parallax\n        @enable_canvas_parallax()\n\n        # Hide the loader element\n        @hide_loader()\n\n        # Start the slider after loader is hidden\n        setTimeout (=>\n          @slide 0\n        ), 500\n\n        # Trigger on load event\n        @element.trigger \"rock-slider.load\"\n\n        return\n\n      if @debug\n        console.log @cache\n\n      return\n\n    # Load function to imagesLoaded images and cache slide animations\n    #\n    @load = (callback) ->\n      i = 0\n      @slides.each (index, el) =>\n        $slide = $(el)\n\n        # Preload Image\n        $slide.imagesLoaded().always =>\n          $background = $(@settings.selector.background, $slide)\n          $layers = $(@settings.selector.layer, $slide)\n          objects = $(@settings.selector.object, $slide)\n\n          # Cache initialization\n          @cache[index] = {}\n          @cache[index].layer = {}\n          @cache[index].object = {}\n\n          # Cache background by setting a 0 index, used for easier animation\n          # method in layout\n          @cache[index].background =\n            0: @get_data($slide, $background, 'background', @settings.delay)\n\n          # Layer animation values based on the background transitions\n          layer_delay = @cache[index].background[0].delay - (@cache[index].background[0].animation[0].duration / 2)\n          layer_start = @cache[index].background[0].animation[@cache[index].background[0].start].duration\n\n          # Cache layers by determining whether they are images or object layers\n          $layers.each (layer_index, layer) =>\n            $layer = $(layer)\n\n            image = null\n            if $layer.is('img')\n              image = $(layer)\n\n            @cache[index].layer[layer_index] = @get_data($layer, image, 'layer', layer_delay, layer_start)\n            return\n\n          # Cache objects\n          objects.each (object_index, object) =>\n            object = $(object)\n            @cache[index].object[object_index] = @get_data(object, null, 'object', layer_delay, layer_start)\n            return\n\n          # Cache Thumbnail\n          thumbnail = $slide.attr('data-rock-thumbnail')\n          if thumbnail\n            @cache[index].thumbnail = thumbnail\n          else\n            @cache[index].thumbnail = $background.attr('src')\n\n          # If all slides are loaded, call the actual setup function\n          i++\n          if i == @slides_length\n            callback.call()\n          return\n        return\n      return\n\n    # Get element animation data based on its type\n    #\n    # @param object [Object] Current data gathering target\n    # @param image [Object] Image target from which we gather layer sizes\n    # @param type [String] Target type identifier\n    # @param delay [Fixnum] Element default on screen display time\n    # @param default_start [Fixnum] Element animation default start time\n    #\n    @get_data = (object, image, type, default_delay, default_start) ->\n      string = ''\n\n      time_stack = []\n      animation_stack = {}\n\n      i = 0\n\n      # Set Element\n      data = {}\n      data.type = type\n      data.animation = {}\n\n      # Get Base Image Size\n      if image != null and image.get(0)\n        data.width = image.get(0).naturalWidth\n        if !data.width?\n          data.width = image.get(0).width\n          if !data.width?\n            data.width = image.width()\n            if !data.width?\n              data.width = @settings.width\n\n        data.height = image.get(0).naturalHeight\n        if !data.height?\n          data.height = image.get(0).height\n          if !data.height?\n            data.height = image.height()\n            if !data.height?\n              data.height = @settings.height\n      else\n        data.width = 'auto'\n        data.height = 'auto'\n\n      # Get Layer Settings\n      if type is 'layer'\n        data.position = {}\n\n        if object.attr('data-rock-top')?\n          data.position.top = parseFloat(object.attr('data-rock-top'))\n        else if object.attr('data-rock-bottom')?\n          data.position.bottom = parseFloat(object.attr('data-rock-bottom'))\n        else\n          data.position.top = 0\n\n        if object.attr('data-rock-left')?\n          data.position.left = parseFloat(object.attr('data-rock-left'))\n        else if object.attr('data-rock-right')?\n          data.position.right = parseFloat(object.attr('data-rock-right'))\n        else\n          data.position.left = 0\n\n        if object.attr('data-rock-width')?\n          data.width = parseFloat(object.attr('data-rock-width'))\n        if object.attr('data-rock-height')?\n          data.height = parseFloat(object.attr('data-rock-height'))\n\n      # Gather canvas parallax data\n      canvas_parallax_data = object.attr('data-rock-parallax')\n      data.canvas_parallax_data = {}\n      if canvas_parallax_data?\n        if canvas_parallax_data is 'false'\n          data.canvas_parallax = false\n        else\n          data.canvas_parallax = true\n          data.canvas_parallax_data.transform = {}\n          data.canvas_parallax_data.transform.translateY = parseFloat canvas_parallax_data\n      else\n        data.canvas_parallax = @settings.canvas_parallax\n        data.canvas_parallax_data = @settings.canvas_parallax_data if @settings.canvas_parallax\n\n      # Starting time for layer animation\n      start = if object.attr('data-rock-start')?\n        parseInt(object.attr('data-rock-start'), 10)\n      else\n        if type == 'background' then 0 else default_start\n\n      data.start = start\n\n      # Get Initial State\n      initial_state = object.attr('data-rock')\n      initial_state = object.attr('data-rock-initial') unless initial_state?\n\n      if initial_state?\n        starting_animation = initial_state\n      else if type == 'background'\n        starting_animation = @settings.animation.in\n      else\n        starting_animation = ''\n\n      # This sets the initial state of our animated object\n      # The entering animation will be set as css and will\n      # transition to the default state\n      animation_stack[start] = starting_animation\n      time_stack[i++] = start\n\n      # Set animation in override to set a different beginning state\n      # other than the default one\n      initial_animation_override = if object.attr('data-rock-in')?\n        @animus.get object.attr('data-rock-in')\n      else\n        false\n\n      # Get Animation Timeline\n      timeline = object.data()\n      $.each timeline, (key, value) ->\n        time = undefined\n        # Check if data key matches animation\n        if (time = key.match(/rockAt([0-9]+)/)) != null\n          at_time = parseInt(time[1], 10)\n\n          # Set value animation at time\n          animation_stack[at_time] = value\n\n          # Add time to time stack\n          time_stack[i++] = at_time\n\n        return\n\n      # Set ending time as default delay or when last animation ends\n      last_time = 0\n\n      # The time stack is needed to maintain the order of\n      # the object animations since JSON objects aren't ordered\n      time_stack.sort()\n      $.each time_stack, (key, value) =>\n        data.animation[time_stack[key]] = @animus.get animation_stack[time_stack[key]]\n        last_time = value if value > last_time\n        return\n\n      # Set grid initial status as disabled for now, might be possible to add\n      # layers in the future\n      data.grid =\n        enabled: false\n\n      # For backgrounds, we allow splitting images into tiles using set rows and\n      # columns.\n      if type is 'background'\n        rows = object.attr('data-rock-grid-rows')\n        data.grid.rows = if rows?\n          parseInt rows, 10\n        else\n          @settings.grid.rows\n\n        columns = object.attr('data-rock-grid-columns')\n        data.grid.columns = if columns?\n          parseInt columns, 10\n        else\n          @settings.grid.columns\n\n        stagger = object.attr('data-rock-grid-stagger')\n        data.grid.stagger = if stagger?\n          parseInt stagger, 10\n        else\n          @settings.grid.stagger\n\n\n        if data.grid.columns > 1 or data.grid.rows > 1\n          data.grid.enabled = true\n          object.addClass 'rock-grid-slide'\n\n      # Get display time\n      delay = object.attr('data-rock-delay')\n      if delay?\n        data.delay = parseInt(delay, 10) + parseInt(data.animation[start].duration, 10)\n      else if @settings.autoplay is false\n        data.delay = 99999\n      else\n        data.delay = parseInt(default_delay, 10) + parseInt(data.animation[start].duration, 10)\n\n      # Get Exit Animation\n      out_animation = object.attr('data-rock-out')\n      out_animation = if out_animation?\n        out_animation\n      else\n        if type == 'background'\n          @settings.animation.out\n        else\n          ''\n\n      # Set ending animation unless we have a null string\n      if out_animation != ''\n        end_time = if type == 'background'\n          if data.delay > last_time + data.animation[last_time].duration\n            data.delay\n          else\n            last_time + data.animation[last_time].duration\n        else\n          delay\n\n        data.animation[end_time] = @animus.get out_animation\n\n      # Set reset state by getting all the animation variables\n      # and setting them to the default values\n      if $.type(data.animation[start].state) isnt 'string'\n        # Fade elements in, as they are faded out by default\n        data.animation[start].state.opacity = 0 unless 'opacity' of data.animation[start].state\n\n        # Get animation with resets, meaning besides initial values, we pass through all other\n        # data animations and set default values for them as well\n        data.animation[start].state = @animus.reset data.animation[start].state, data, true\n\n        # Set initial animation data\n        data.default_state = @animus.reset initial_animation_override.state, data, true\n        data.initial_state = data.animation[start].state\n\n        # Set initial animation as a forcefed animation, meaning we use the\n        # initial state as final state, and we override the default state, if applicable\n        data.animation[start].state = @animus.forcefeed data.animation[start].state, initial_animation_override.state\n\n      # Set looping timeout\n      data.loop = if object.attr('data-rock-loop')?\n        last_time + data.animation[last_time].duration + 1\n      else\n        false\n\n      return data\n\n\n    # Slide wrapper function for calling static slider method to move\n    # the carousel to the next slide\n    #\n    @slide = (i) ->\n      from = @current\n      next = if i + 1 > @slides_length - 1 then 0 else i + 1\n      prev = if i - 1 < 0 then @slides_length - 1 else i - 1\n\n      # Index Logic\n      if i == @current\n        return\n      if i > @slides_length - 1\n        i = 0\n      if i < 0\n        i = @slides_length - 1\n\n      # Set Active\n      $('.previous', @element).removeClass 'previous'\n      @slides.eq(prev).addClass 'previous'\n\n      $('.active', @element).removeClass 'active'\n      @active = @slides.eq(i)\n      @active.addClass 'active'\n\n      $('.next', @element).removeClass 'next'\n      @slides.eq(next).addClass 'next'\n\n      # Clear Timeouts\n      if @current != -1\n        @clear_timeouts @current\n      @clear_timeouts i\n\n      # Layout specific slide method\n      @layout[@settings.layout].slide.call this, i, @current\n\n      # RockSlider specific slide method\n      @animate i, @current\n\n      # Set Current\n      @current = i\n\n      # Go to the next slide after the slide specific delay\n      if @settings.autoplay is true\n        @timer.start = new Date\n        @timer.remaining = @cache[i].background[0].delay\n        clearTimeout @timer.clock\n        @timer.clock = setTimeout((=>\n          if @settings.loop isnt true and i + 1 == @slides_length - 1\n            return\n          @slide i + 1\n          return\n        ), @timer.remaining)\n\n      # Animate Progress Bar\n      if @settings.progress is true\n        @progress.bar.velocity('stop').velocity({ width: '0%' }, 0).velocity { width: '100%' }, @timer.remaining\n\n      # Set Control Thumbnails\n      if @settings.controls is true and @settings.controls_thumbnail is true\n        @prev_thumbnail.attr 'src', @cache[prev].thumbnail\n        @next_thumbnail.attr 'src', @cache[next].thumbnail\n\n      # Set Pagination Active\n      if @settings.pagination\n        @pagination.filter('.active').removeClass 'active'\n        @pagination.eq(i).addClass 'active'\n\n      # Set Thumbnails Active\n      if @settings.thumbnails\n        @thumbnails.elements.filter('.active').removeClass 'active'\n        @thumbnails.elements.eq(i).addClass 'active'\n\n      # Handle Videos\n      @handle_videos from, i\n      @element.trigger 'rock-slider.change', [\n        prev\n        @current\n        next\n        @slides_length\n        @active\n      ]\n      return\n\n    # Apply animations for all slider elements. Run previous slide out animation\n    # and set time required to crossfade slides\n    #\n    # @param i [Fixnum] Current slide index\n    # @param prev [Fixnum] Previous slide index\n    #\n    @animate = (i, prev) =>\n      # Set main active slide\n      $active = @slides.eq(i)\n\n      # Staggering timeout when using grid layouts\n      prev_stagger = 0\n\n      # Clear main animation timeout to prevent bad behaviour for unusual\n      # request counts (click spamming)\n      clearTimeout @animate_timeout\n\n      # Run animateOut animation for previous slide\n      if prev != -1 and @settings.layout_settings.animate_background isnt false\n        $prev = @slides.eq(prev)\n        $prev_layers = $ '.rock-layer-wrapper', $prev\n        $prev_objects = $ @settings.selector.object, $prev\n        previous_delay = @cache[prev].background[0].delay\n\n        # Fade content out together with the slide for a smooth transition\n        $(\".rock-content-wrapper, #{@settings.selector.layer}\", $prev).velocity\n          opacity: 0\n        , @cache[prev].background[0].animation[previous_delay].duration\n\n        # Animate background out if we have an out animation set for the previous slide\n        unless $.isEmptyObject @cache[prev].background[0].animation[previous_delay].state\n          prev_target = $prev\n\n          # Set animation options\n          options =\n            duration: @cache[prev].background[0].animation[previous_delay].duration\n            easing: @cache[prev].background[0].animation[previous_delay].easing\n            display: null\n            complete: =>\n              # When we're done with the previous slide, we stop all animations\n              # to prevent lagging and other bad behaviour\n              $prev.velocity('stop')\n              $prev_layers.velocity('stop')\n              $prev_objects.velocity('stop')\n              #$('.rock-grid-cell', $prev).velocity('stop') if @cache[prev].background[0].grid.enabled\n              return\n\n          # When a grid is set, animate the grid elements of the previous slide\n          if @cache[prev].background[0].grid.enabled\n            options.stagger = @cache[prev].background[0].grid.stagger\n\n            # Set cells as animation target when grid is enabled\n            prev_target = $('.rock-grid-cell', $prev)\n\n            # Fade the background out and fade the grid in, also reset\n            # state for active grid\n            $.Velocity.hook $('.rock-grid', $active), 'opacity', 1\n            $.Velocity.hook $('.rock-grid-cell', $active), 'opacity', 0\n            $.Velocity.hook $('.rock-grid', $prev), 'opacity', 1\n            $('.rock-background-main', $prev).velocity opacity: 0, 20\n\n            # When we have an UI animation, override display settings\n            if $.type(@cache[prev].background[0].animation[previous_delay].state) is 'string'\n              prev_stagger += $('.rock-grid-cell', $prev).length * @cache[prev].background[0].grid.stagger\n\n          # After fading the grid in if it exists, animate the previous slide\n          prev_target.velocity @cache[prev].background[0].animation[previous_delay].state, options\n\n      # Add the staggering (if it exists) to the next animation timeout\n      if prev is -1\n        timeout = prev_stagger\n      else\n        timeout = @cache[prev].background[0].animation[previous_delay].duration + prev_stagger\n\n      # If we want the slides to play one after another, the overlap parameter\n      # should be 1, otherwise 0. Everything in between will cause partial\n      # overlapping\n      timeout *=  @settings.overlap\n\n      # Runs active slide animation timeline for background, layers and objects\n      #\n      # Set a timeout to overlap, depending on slider settings\n      $.Velocity.hook $('.rock-background-main', $active), 'opacity', 0\n      @animate_timeout = setTimeout =>\n        $layers = $ '.rock-layer-wrapper', $active\n        $objects = $ @settings.selector.object, $active\n\n        # Fade content in, together with the slide for a smooth transition\n        $(\".rock-content-wrapper, #{@settings.selector.layer}\", $active).velocity\n          opacity: 1\n        , @cache[i].background[0].animation[@cache[i].background[0].start].duration\n\n        # Background animations\n        if @settings.layout_settings.animate_background isnt false\n          if @cache[i].background[0].grid.enabled\n            @run_grid_animation i, $('.rock-grid-cell', $active), 'background', 0, false\n          else\n            @run_animation i, $active, 'background', 0, false\n\n        # Layer animations\n        $layers.each (layer_index, layer) =>\n          @run_animation i, $(layer), 'layer', layer_index, false\n\n        # Object animation\n        $objects.each (object_index, object) =>\n          @run_animation i, $(object), 'object', object_index, false\n\n        return\n      , timeout\n      return\n\n    # Grid animation wrapper to run a callback after grid animation ends\n    #\n    @run_grid_animation = (i, $element, context, context_index, in_loop)  =>\n      $active = @slides.eq(i)\n      @run_animation i, $element, context, context_index, in_loop, =>\n        $.Velocity.hook $('.rock-background-main', $active), 'opacity', 1\n        $('.rock-grid', $active).velocity opacity: 0, 20\n        return\n      return\n\n    # Runs animation for current slide, generalized for background, layers and\n    # objects use\n    #\n    # @param i [Fixnum] Index of current cached element\n    # @param $element [Object] Element on which animation is applied\n    # @param context [String] Current animation cache accessor\n    # @param context_index [Fixnum] Current animation cache accessor index\n    #\n    @run_animation = (i, $element, context, context_index, in_loop, callback) =>\n      # Set initial animation position for active slide\n      current_delay = @cache[i].background[0].delay\n\n      # Set initial state for element\n      unless in_loop || !@cache[i][context][context_index].initial_state?\n        $element.velocity @cache[i][context][context_index].initial_state,\n          duration: 1\n\n      # Run each background animation as long as the animation index isn't greater\n      # than the slide's preview delay\n      $.each @cache[i][context][context_index].animation, (index) =>\n        if index >= current_delay or isNaN(index) or $.isEmptyObject(@cache[i][context][context_index].animation[index].state)\n          return\n\n        # Set timeout for each animation, with it's state\n        @cache[i][context][context_index].animation[index].timeline = setTimeout((=>\n          options =\n            duration: @cache[i][context][context_index].animation[index].duration\n            easing: @cache[i][context][context_index].animation[index].easing\n            display: null\n\n          if @cache[i][context][context_index].grid.enabled\n            options.stagger = @cache[i][context][context_index].grid.stagger\n\n            if callback? and parseInt(index) == @cache[i][context][context_index].start\n              options.complete = callback\n\n          # if @cache[i][context][context_index].grid.enabled\n          #   console.log @cache[i][context][context_index].animation[index]\n\n          $element.velocity @cache[i][context][context_index].animation[index].state, options\n          return\n        ), index)\n\n        return\n\n      if @cache[i][context][context_index].loop\n        @cache[i][context][context_index].loop_timeout = setTimeout =>\n          @run_animation i, $element, context, context_index, true\n        , @cache[i][context][context_index].loop\n\n      return\n\n\n    # Setup wrapper function for calling static @method\n    #\n    @setup = =>\n      # Create Layout\n      @layout = {}\n      $.each $.rockSlider.layouts, (index, value) =>\n        @layout[index] = new value\n        return\n\n      if @layout[@settings.layout]\n        @layout[@settings.layout].init.call this\n      else\n        tries = 0\n        max_tries = 3\n        try_interval = setInterval =>\n          $.each $.rockSlider.layouts, (index, value) =>\n            return if index of @layout\n            @layout[index] = new value\n            return\n\n          # Init Layout\n          if @layout[@settings.layout]\n            @layout[@settings.layout].init.call this\n            clearInterval try_interval\n            return\n\n          if tries == max_tries\n            clearInterval try_interval\n            console.error \"RockSlider couldn't find any \\\"#{@settings.layout}\\\" layout.\"\n\n          tries += 1\n        , 500\n\n\n      if @layout.length == 0\n        console.error \"RockSlider couldn't find any valid layouts.\"\n\n      return\n\n    # Setup layout wrapper\n    #\n    @setup_layout = =>\n      # Setup Layout\n      @layout[@settings.layout].setup.call this\n\n      return\n\n    # Set default animation parameters for RockSlider animation objects\n    # and create animus model\n    #\n    @init_animus = =>\n      override =\n        duration: @settings.animation.duration\n        easing: @settings.animation.easing\n\n      # Animus\n      @animus = new $.animus(override)\n      return\n\n    # Adds a CSS3 Animated loader to the slider\n    #\n    @add_loader = =>\n      if $(\".rock-loader-wrapper\", @element).length is 0\n        html = \"\"\n        html += '<div class=\"rock-loader-wrapper\">'\n        html += '<div class=\"rock-loader\">'\n        html += '<div class=\"rock-loader-inner\">'\n        html += '<div class=\"rock-loader-tile\"></div>'\n        html += '<div class=\"rock-loader-tile\"></div>'\n        html += '<div class=\"rock-loader-tile\"></div>'\n        html += '<div class=\"rock-loader-tile\"></div>'\n        html += '<div class=\"rock-loader-tile\"></div>'\n        html += '</div>'\n        html += '</div>'\n        html += '<div class=\"rock-loader-text\">'\n        html += '<h5 class=\"rock-loader-title font-normal\">'\n        html += 'SLIDEA'\n        html += '</h5>'\n        html += '<h6 class=\"rock-loader-subtitle font-thin\">'\n        html += 'A Smarter Slider Plugin'\n        html += '</h6>'\n        html += '</div>'\n        html += '</div>'\n        @element.prepend html\n      return\n\n    # Hides CSS3 Animated loader to the slider\n    #\n    @hide_loader = =>\n      $(\".rock-loader-wrapper\", @element).velocity\n        scale: 1.5\n        opacity: 0\n      ,\n        display: \"none\"\n      ,\n        duration: 600\n      return\n\n    # Check if @has data-rock-settings which override default init settings\n    #\n    @set_data_settings = =>\n      @settings.width = @element.attr(\"data-rock-width\")  if @element.attr(\"data-rock-width\")?\n      @settings.height = @element.attr(\"data-rock-height\")  if @element.attr(\"data-rock-height\")?\n      @settings.animation.initial = @element.attr(\"data-rock-initial\")  if @element.attr(\"data-rock-animation-initial\")?\n      @settings.animation.out = @element.attr(\"data-rock-out\")  if @element.attr(\"data-rock-animation-out\")?\n      @settings.animation.duration = @element.attr(\"data-rock-duration\")  if @element.attr(\"data-rock-duration\")?\n      @settings.animation.easing = @element.attr(\"data-rock-easing\")  if @element.attr(\"data-rock-easing\")?\n      @settings.delay = @element.attr(\"data-rock-delay\")  if @element.attr(\"data-rock-delay\")?\n      @settings.layout = @element.attr(\"data-rock-layout\")  if @element.attr(\"data-rock-layout\")?\n      return\n\n    # Add the actual classes to the RockSlider selector classes\n    #\n    @add_classes = =>\n      # $(@settings.selector.slide, @element).addClass \"rock-slide\"\n      # $(@settings.selector.content, @element).addClass \"rock-content\"\n      # $(@settings.selector.background, @element).addClass \"rock-background\"\n      # $(@settings.selector.video_background, @element).addClass \"rock-video-background\"\n      # $(@settings.selector.video, @element).addClass \"rock-video\"\n      # $(@settings.selector.video_cover, @element).addClass \"rock-video-cover\"\n      # $(@settings.selector.layer, @element).addClass \"rock-layer\"\n      # $(@settings.selector.object, @element).addClass \"rock-object\"\n      # $(@settings.selector.next, @element).addClass \"rock-next\"\n      # $(@settings.selector.prev, @element).addClass \"rock-prev\"\n      # $(@settings.selector.pagination, @element).addClass \"rock-pagination\"\n\n      return\n\n    # Wrap the slides with a .rock-inner class for layout flexibility\n    #\n    @wrap_objects = =>\n      $(@settings.selector.slide, @element).each (i, slide) =>\n        $(@settings.selector.background + ', ' + @settings.selector.layer, $(slide)).wrapAll \"<div class=\\\"rock-canvas\\\"></div>\"\n      .wrapAll \"<div class=\\\"rock-outer\\\"><div class=\\\"rock-inner\\\"></div></div>\"\n      $(@settings.selector.content, @element).wrap '<div class=\"rock-content-wrapper\"></div>'\n      $(@settings.selector.background, @element).wrap '<div class=\"rock-background-wrapper\"></div>'\n      $(@settings.selector.layer, @element).wrap '<div class=\"rock-layer-wrapper\"></div>'\n      return\n\n    # Set the z-index of each of the @layers\n    #\n    @setup_layers = =>\n      @slides.each (si, slide) =>\n        layers = $(\".rock-layer-wrapper\", $(slide))\n        layer_count = layers.length\n        layers.each (li, layer) =>\n          $(layer).css \"z-index\", @settings.layer_index + layer_count - li\n      return\n\n    # Setup video events at slide start for HTML5, YouTube and Vimeo videos\n    #\n    @setup_videos = =>\n      delay = 500\n      interval = undefined\n      i = 0\n      tries = 10\n\n      # Handle background videos\n      $('.rock-video-background').each (index, background) ->\n        unless $(background).hasClass 'rock-object'\n          $(background).addClass 'rock-object'\n        return\n\n      $(\"video.rock-video\", @element).attr \"data-rock-video-type\", \"html5\"\n      $(\"iframe[data-rock-src*=\\\"youtube.com\\\"].rock-video\", @element).attr \"data-rock-video-type\", \"youtube\"\n      $(\"iframe[data-rock-src*=\\\"vimeo.com\\\"].rock-video\", @element).attr \"data-rock-video-type\", \"vimeo\"\n\n      $(@settings.selector.video, @element).each (i, el) =>\n        $video = $(el)\n        volume = $video.attr(\"data-rock-volume\")\n        controls = ($video.attr(\"data-rock-controls\") is \"true\")\n        pause_slider= ($video.attr(\"data-rock-pause-slider\") is \"true\")\n        random_id = \"rock-video-\" + Math.floor((Math.random() * 1000) + 1)\n        volume = (if isNaN(volume) then 0 else volume)\n        $video.attr \"id\", random_id  unless $video.attr(\"id\")?\n        id = $video.attr(\"id\")\n        src = $video.attr(\"data-rock-src\")\n\n        # HTML5\n        if $video.attr(\"data-rock-video-type\") is \"html5\"\n          $video.get(0).volume = volume\n          $video.attr \"controls\", \"controls\"  if controls is true\n          if @settings.autoplay is true and pause_slider is true\n            $video.on \"play\", =>\n              @pause_timer()\n              return\n\n            $video.on \"pause ended\", =>\n              @unpause_timer()\n              return\n\n\n        # YouTube\n        if $video.attr(\"data-rock-video-type\") is \"youtube\"\n          video_id = undefined\n          separator = undefined\n\n          if src.indexOf(\"enablejsapi=1\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?enablejsapi=1\"\n            else\n              $video.attr \"src\", src + \"&enablejsapi=1\"\n            src = $video.attr(\"src\")\n\n          if src.indexOf(\"playerapiid=\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?playerapiid=\" + id\n            else\n              $video.attr \"src\", src + \"&playerapiid=\" + id\n            src = $video.attr(\"src\")\n\n          unless src.indexOf(\"embed\") is \"-1\"\n            video_id = src.split(\"/\")\n            video_id = video_id[video_id.length - 1]\n            separator = video_id.indexOf(\"?\")\n            video_id = video_id.substring(0, separator)  unless separator is -1\n          else\n            video_id = src.split(\"v=\")[1]\n            separator = video_id.indexOf(\"&\")\n            video_id = video_id.substring(0, separator)  unless separator is -1\n\n          $video.load =>\n            @youtube_player[id] = new YT.Player(id,\n              height: \"720\"\n              width: \"1280\"\n              video_id: video_id\n              events:\n                onStateChange: (e) =>\n                  @pause_timer()  if e.data is 1\n                  @unpause_timer()  if e.data is 2 or e.data is 0\n            )\n\n            i = 0\n            interval = setInterval(=>\n              i++\n              if i is tries\n                clearInterval interval\n              else if not @youtube_player[id]? or typeof @youtube_player[id].setVolume isnt \"function\"\n                return\n              else\n                clearInterval interval\n              @youtube_player[id].setVolume volume\n            , delay)\n            return\n\n        # Vimeo\n        if $video.attr(\"data-rock-video-type\") is \"vimeo\"\n          if src.indexOf(\"api=1\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?api=1\"\n            else\n              $video.attr \"src\", src + \"&api=1\"\n            src = $video.attr(\"src\")\n          if src.indexOf(\"player_id=\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?player_id=\" + id\n            else\n              $video.attr \"src\", src + \"&player_id=\" + id\n            src = $video.attr(\"src\")\n          $video.load =>\n            @vimeo_player[id] = $f(id)\n            @vimeo_player[id].addEvent \"ready\", =>\n              $video.attr \"data-rock-ready\", \"true\"\n              @vimeo_player[id].api \"setVolume\", volume\n              if @settings.autoplay is true and pause_slider is true\n                @vimeo_player[id].addEvent \"play\", @pause_timer\n                @vimeo_player[id].addEvent \"pause\", @unpause_timer\n                @vimeo_player[id].addEvent \"finish\", @unpause_timer\n            return\n        return\n\n      $(@settings.selector.video_cover, @element).each (i, el) =>\n        $cover = $(el)\n        $parent = $cover.parent()\n        $video = $(@settings.selector.video, $parent)\n        type = $video.attr(\"data-rock-video-type\")\n        id = $video.attr(\"id\")\n\n        switch type\n          when \"html5\"\n            $cover.on \"click\", =>\n              $video.get(0).play()\n              $cover.velocity \"fadeOut\"\n              return\n\n          when \"youtube\"\n            $cover.on \"click\", =>\n              @youtube_player[id].playVideo()\n              $cover.velocity \"fadeOut\"\n              return\n\n          when \"vimeo\"\n            $cover.on \"click\", =>\n              @vimeo_player[id].api \"play\"\n              $cover.velocity \"fadeOut\"\n              return\n\n        return\n      return\n\n    # Handle autoplay timeouts using a timeout timeline\n    #\n    video_timeline = {}\n\n    # Handle video events at slide start for HTML5, YouTube and Vimeo videos\n    #\n    @handle_videos = (previous, current) ->\n      $previous = @slides.eq(previous)\n      $current = @slides.eq(current)\n\n      # Pause or stop videos from previous slide\n      if previous != -1\n        $(@settings.selector.video, $previous).each =>\n          $video = $(` this `)\n          id = $video.attr('id')\n          reset = $video.attr('data-rock-reset') == 'true'\n          clearTimeout video_timeline[id]\n\n          # HTML5\n          if $video.attr('data-rock-video-type') == 'html5'\n            $video.get(0).pause()\n            if reset\n              setTimeout (=>\n                $video.get(0).current_time = 0\n                return\n              ), @cache[current].background[0].animation[0].duration\n\n          # Youtube\n          if $video.attr('data-rock-video-type') == 'youtube'\n            @youtube_player[id].pauseVideo()\n            if reset\n              setTimeout (=>\n                @youtube_player[id].stopVideo()\n                return\n              ), @cache[current].background[0].animation[0].duration\n\n          # Vimeo\n          if $video.attr('data-rock-video-type') == 'vimeo'\n            @vimeo_player[id].api 'pause'\n            if reset\n              setTimeout (=>\n                @vimeo_player[id].api 'unload'\n                return\n              ), @cache[current].background[0].animation[0].duration\n          return\n\n      # Play videos from current slide\n      $(@settings.selector.video, $current).each =>\n        $video = $(` this `)\n        id = $video.attr('id')\n        delay = 500\n        interval = undefined\n        i = 0\n        tries = 10\n        autoplay = $video.attr('data-rock-autoplay') == 'true'\n        autoplay_time = if $video.attr('data-rock-autoplay-time')? then parseInt($video.attr('data-rock-autoplay-time'), 10) else 100\n        pause_slider = $video.attr('data-rock-pause-slider') == 'true'\n\n        # HTML5\n        if $video.attr('data-rock-video-type') == 'html5'\n          if autoplay == true\n            video_timeline[id] = setTimeout((->\n              $video.get(0).play()\n              return\n            ), autoplay_time)\n\n        # Youtube\n        if $video.attr('data-rock-video-type') == 'youtube'\n          if autoplay == true\n            i = 0\n            interval = setInterval((=>\n              i++\n              if i == tries\n                clearInterval interval\n              else if !defined(@youtube_player[id]) or typeof @youtube_player[id].playVideo != 'function'\n                return\n              else\n                clearInterval interval\n              video_timeline[id] = setTimeout((=>\n                @youtube_player[id].playVideo()\n                return\n              ), autoplay_time)\n              return\n            ), delay)\n\n        # Vimeo\n        if $video.attr('data-rock-video-type') == 'vimeo'\n          if autoplay == true\n            i = 0\n            interval = setInterval((=>\n              i++\n              if i == tries\n                clearInterval interval\n              else if !$video.attr('data-rock-ready')? or typeof @vimeo_player[id].api != 'function'\n                return\n              else\n                clearInterval interval\n              video_timeline[id] = setTimeout((->\n                Froogaloop(id).api 'play'\n                return\n              ), autoplay_time)\n              return\n            ), delay)\n        return\n      return\n\n    # Recompute every relevant size\n    #\n    @refresh = =>\n      @window_width = @window.width()\n      @window_height = @window.height()\n\n      @parent_width = @parent.width()\n      @parent_height = @parent.height()\n\n      @element_width = @parent_width\n      @element_height = @element_width / @settings.width * @settings.height\n\n      @setup_content()\n      @setup_layout()\n\n      @resize_grid()\n      @resize_thumbnails()  if @settings.thumbnails is true\n\n      return\n\n\n    # Binds the slider window resize event to cache current window\n    # width and height and to set the layout up\n    #\n    @bind_resize = =>\n      @window.resize =>\n        @refresh()\n        @set_responsive_context()\n        return\n      return\n\n    # Set current responsive range parameter as xs,sm,md or lg\n    #\n    @set_responsive_context = =>\n      if @window_width >= @settings.screen_size.xlg\n        @current_responsive_size = 'xlg'\n      else if @window_width >= @settings.screen_size.lg\n        @current_responsive_size = 'lg'\n      else if @window_width >= @settings.screen_size.md\n        @current_responsive_size = 'md'\n      else if @window_width >= @settings.screen_size.sm\n        @current_responsive_size = 'sm'\n      else\n        @current_responsive_size = 'xs'\n\n      return\n\n    # Bind the window scroll event to fade content on scroll down\n    #\n    @bind_scroll = =>\n      #@window.on 'scroll', =>\n      #  return\n      return\n\n    # Scroll fade a the rock-slider content if the current scroll is greater than\n    # the slider's top position\n    #\n    # @param position [Fixnum] Current scrolling position\n    #\n    @enable_content_parallax = ->\n      $(@settings.selector.content, @element).each (index, element) =>\n        settings = $.extend {}, @settings.content_parallax_data,\n          reset: true\n          source: @outer\n\n        $(element).visuallax settings\n        return\n\n      return\n\n    # Parallax images\n    #\n    # @param position [Fixnum] Current scrolling position\n    #\n    @enable_canvas_parallax = ->\n      @slides.each (index, slide) =>\n        settings = $.extend {}, @settings.canvas_parallax_data,\n          parent: @outer\n          source: @inner\n          reset: true\n\n        if @cache[index].background[0].canvas_parallax\n          $('.rock-background-wrapper', $(slide)).visuallax settings\n\n          if @settings.canvas_parallax_layers\n            $(@settings.selector.layer, $(slide)).each (li, layer) =>\n              if @cache[index].layer[li].canvas_parallax\n                settings = $.extend {}, @cache[index].layer[li].canvas_parallax_data,\n                  parent: @outer\n                  source: @inner\n                  reset: true\n\n                $(layer).visuallax settings\n              return\n        return\n      return\n\n\n    # Add progress bar to the @container\n    #\n    @add_progress_bar = =>\n      position = (if @settings.progress_position is \"top\" then \"rock-progress-top\" else \"rock-progress-bottom\")\n\n      html = \"\"\n      html += \"<div class=\\\"rock-progress \" + position + \" \" + @settings.progress_class + \"\\\">\"\n      html += \"<div class=\\\"rock-progress-bar\\\">\"\n      html += \"</div>\"\n      html += \"</div>\"\n      @element.prepend html\n\n      @progress = {}\n      @progress.element = $(\".rock-progress\", @element)\n      @progress.bar = $(\".rock-progress-bar\", @element)\n\n      return\n\n    # Prevent image dragging\n    #\n    @prevent_dragging = =>\n      $(\"img\", @element).on \"dragstart\", (event) =>\n        event.preventDefault()\n        return\n      return\n\n    # Add pagination bullets to the slider\n    #\n    @add_pagination = =>\n      position = (if @settings.pagination_position is \"inside\" then \"rock-pagination-inside\" else \"rock-pagination-outside\")\n\n      # Don't add pagination if we have only one slide\n      return if @slides_length == 1\n\n      html = \"\"\n      html += \"<div class=\\\"rock-pagination \" + position + \" \" + @settings.pagination_class + \"\\\">\"\n      i = 0\n      while i < @slides_length\n        html += \"<div class=\\\"rock-pagination-bullet\\\"></div>\"\n        i++\n      html += \"</div>\"\n      $pagination = $(html)\n\n      if @settings.pagination_position is \"inside\"\n        @element.prepend $pagination\n      else\n        @element.after $pagination\n\n      @pagination = $(\".rock-pagination-bullet\", $pagination)\n      @pagination.each (i, el) =>\n        $bullet = $(el)\n        $bullet.on \"click\", =>\n          @pagination.filter(\".active\").removeClass \"active\"\n          $bullet.addClass \"active\"\n          @slide i\n          return\n        return\n      return\n\n    # Add scroller item to @and bind click action\n    #\n    @add_scroller = =>\n      scroller = \"<div class=\\\"rock-scroller-wrapper rock-scroller-\" + @settings.scroller_position + \"\\\">\"\n      scroller += @settings.scroller_markup\n      scroller += \"</div>\"\n\n      @scroller = $ scroller\n      @element.prepend @scroller\n\n      @scroller.on \"click\", =>\n        $(\"html\").velocity \"scroll\",\n          offset: @element.height()\n          mobileHA: true\n          duration: 1000\n        return\n      return\n\n\n    # Add thumbnails underneath our slider\n    #\n    @add_thumbnails = =>\n      thumbs_count = @settings.thumbnails_visible.desktop\n      if @window_width < 768\n        thumbs_count = @settings.thumbnails_visible.phone\n      else if @window_width < 992\n        thumbs_count = @settings.thumbnails_visible.tablet\n      else\n        thumbs_count = @settings.thumbnails_visible.laptop  if @window_width < 1200\n\n      width = @parent_width / thumbs_count\n      inner_width = width * @slides_length\n\n      html = \"\"\n      html += \"<div class=\\\"rock-thumbnails \" + @settings.thumbnails_class + \"\\\">\"\n      html += \"<div class=\\\"rock-thumbnails-inner\\\" style=\\\"width: \" + inner_width + \"px;\\\">\"\n      $.each @cache, (index, item) ->\n        html += \"<div class=\\\"rock-thumbnail-wrapper\\\" style=\\\"width: \" + width + \"px;\\\">\"\n        html += \"<img class=\\\"rock-thumbnail\\\" src=\\\"\" + item.thumbnail + \"\\\" alt=\\\"Slide \" + index + \"\\\" />\"\n        html += \"</div>\"\n      html += \"</div>\"\n      html += \"</div>\"\n\n      @thumbnails = {}\n      @thumbnails.wrapper = $(html)\n\n      if @settings.thumbnails_position is \"before\"\n        @element.before @thumbnails.wrapper\n      else\n        @element.after @thumbnails.wrapper\n\n      @thumbnails.inner = $(\".rock-thumbnails-inner\", @thumbnails.wrapper)\n      @thumbnails.elements = $(\".rock-thumbnail-wrapper\", @thumbnails.wrapper)\n\n      @thumbnails.elements.each (i, el) =>\n        $thumbnail = $(el)\n        $thumbnail.on \"click\", =>\n          @thumbnails.elements.filter(\".active\").removeClass \"active\"\n          $thumbnail.addClass \"active\"\n          @slide i\n          return\n        return\n\n      $(\"img\", @thumbnails.elements.eq(0)).each (i, el) =>\n        $(el).load =>\n          height = $(el).height()\n          @thumbnails.inner.height height\n          return\n        return\n\n      $(\"img\", @thumbnails.elements).on \"dragstart\", (event) ->\n        event.preventDefault()\n        return\n\n      ##@TODO\n      if @settings.touch is true\n        translate_thumbnails = 0\n        @thumbnails.elements.hammer().on \"pan\", (ev) =>\n          width = @thumbnails.inner.width()\n          parent_width = @thumbnails.wrapper.width()\n          translate_thumbnails -= ev[\"gesture\"][\"velocityX\"] * 7\n          if translate_thumbnails > 0\n            translate_thumbnails = 0\n          else\n            translate_thumbnails = parent_width - width  if translate_thumbnails < parent_width - width\n\n          if translate_thumbnails <= 0 and translate_thumbnails > parent_width - width\n            @thumbnails.inner.velocity\n              translateZ: 0\n              translateX: translate_thumbnails\n            , 1\n          ev.preventDefault()\n          return\n\n      return\n\n    # Resize thumbnails when window resize happens\n    #\n    @resize_thumbnails = =>\n      thumbs_count = @settings.thumbnails_visible.desktop\n\n      if @window_width < 768\n        thumbs_count = @settings.thumbnails_visible.phone\n      else if @window_width < 992\n        thumbs_count = @settings.thumbnails_visible.tablet\n      else\n        thumbs_count = @settings.thumbnails_visible.laptop  if @window_width < 1200\n\n      width = @parent_width / thumbs_count\n      inner_width = width * @slides_length\n      @thumbnails.inner.width inner_width\n      @thumbnails.elements.width width\n\n      height = undefined\n      height = $(\"img\", @thumbnails.elements.eq(0)).height()\n      @thumbnails.inner.height height\n      @thumbnails.inner.css\n        \"webkit-transform\": \"translate3d(0, 0, 0)\"\n        \"moz-transform\": \"translate3d(0, 0, 0)\"\n        \"ms-transform\": \"translate3d(0, 0, 0)\"\n        \"o-transform\": \"translate3d(0, 0, 0)\"\n        transform: \"translate3d(0, 0, 0)\"\n      , 0\n\n      return\n\n\n\n    # Get swipe direction and go to next or previous slide\n    #\n    @enable_touch = =>\n      @touch_object = new Hammer @element[0]\n      @touch_object.get('pan').set\n        direction: Hammer.DIRECTION_HORIZONTAL\n      @touch_object.on 'panleft panright', (event) =>\n        if event.eventType is Hammer.INPUT_START\n          @element.addClass 'rock-dragging'\n\n        else if event.eventType is Hammer.INPUT_END or event.eventType is Hammer.INPUT_CANCEL\n          @element.removeClass 'rock-dragging'\n\n          if event.direction is Hammer.DIRECTION_LEFT\n            @slide @current + 1\n          else if event.direction is Hammer.DIRECTION_RIGHT\n            @slide @current - 1\n\n        return\n      return\n\n    # Get scrolling direction and go to next or previous slide\n    #\n    @enable_mousewheel = =>\n      @element.mousewheel (event) =>\n        if event.deltaY == -1\n          @slide @current + 1\n        if event.deltaY == 1\n          @slide @current - 1\n        if @settings.prevent_scrolling is true\n          event.preventDefault()\n        return\n      return\n\n    # Get arrow input and slide to next or previous slide\n    #\n    @enable_keyboard = =>\n      $(document).keydown (e) =>\n        switch e.which\n          when 37 then @slide @current - 1\n          when 39 then @slide @current + 1\n          else return\n      return\n\n    # Enable next and previous buttons and bind the controls\n    #\n    @add_controls = =>\n      prev_html = ''\n      prev_html += '<a href=\"javascript:void(0);\" class=\"rock-control rock-prev ' + @settings.controls_class + '\">'\n      prev_html += '<div class=\"rock-control-inner\">'\n      if @settings.controls_thumbnail is true\n        prev_html += '<div class=\"rock-control-thumbnail\">'\n        prev_html += '<img src=\"\" alt=\"Previous Slide\" class=\"rock-control-image\"/>'\n        prev_html += '</div>'\n      prev_html += '<div class=\"rock-control-text\">'\n      prev_html += @settings.controls_html.prev\n      prev_html += '</div>'\n      prev_html += '</div>'\n      prev_html += '</a>'\n\n      next_html = ''\n      next_html += '<a href=\"javascript:void(0);\" class=\"rock-control rock-next ' + @settings.controls_class + '\">'\n      next_html += '<div class=\"rock-control-inner\">'\n      if @settings.controls_thumbnail is true\n        next_html += '<div class=\"rock-control-thumbnail\">'\n        next_html += '<img src=\"\" alt=\"Next Slide\" class=\"rock-control-image\"/>'\n        next_html += '</div>'\n      next_html += '<div class=\"rock-control-text\">'\n      next_html += @settings.controls_html.next\n      next_html += '</div>'\n      next_html += '</div>'\n      next_html += '</a>'\n\n      @outer.append prev_html + next_html\n      @prev_button = $(@settings.selector.prev, @element)\n      @next_button = $(@settings.selector.next, @element)\n\n      if @settings.controls_thumbnail is true\n        @prev_thumbnail = $('.rock-control-image', @prev_button)\n        @next_thumbnail = $('.rock-control-image', @next_button)\n\n      @prev_button.on 'click', =>\n        @slide @current - 1\n        return\n      @next_button.on 'click', =>\n        @slide @current + 1\n        return\n\n      return\n\n    # Get swipe direction and go to next or previous slide\n    #\n    @enable_pause_on_hover = =>\n      @element.on 'mouseenter', =>\n        @pause_timer()\n        return\n      @element.on 'mouseleave', =>\n        @unpause_timer()\n        return\n      return\n\n    # Pause autoplay when mouse is over @element\n    #\n    @pause_timer = =>\n      current_time = new Date\n      @timer.remaining = @timer.remaining - (current_time - (@timer.start))\n      clearTimeout @timer.clock\n      if @settings.progress is true\n        @progress.bar.velocity 'stop'\n      @element.trigger 'rock-slider.pause'\n      return\n\n    # Unpause timer when hovering over @element\n    #\n    @unpause_timer = =>\n      next_slide = if @current == -1 then 1 else @current + 1\n\n      @timer.start = new Date\n\n      clearTimeout @timer.clock\n\n      @timer.clock = setTimeout((=>\n        @slide next_slide\n        return\n      ), @timer.remaining)\n\n      if @settings.progress is true\n        @progress.bar.velocity { width: '100%' }, @timer.remaining\n\n      @element.trigger 'rock-slider.resume'\n\n      return\n\n    # Prevent image dragging on computers\n    #\n    @prevent_dragging = =>\n      $('img', @element).on 'dragstart', (event) ->\n        event.preventDefault()\n        return\n      return\n\n    # Add progress bar to the @container\n    #\n    @add_progress_bar = =>\n      position = if @settings.progress_position == 'top' then 'rock-progress-top' else 'rock-progress-bottom'\n      html = ''\n      html += '<div class=\"rock-progress ' + position + ' ' + @settings.progress_class + '\">'\n      html += '<div class=\"rock-progress-bar\">'\n      html += '</div>'\n      html += '</div>'\n      @element.prepend html\n      @progress = {}\n      @progress.element = $('.rock-progress', @element)\n      @progress.bar = $('.rock-progress-bar', @element)\n      return\n\n    # Set the content width and responsive font size utility\n    #\n    @setup_content = =>\n      $content = $('.rock-content-wrapper', @element)\n\n      # Responsive Content scaling\n      if @settings.content_scaling is true\n        @scale_content()\n      else\n        $content.width @outer.width()\n        $content.height @outer.height()\n      return\n\n\n    # Set content width and height if content scaling is enabled\n    #\n    @setup_scaling = =>\n      $content = $('.rock-content-wrapper', @element)\n\n      # Set reference content width, in relation with slide canvas default width\n      @scaling_reference = if @settings.content_width\n        @settings.content_width\n      else\n        @settings.width\n\n      $content.width @scaling_reference\n      $content.height @settings.width / @scaling_reference * @settings.height\n\n      return\n\n    # Calculate scaling values based on input settings\n    #\n    @scale_content = =>\n      $content = $('.rock-content-wrapper', @element)\n      origin_x = '0%'\n      origin_y = '0%'\n\n      # Calculate scaling width based on scaling factor\n      calculated_width = @outer.width()\n\n      # Calculate scaling value based on current width\n      @scaling_value = calculated_width / @scaling_reference * @settings.content_scaling_factor[@current_responsive_size]\n\n      # Center content based on current resize value 8\n      if @settings.content_scaling_factor[@current_responsive_size] == 1\n        $.Velocity.hook $content, 'translateX', \"0px\"\n      else\n        $.Velocity.hook $content, 'translateX', \"#{calculated_width * (1 - @settings.content_scaling_factor[@current_responsive_size]) / 2}px\"\n\n      # $.Velocity.hook $content, 'translateX', '-50%'\n      $.Velocity.hook $content, 'translateZ', '0px'\n      $.Velocity.hook $content, 'transformOriginX', origin_x\n      $.Velocity.hook $content, 'transformOriginY', origin_y\n      $.Velocity.hook $content, 'scaleX', @scaling_value\n      $.Velocity.hook $content, 'scaleY', @scaling_value\n\n      return\n\n    # Setup the rock-slider grid system\n    #\n    @setup_grid = =>\n      grid_is_set = false\n\n      $('.rock-background-wrapper', @element).each (index, element) =>\n        grid = @cache[index].background[0].grid\n\n        if grid.enabled\n          grid_is_set = true\n\n          cell_count = grid.columns * grid.rows\n\n          $(element).append $('<div class=\"rock-grid\"></div>')\n\n          background = $(@settings.selector.background, $(element))\n          for i in [0..cell_count - 1]\n            background.clone().appendTo($('.rock-grid', $(element))).wrap '<div class=\"rock-grid-cell\"></div>'\n\n          background.addClass 'rock-background-main'\n        return\n\n      # Set correct sizes for the grid system\n      @resize_grid()\n\n      @setup_layout() if grid_is_set\n\n      return\n\n    # If a grid is set, split the background images\n    #\n    @resize_grid = =>\n      $('.rock-background-wrapper', @element).each (index, element) =>\n        grid = @cache[index].background[0].grid\n\n        if grid.enabled\n          main_width = @inner.width()\n          main_height = @inner.height()\n\n          cell_width = main_width / grid.columns\n          cell_height = main_height / grid.columns\n\n          # Set cell width and height, percentage based\n          cells = $('.rock-grid-cell', $(element))\n          cells.width(cell_width).height cell_height\n\n          # Translate each grid and column background in order to maintain\n          # a perfect ratio and resemble the original image\n          for i in [0..grid.rows]\n            for j in [0..grid.columns]\n              this_cell = cells.eq(i * grid.columns + j)\n              $.Velocity.hook this_cell, 'translateX', \"#{cell_width * j}px\"\n              $.Velocity.hook this_cell, 'translateY', \"#{cell_height * i}px\"\n\n              this_background = $(@settings.selector.background, this_cell)\n              this_background.width(main_width).height main_height\n              $.Velocity.hook this_background, 'translateX', \"-#{cell_width * j}px\"\n              $.Velocity.hook this_background, 'translateY', \"-#{cell_height * i}px\"\n        return\n      return\n\n    # Clears all the set timeouts for the chosen slide in order to stop all\n    # programmed animations.\n    #\n    # @version2.0 Loop timeouts must also be cleared after every slide\n    #\n    @clear_timeouts = (i) ->\n      $.each @cache[i].background[0].animation, (index) =>\n        clearTimeout @cache[i].background[0].animation[index].timeline\n        return\n      if 'loop_timeout' of @cache[i].background[0]\n        clearTimeout @cache[i].background[0].loop_timeout\n\n      $.each @cache[i].layer, (index) =>\n        $.each @cache[i].layer[index].animation, (animateIndex) =>\n          clearTimeout @cache[i].layer[index].animation[animateIndex].timeline\n          return\n        if 'loop_timeout' of @cache[i].layer[index]\n          clearTimeout @cache[i].layer[index].loop_timeout\n        return\n\n      $.each @cache[i].object, (index) =>\n        $.each @cache[i].object[index].animation, (animateIndex) =>\n          clearTimeout @cache[i].object[index].animation[animateIndex].timeline\n          return\n        if 'loop_timeout' of @cache[i].object[index]\n          clearTimeout @cache[i].object[index].loop_timeout\n        return\n\n      return\n\n\n    # Helper methods to slide to next slide or to the previous one\n    #\n    @next = =>\n      @slide @current + 1\n      return\n\n    @prev = =>\n      @slide @current - 1\n      return\n\n    # Helper methods to pause or unpause the slider\n    #\n    @pause = =>\n      @pause_timer()\n      return\n\n    @resume = =>\n      @unpause_timer()\n      return\n\n    @initialize()\n\n\n  # Keeps all RockSlider layout definitions to be instantiated when needed\n  $.rockSlider.layouts = {}\n\n  # Add a new RockSlider layout at runtime\n  $.rockSlider.add_layout = (name, layout) ->\n    $.rockSlider.layouts[name] = layout\n\n  # Lightweight plugin wrapper that prevents multiple instantiations.\n  #\n  $.fn.rockSlider = (opts) ->\n    @each (index, element) ->\n      unless $.data element, \"rock-slider\"\n        $.data element, \"rock-slider\", new $.rockSlider element, opts\n\n) window.jQuery, window, document\n\n\n# A factory that uses AMD, CommonJS or window globals to\n# create the jQuery plugin.\n# do (plugin = rock-slider, window) ->\n#   hasDefine  = typeof define is \"function\" and define.amd?\n#   hasExports = typeof module isnt \"undefined\" and module.exports?\n#\n#   # AMD.\n#   if hasDefine\n#     define [\"jquery\"], plugin\n#\n#   # NodeJS/CommonJS.\n#   else if hasExports\n#     module.exports = plugin require \"jquery\"\n#\n#   # Window globals.\n#   else\n#     plugin window.jQuery or window.$\n"]}