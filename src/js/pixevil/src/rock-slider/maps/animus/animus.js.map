{"version":3,"sources":["animus/animus.coffee"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;AAAA;AAAA,MAAA;;EAkBA,CAAC,SAAC,CAAD,EAAI,MAAJ,EAAY,QAAZ;IACC;IAEA,CAAC,CAAC,MAAF,GAAW,SAAC,QAAD,EAAW,MAAX;AAET,UAAA;MAAA,KAAA,GAAQ;MAGR,KAAK,CAAC,QAAN,GACE;QAAA,QAAA,EAAU,GAAV;QACA,MAAA,EAAQ,OADR;QAEA,KAAA,EACE;UAAA,OAAA,EAAS,CAAT;UACA,OAAA,EAAS,MADT;UAEA,OAAA,EAAS,MAFT;UAGA,OAAA,EAAS,MAHT;UAIA,UAAA,EAAY,CAJZ;UAKA,UAAA,EAAY,CALZ;UAMA,UAAA,EAAY,CANZ;UAOA,KAAA,EAAO,CAPP;UAQA,MAAA,EAAQ,CARR;UASA,MAAA,EAAQ,CATR;UAUA,MAAA,EAAQ,CAVR;UAWA,KAAA,EAAO,IAXP;UAYA,KAAA,EAAO,IAZP;SAHF;QAgBA,QAAA,EAAU,IAhBV;;MAmBF,KAAK,CAAC,MAAN,GAAe;QAAA,KAAA,EACb;UAAA,OAAA,EAAS,CAAT;UACA,OAAA,EAAS,OADT;UAEA,OAAA,EAAS,OAFT;UAGA,OAAA,EAAS,OAHT;UAIA,UAAA,EAAY,OAJZ;UAKA,UAAA,EAAY,OALZ;UAMA,UAAA,EAAY,OANZ;UAOA,KAAA,EAAO,CAPP;UAQA,MAAA,EAAQ,CARR;UASA,MAAA,EAAQ,CATR;UAUA,MAAA,EAAQ,CAVR;UAWA,KAAA,EAAO,MAXP;UAYA,KAAA,EAAO,MAZP;SADa;;MAiBf,IAAC,CAAA,IAAD,GAAQ,SAAA;QACN,CAAC,CAAC,MAAF,CAAS,KAAK,CAAC,QAAf,EAAyB,QAAzB;QACA,CAAC,CAAC,MAAF,CAAS,KAAK,CAAC,MAAf,EAAuB,MAAvB;MAFM;MAWR,IAAC,CAAA,GAAD,GAAO,SAAC,MAAD;AACL,YAAA;QAAA,SAAA,GAAY;QAGZ,SAAS,CAAC,KAAV,GACE;UAAA,UAAA,EAAY,CAAZ;;QACF,SAAS,CAAC,QAAV,GAAqB,KAAK,CAAC,QAAQ,CAAC;QACpC,SAAS,CAAC,MAAV,GAAmB,KAAK,CAAC,QAAQ,CAAC;QAClC,SAAS,CAAC,QAAV,GAAqB;QAErB,IAAG,MAAA,KAAU,EAAV,IAAiB,gBAApB;AACE,iBAAO,UADT;;QAGA,MAAA,GAAS,MAAM,CAAC,KAAP,CAAa,GAAb;QACT,CAAC,CAAC,IAAF,CAAO,MAAP,EAAe,SAAC,MAAD;AACb,cAAA;UAAA,CAAA,GAAI;UAEJ,MAAA,GAAS,CAAC,CAAC,IAAF,CAAO,IAAP;UACT,IAAG,QAAQ,CAAC,IAAT,CAAc,MAAd,CAAH;YACE,MAAA,GAAS,MAAM,CAAC,OAAP,CAAe,UAAf,EAA2B,GAA3B,CAA+B,CAAC,OAAhC,CAAwC,UAAxC,EAAoD,GAApD,EADX;;UAEA,MAAA,GAAS,MAAM,CAAC,KAAP,CAAa,KAAb;UACT,MAAA,GAAS,CAAC,CAAC,IAAF,CAAO,MAAP,EAAe,SAAC,CAAD;mBACtB,CAAA,KAAK;UADiB,CAAf;AAGT,kBAAO,MAAO,CAAA,CAAA,CAAd;AAAA,iBAIO,UAJP;AAAA,iBAImB,OAJnB;cAKI,IAAmC,iBAAnC;gBAAA,KAAA,CAAM,UAAN,EAAkB,MAAO,CAAA,CAAA,CAAzB,EAAA;;cACA,SAAS,CAAC,QAAV,GAAqB,QAAA,CAAS,MAAO,CAAA,CAAA,CAAhB;AAFN;AAJnB,iBAWO,QAXP;cAYI,IAAmC,iBAAnC;gBAAA,KAAA,CAAM,UAAN,EAAkB,MAAO,CAAA,CAAA,CAAzB,EAAA;;cAEA,IAAG,MAAO,CAAA,CAAA,CAAG,CAAA,CAAA,CAAV,KAAgB,GAAnB;gBACE,MAAO,CAAA,CAAA,CAAP,GAAY,MAAO,CAAA,CAAA,CAAE,CAAC,KAAV,CAAgB,CAAhB;gBACZ,MAAO,CAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB,CAAP,GAA4B,MAAO,CAAA,MAAM,CAAC,MAAP,GAAgB,CAAhB,CAAkB,CAAC,KAA1B,CAAgC,CAAhC,EAAmC,CAAC,CAApC;gBAC5B,SAAS,CAAC,MAAV,GAAmB,MAAM,CAAC,KAAP,CAAa,CAAb,CAAe,CAAC,GAAhB,CAAoB,SAAC,IAAD;yBACrC,UAAA,CAAW,IAAX;gBADqC,CAApB,EAHrB;eAAA,MAAA;gBAME,SAAS,CAAC,MAAV,GAAmB,MAAO,CAAA,CAAA,EAN5B;;AAHG;AAXP,iBA0BO,SA1BP;AAAA,iBA0BkB,MA1BlB;cA2BI,SAAA,GAAY;AAEZ,sBAAO,MAAO,CAAA,CAAA,CAAd;AAAA,qBACO,IADP;kBACiB,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B;AAAvC;AADP,qBAEO,KAFP;kBAEkB,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B;AAAxC;AAFP;kBAGO,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,MAAO,CAAA,CAAA;AAH3C;AAHc;AA1BlB,iBAqCO,QArCP;cAsCI,SAAA,GAAY;cAGZ,CAAA,GAAI;AACJ,sBAAO,MAAO,CAAA,CAAA,CAAd;AAAA,qBACO,GADP;AAAA,qBACY,GADZ;AAAA,qBACiB,GADjB;kBAC0B,SAAA,GAAY,QAAA,GAAQ,CAAC,MAAO,CAAA,CAAA,CAAE,CAAC,WAAV,CAAA,CAAD;AAA7B;AADjB;kBAEO,EAAE;AAFT;cAKA,IAAG,mBAAH;gBACE,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,MAAO,CAAA,CAAA,EADtC;eAAA,MAAA;gBAGE,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA,EAHlD;;AAVG;AArCP,iBAuDO,OAvDP;cAwDI,SAAA,GAAY;cAGZ,CAAA,GAAI;AACJ,sBAAO,MAAO,CAAA,CAAA,CAAd;AAAA,qBACO,GADP;AAAA,qBACY,GADZ;AAAA,qBACiB,GADjB;kBAC0B,SAAA,GAAY,OAAA,GAAO,CAAC,MAAO,CAAA,CAAA,CAAE,CAAC,WAAV,CAAA,CAAD;AAA5B;AADjB;kBAEO,EAAE;AAFT;cAKA,IAAG,mBAAH;AACE,wBAAO,MAAO,CAAA,CAAA,CAAd;AAAA,uBACO,IADP;oBACiB,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,SAAA,CAAU,GAAV,EAAe,CAAf,EAAkB,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA,CAArC;AAAvC;AADP,uBAEO,MAFP;oBAEmB,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,SAAA,CAAU,GAAV,EAAe,CAAf,EAAkB,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA,CAArC;AAAzC;AAFP;oBAGO,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,MAAO,CAAA,CAAA;AAH3C,iBADF;eAAA,MAAA;gBAME,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,SAAA,CAAU,GAAV,EAAe,CAAf,EAAkB,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA,CAArC,EAN/B;;AAVG;AAvDP,iBA4EO,MA5EP;cA6EI,SAAA,GAAY;cAGZ,CAAA,GAAI;AACJ,sBAAO,MAAO,CAAA,CAAA,CAAd;AAAA,qBACO,GADP;AAAA,qBACY,GADZ;kBACqB,SAAA,GAAY,QAAA,GAAQ,CAAC,MAAO,CAAA,CAAA,CAAE,CAAC,WAAV,CAAA,CAAD;AAA7B;AADZ;kBAEO,EAAE;AAFT;cAKA,IAAG,mBAAH;gBACE,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,MAAO,CAAA,CAAA,EADtC;eAAA,MAAA;gBAGE,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA,EAHlD;;AAVG;AA5EP,iBA+FO,MA/FP;AAAA,iBA+Fe,OA/Ff;AAAA,iBA+FwB,WA/FxB;cAgGI,SAAA,GAAY;cAGZ,CAAA,GAAI;AACJ,sBAAO,MAAO,CAAA,CAAA,CAAd;AAAA,qBACO,MADP;AAAA,qBACe,OADf;AAAA,qBACwB,GADxB;kBACiC,SAAA,GAAY;AAArB;AADxB,qBAEO,IAFP;AAAA,qBAEa,MAFb;AAAA,qBAEqB,GAFrB;kBAE8B,SAAA,GAAY;AAArB;AAFrB,qBAGO,GAHP;kBAGgB,SAAA,GAAY;AAArB;AAHP;kBAIO,EAAE;AAJT;cAOA,IAAG,mBAAH;gBACG,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,MAAO,CAAA,CAAA,EADvC;eAAA,MAAA;AAGE,wBAAO,MAAO,CAAA,CAAA,GAAI,CAAJ,CAAd;AAAA,uBACO,GADP;AAAA,uBACY,GADZ;AAAA,uBACiB,GADjB;oBAC0B,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA;AAAzD;AADjB,uBAEO,IAFP;AAAA,uBAEa,IAFb;AAAA,uBAEmB,MAFnB;oBAE+B,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA;AAA5D;AAFnB,uBAGO,KAHP;AAAA,uBAGc,MAHd;AAAA,uBAGsB,OAHtB;oBAGmC,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,SAAA,CAAU,GAAV,EAAe,CAAC,CAAhB,EAAmB,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA,CAAtC;AAA1C;AAHtB;oBAIO,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,KAAK,CAAC,MAAM,CAAC,KAAM,CAAA,SAAA;AAJvD,iBAHF;;AAZoB;AA/FxB;cAwHI,SAAA,GAAY,MAAO,CAAA,CAAA;cAGnB,IAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,YAAlC,EAAA,SAAA,MAAD,CAAA,IACA,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,cAAlC,EAAA,SAAA,MAAD,CADA,IAEA,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,CAAC,MAAlC,EAAA,SAAA,MAAD,CAFH;gBAGE,SAAS,CAAC,KAAM,CAAA,SAAA,CAAhB,GAA6B,MAAO,CAAA,CAAA,EAHtC;eAAA,MAMK,IAAG,SAAA,IAAa,CAAC,CAAC,QAAQ,CAAC,SAA3B;gBACH,SAAS,CAAC,KAAV,GAAkB,UADf;eAAA,MAAA;gBAKH,KAAA,CAAM,SAAN,EAAiB,MAAO,CAAA,CAAA,CAAxB,EALG;;AAjIT;QAVa,CAAf;eAoJA;MAlKK;MA4KP,IAAC,CAAA,KAAD,GAAS,SAAC,KAAD,EAAQ,IAAR,EAAc,IAAd;AACP,YAAA;QAAA,KAAA,GAAQ;QACR,IAAG,IAAA,KAAQ,IAAX;UACE,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,SAAZ,EAAuB,SAAC,IAAD;YACrB,IAAU,CAAC,CAAC,IAAF,CAAO,IAAC,CAAA,KAAR,CAAA,KAAkB,QAA5B;AAAA,qBAAA;;YACA,CAAC,CAAC,IAAF,CAAO,IAAC,CAAA,KAAR,EAAe,SAAC,GAAD;cACb,IAAG,CAAC,CAAC,GAAA,IAAO,KAAR,CAAD,IAAoB,GAAA,IAAO,KAAK,CAAC,QAAQ,CAAC,KAA7C;gBACE,KAAM,CAAA,GAAA,CAAN,GAAa,KAAK,CAAC,QAAQ,CAAC,KAAM,CAAA,GAAA,EADpC;;YADa,CAAf;UAFqB,CAAvB,EADF;SAAA,MAAA;UASE,CAAC,CAAC,IAAF,CAAO,IAAP,EAAa,SAAC,GAAD;YACX,IAAG,CAAC,CAAC,GAAA,IAAO,KAAR,CAAD,IAAoB,GAAA,IAAO,KAAK,CAAC,QAAQ,CAAC,KAA7C;cACE,KAAM,CAAA,GAAA,CAAN,GAAa,KAAK,CAAC,QAAQ,CAAC,KAAM,CAAA,GAAA,EADpC;;UADW,CAAb,EATF;;eAeA,CAAC,CAAC,MAAF,CAAS,KAAT,EAAgB,KAAhB;MAjBO;MA0BT,IAAC,CAAA,SAAD,GAAa,SAAC,KAAD,EAAQ,OAAR;AACX,YAAA;QAAA,MAAA,GAAS;QAET,OAAA,GAAa,OAAH,GACR,CAAC,CAAC,MAAF,CAAS,EAAT,EAAa,KAAK,CAAC,QAAQ,CAAC,KAA5B,EAAmC,OAAnC,CADQ,GAGR,KAAK,CAAC,QAAQ,CAAC;AAEjB,aAAA,YAAA;UACE,IAAG,KAAM,CAAA,GAAA,CAAN,KAAgB,OAAQ,CAAA,GAAA,CAA3B;YACE,MAAO,CAAA,GAAA,CAAP,GAAc,CAAC,OAAQ,CAAA,GAAA,CAAT,EAAe,KAAM,CAAA,GAAA,CAArB,EADhB;WAAA,MAAA;YAGE,MAAO,CAAA,GAAA,CAAP,GAAc,KAAM,CAAA,GAAA,EAHtB;;AADF;AAMA,eAAO;MAdI;MAkBb,IAAA,GACE;QAAA,GAAA,EAAK,SAAC,CAAD,EAAI,CAAJ;iBACH,CAAA,GAAI;QADD,CAAL;QAEA,GAAA,EAAK,SAAC,CAAD,EAAI,CAAJ;iBACH,CAAA,GAAI;QADD,CAFL;QAIA,GAAA,EAAK,SAAC,CAAD,EAAI,CAAJ;iBACH,CAAA,GAAI;QADD,CAJL;QAMA,GAAA,EAAK,SAAC,CAAD,EAAI,CAAJ;iBACH,CAAA,GAAI;QADD,CANL;;MAWF,SAAA,GAAY,SAAC,EAAD,EAAK,CAAL,EAAQ,CAAR;AACV,YAAA;QAAA,IAAG,CAAC,CAAC,OAAO,CAAP,KAAY,QAAZ,IAAwB,CAAA,YAAa,MAAtC,CAAJ;UACE,CAAA,GAAI,CAAC,CAAC,QAAF,CAAA,EADN;;QAEA,IAAG,CAAC,CAAC,OAAO,CAAP,KAAY,QAAZ,IAAwB,CAAA,YAAa,MAAtC,CAAJ;UACE,CAAA,GAAI,CAAC,CAAC,QAAF,CAAA,EADN;;QAGA,GAAA,GAAM;QAEN,MAAA,GAAS,CAAC,CAAC,KAAF,CAAQ,GAAR;QACT,MAAA,GAAS,CAAC,CAAC,KAAF,CAAQ,GAAR;QAET,CAAA,GAAO,MAAA,KAAU,IAAb,GAAuB,UAAA,CAAW,MAAO,CAAA,CAAA,CAAlB,CAAvB,GAAkD,UAAA,CAAW,CAAX;QACtD,CAAA,GAAO,MAAA,KAAU,IAAb,GAAuB,UAAA,CAAW,MAAO,CAAA,CAAA,CAAlB,CAAvB,GAAkD,UAAA,CAAW,CAAX;QAEtD,IAAG,MAAA,KAAU,IAAV,IAAmB,MAAA,KAAU,IAAhC;AACE,iBAAO,IAAK,CAAA,EAAA,CAAL,CAAS,CAAT,EAAY,CAAZ,CAAA,GAAiB,MAAO,CAAA,CAAA,EADjC;;QAGA,IAAG,MAAA,KAAU,IAAV,IAAmB,MAAA,KAAU,IAAhC;AACE,iBAAO,IAAK,CAAA,EAAA,CAAL,CAAS,CAAT,EAAY,CAAZ,CAAA,GAAiB,MAAO,CAAA,CAAA,EADjC;;QAGA,IAAG,MAAA,KAAU,IAAV,IAAmB,MAAA,KAAU,IAAhC;AACE,iBAAO,IAAK,CAAA,EAAA,CAAL,CAAS,CAAT,EAAY,CAAZ,CAAA,GAAiB,MAAO,CAAA,CAAA,EADjC;;eAGA,IAAK,CAAA,EAAA,CAAL,CAAS,CAAT,EAAY,CAAZ;MAvBU;MAyBZ,KAAA,GAAQ,SAAC,OAAD,EAAU,IAAV;AACN,YAAA;AAAA,gBAAO,OAAP;AAAA,eACO,UADP;YAEI,OAAA,GAAU,mCAAA,GAAoC,IAApC,GAAyC;AADhD;AADP;YAII,OAAA,GAAU,gCAAA,GAAiC,IAAjC,GAAsC;AAJpD;eAMA,OAAO,CAAC,KAAR,CAAc,WAAA,GAAY,OAA1B;MAPM;MAWR,IAAC,CAAA,IAAD,CAAA;IA7TS;EAHZ,CAAD,CAAA,CAqUE,MArUF,EAqUU,MArUV,EAqUkB,QArUlB;AAlBA","file":"animus/animus.js","sourceRoot":"/source/","sourcesContent":["###\n\n                  oo\n\n.d8888b. 88d888b. dP 88d8b.d8b. dP    dP .d8888b.\n88'  `88 88'  `88 88 88'`88'`88 88    88 Y8ooooo.\n88.  .88 88    88 88 88  88  88 88.  .88       88\n`88888P8 dP    dP dP dP  dP  dP `88888P' `88888P'\noooooooooooooooooooooooooooooooooooooooooooooooooo\n\n@plugin    jQuery\n@license   CodeCanyon Standard / Extended\n@author    Alex Grozav\n@company   Pixevil\n@website   http://pixevil.com\n@email     alex@grozav.com\n###\n\n(($, window, document) ->\n  'use strict'\n\n  $.animus = (defaults, finals) ->\n    # Animation Model\n    model = {}\n\n    # Model Default State\n    model.defaults =\n      duration: 600\n      easing: 'swing'\n      state:\n        opacity: 1\n        rotateX: '0deg'\n        rotateY: '0deg'\n        rotateZ: '0deg'\n        translateX: 0\n        translateY: 0\n        translateZ: 0\n        scale: 1\n        scaleX: 1\n        scaleY: 1\n        scaleZ: 1\n        skewX: '0%'\n        skewY: '0%'\n      timeline: null\n\n    # Model final State\n    model.finals = state:\n      opacity: 0\n      rotateX: '45deg'\n      rotateY: '45deg'\n      rotateZ: '45deg'\n      translateX: '-100%'\n      translateY: '-100%'\n      translateZ: '-100%'\n      scale: 2\n      scaleX: 2\n      scaleY: 2\n      scaleZ: 2\n      skewX: '100%'\n      skewY: '100%'\n\n    # Override default and final animus animation model\n    #\n    @init = ->\n      $.extend model.defaults, defaults\n      $.extend model.finals, finals\n      return\n\n    # Process an animation string of the form \"rotate 45, fade in\" into\n    # a usable VelocityJS animation object\n    #\n    # @var     string      The animation string to be modified, of the form\n    #                      move x 300px, fade in, scale up\n    #\n    @get = (string) ->\n      animation = {}\n\n      # Animation Object\n      animation.state =\n        translateZ: 0\n      animation.duration = model.defaults.duration\n      animation.easing = model.defaults.easing\n      animation.timeline = null\n\n      if string == '' or !string?\n        return animation\n\n      string = string.split ','\n      $.each string, (string)->\n        i = 0\n\n        string = $.trim(this)\n        if /\\(.*\\)/.test(string)\n          string = string.replace(/\\s*\\(\\s*/, ' ').replace(/\\s*\\)\\s*/, ' ')\n        string = string.split(/\\s+/)\n        string = $.grep string, (n) ->\n          n != \"\"\n\n        switch string[i]\n          # Animation Speed\n          #\n          # speed [800]\n          when 'duration', 'speed'\n            error 'argument', string[1] unless string[1]?\n            animation.duration = parseInt(string[1])\n\n          # Animation Easing\n          #\n          # easing [easeInOut]\n          when 'easing'\n            error 'argument', string[1] unless string[1]?\n\n            if string[1][0] == '['\n              string[1] = string[1].slice(1)\n              string[string.length - 1] = string[string.length - 1].slice(0, -1)\n              animation.easing = string.slice(1).map (item) ->\n                parseFloat item\n            else\n              animation.easing = string[1]\n\n\n          # Fade Animation\n          #\n          # fade [in, out] from 0 to 0.5\n          when 'opacity', 'fade'\n            parameter = 'opacity'\n\n            switch string[1]\n              when 'in' then animation.state[parameter] = 1\n              when 'out' then animation.state[parameter] = 0\n              else animation.state[parameter] = string[1]\n\n          # Rotate Animation\n          #\n          # rotate [x,y,z] [left,right] from 180 to 0\n          when 'rotate'\n            parameter = 'rotateZ'\n\n            # Get direction\n            i = 1\n            switch string[i]\n              when 'x', 'y', 'z' then parameter = \"rotate#{string[i].toUpperCase()}\"\n              else --i\n\n            # Get parameters\n            if string[++i]?\n              animation.state[parameter] = string[i]\n            else\n              animation.state[parameter] = model.finals.state[parameter]\n\n          # Scale Animation\n          #\n          # scale [up,down] from 0 to 1\n          when 'scale'\n            parameter = 'scale'\n\n            # Get direction\n            i = 1\n            switch string[i]\n              when 'x', 'y', 'z' then parameter = \"scale#{string[i].toUpperCase()}\"\n              else --i\n\n            # Get parameters\n            if string[++i]?\n              switch string[i]\n                when 'up' then animation.state[parameter] = operation('*', 1, model.finals.state[parameter])\n                when 'down' then animation.state[parameter] = operation('/', 1, model.finals.state[parameter])\n                else animation.state[parameter] = string[i]\n            else\n              animation.state[parameter] = operation('*', 1, model.finals.state[parameter])\n\n          # Skew Animation\n          #\n          # skew x from 0 to 1\n          when 'skew'\n            parameter = 'skewX'\n\n            # Get direction\n            i = 1\n            switch string[i]\n              when 'x', 'y' then parameter = \"rotate#{string[i].toUpperCase()}\"\n              else --i\n\n            # Get parameters\n            if string[++i]?\n              animation.state[parameter] = string[i]\n            else\n              animation.state[parameter] = model.finals.state[parameter]\n\n\n          # Translate Animation\n          #\n          # translate [x,y,z] from 0 to 100\n          when 'move', 'slide', 'translate'\n            parameter = 'translateX'\n\n            # Get direction\n            i = 1\n            switch string[i]\n              when 'left', 'right', 'x' then parameter = 'translateX'\n              when 'up', 'down', 'y' then parameter = 'translateY'\n              when 'z' then parameter = 'translateZ'\n              else --i\n\n            # Get parameters\n            if string[++i]?\n               animation.state[parameter] = string[i]\n            else\n              switch string[i - 1]\n                when 'x', 'y', 'z' then animation.state[parameter] = model.finals.state[parameter]\n                when 'in', 'up', 'left' then animation.state[parameter] = model.finals.state[parameter]\n                when 'out', 'down', 'right' then animation.state[parameter] = operation('*', -1, model.finals.state[parameter])\n                else animation.state[parameter] = model.finals.state[parameter]\n\n          # Other Animation\n          #\n          # animate\n          else\n            parameter = string[0]\n\n            # Check if we have a VelocityJS parameter\n            if (parameter in $.Velocity.CSS.Lists.transforms3D) ||\n               (parameter in $.Velocity.CSS.Lists.transformsBase) ||\n               (parameter in $.Velocity.CSS.Lists.colors)\n              animation.state[parameter] = string[1]\n\n            # Check if we have a VelocityJS redirect\n            else if parameter of $.Velocity.Redirects\n              animation.state = parameter\n\n            # Don't know how to handle this string\n            else\n              error 'unknown', string[0]\n\n        return\n\n      animation\n\n    # Set reset state by getting all the animation variables\n    # and setting them to the default values\n    #\n    # @param data [State] State which overwrites reset variables\n    # @param data [Object] Element states data in RockSlider\n    # @param deep [Boolean] Generate reset from an array of animations if true\n    #                       or from a single animation if false\n    #\n    @reset = (state, data, deep) ->\n      reset = {}\n      if deep == true\n        $.each data.animation, (anim)->\n          return if $.type(@state) is 'string'\n          $.each @state, (key) ->\n            if !(key of reset) and key of model.defaults.state\n              reset[key] = model.defaults.state[key]\n            return\n          return\n      else\n        $.each data, (key) ->\n          if !(key of reset) and key of model.defaults.state\n            reset[key] = model.defaults.state[key]\n          return\n\n\n      $.extend reset, state\n\n\n    # Set reset state by getting all the animation variables\n    # and setting them to the default values\n    #\n    # @param initial [State] Initial animation state\n    # @param final [State] Final animation state\n    #\n    @forcefeed = (final, initial) ->\n      result = {}\n\n      initial = if initial\n        $.extend {}, model.defaults.state, initial\n      else\n        model.defaults.state\n\n      for key of final\n        if final[key] isnt initial[key]\n          result[key] = [initial[key], final[key]]\n        else\n          result[key] = final[key]\n\n      return result\n\n    # Basic JSON calculator\n    #\n    calc =\n      '+': (a, b) ->\n        a + b\n      '-': (a, b) ->\n        a - b\n      '*': (a, b) ->\n        a * b\n      '/': (a, b) ->\n        a / b\n\n    # Helper function to add two variables a, b with a measurement unit suffix\n    #\n    operation = (op, x, y) ->\n      if !(typeof x == 'string' or x instanceof String)\n        x = x.toString()\n      if !(typeof y == 'string' or y instanceof String)\n        y = y.toString()\n\n      exp = /(-?[0-9]*)(px|%|deg)/i\n\n      matchx = x.match(exp)\n      matchy = y.match(exp)\n\n      x = if matchx != null then parseFloat(matchx[1]) else parseFloat(x)\n      y = if matchy != null then parseFloat(matchy[1]) else parseFloat(y)\n\n      if matchx != null and matchy != null\n        return calc[op](x, y) + matchx[2]\n\n      if matchx != null and matchy == null\n        return calc[op](x, y) + matchx[2]\n\n      if matchx == null and matchy != null\n        return calc[op](x, y) + matchy[2]\n\n      calc[op] x, y\n\n    error = (context, data) ->\n      switch context\n        when 'argument'\n          message = \"Missing animation argument for \\\"#{data}\\\".\"\n        else\n          message = \"Unknown animation parameter \\\"#{data}\\\".\"\n\n      console.error \"[Animus] #{message}\"\n\n    # Initialize Animus\n    #\n    @init()\n\n    return\n  return\n\n) jQuery, window, document\n"]}