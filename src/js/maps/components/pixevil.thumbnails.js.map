{"version":3,"sources":["components/thumbnails.coffee"],"names":[],"mappings":"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","file":"components/pixevil.thumbnails.js","sourceRoot":"/source/","sourcesContent":["(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.thumbnails = ->\n    @load = ->\n      # Get thumbnails count for the current responsive size\n      thumbs_count = @settings.thumbnails.visible[@current_responsive_size]\n\n      # Set parameters for horizontal or vertical thumbnails\n      # scrolling orientation\n      if @settings.thumbnails.orientation == 'horizontal'\n        individual_size = @element_width / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'width'\n      else if @settings.thumbnails.orientation == 'vertical'\n        individual_size = @element_height / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'height'\n\n      html = \"\"\n      html += \"<div class=\\\"rock-thumbnails #{@settings.thumbnails.class} #{@settings.thumbnails.orientation}\\\">\"\n      html += \"<div class=\\\"rock-thumbnails-inner\\\" style=\\\"#{css_param}: \" + inner_size + \"px;\\\">\"\n      $.each @cache, (index, item) ->\n        html += \"<div class=\\\"rock-thumbnail-wrapper\\\" style=\\\"#{css_param}: \" + individual_size + \"px;\\\">\"\n        html += \"<img class=\\\"rock-thumbnail\\\" src=\\\"\" + item.thumbnail + \"\\\" alt=\\\"Slide \" + index + \"\\\" />\"\n        html += \"</div>\"\n      html += \"</div>\"\n      html += \"</div>\"\n\n      @thumbnails = {}\n      @thumbnails.wrapper = $(html)\n\n      if @settings.thumbnails.position is \"before\"\n        @element.before @thumbnails.wrapper\n      else if @settings.thumbnails.position is \"after\"\n        @element.after @thumbnails.wrapper\n      else\n        @settings.thumbnails.position.append @thumbnails.wrapper\n\n      @thumbnails.inner = $(\".rock-thumbnails-inner\", @thumbnails.wrapper)\n      @thumbnails.elements = $(\".rock-thumbnail-wrapper\", @thumbnails.wrapper)\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        @thumbnails.size = @thumbnails.inner.width()\n        @thumbnails.parent_size = @thumbnails.wrapper.width()\n      else if @settings.thumbnails.orientation == 'vertical'\n        @thumbnails.size = @thumbnails.inner.height()\n        @thumbnails.parent_size = @thumbnails.wrapper.height()\n\n      @thumbnails.starting_position = 0\n      @thumbnails.starting_direction = undefined\n\n      @thumbnails.elements.each (i, el) =>\n        $thumbnail = $(el)\n        $thumbnail.on \"click\", =>\n          @thumbnails.elements.filter(\".active\").removeClass \"active\"\n          $thumbnail.addClass \"active\"\n          @slide i\n          return\n        return\n\n      $(\"img\", @thumbnails.elements.eq(0)).each (i, el) =>\n        $(el).load =>\n          height = $(el).height()\n\n          if @settings.thumbnails.orientation == 'horizontal'\n            @thumbnails.inner.height height\n          else if @settings.thumbnails.orientation == 'vertical'\n            @thumbnails.inner.height height * @slides_length\n          return\n        return\n\n      $(\"img\", @thumbnails.elements).on \"dragstart\", (event) ->\n        event.preventDefault()\n        return\n\n      if @settings.touch is true\n        touch_thumbnails = new Hammer @thumbnails.wrapper[0]\n\n        if @settings.thumbnails.orientation == 'horizontal'\n          pan_events = 'panleft panright'\n          touch_thumbnails.get('pan').set\n            direction: Hammer.DIRECTION_HORIZONTAL\n        else if @settings.thumbnails.orientation == 'vertical'\n          pan_events = 'panup pandown'\n          touch_thumbnails.get('pan').set\n            direction: Hammer.DIRECTION_VERTICAL\n\n\n        # Bind touch event to the thumbnails\n        touch_thumbnails.on \"panstart pancancel panend #{pan_events}\", (event) =>\n          if @settings.thumbnails.orientation == 'horizontal'\n            distance = event.deltaX\n          else if @settings.thumbnails.orientation == 'vertical'\n            distance = event.deltaY\n\n          # When moving, sync the slider with the mouse movement\n          if @settings.thumbnails.orientation == 'horizontal' and event.type is 'panleft' or event.type is 'panright'\n            if event.direction is Hammer.DIRECTION_LEFT or event.direction is Hammer.DIRECTION_RIGHT\n              transform = \"translate3d(#{@thumbnails.starting_position + distance}px, 0, 0)\"\n              @thumbnails.inner.css\n                'transform': transform\n                '-o-transform': transform\n                '-ms-transform': transform\n                '-moz-transform': transform\n                '-webkit-transform': transform\n\n          else if @settings.thumbnails.orientation == 'vertical' and event.type is 'panup' or event.type is 'pandown'\n            if event.direction is Hammer.DIRECTION_UP or event.direction is Hammer.DIRECTION_DOWN\n              transform = \"translate3d(0, #{@thumbnails.starting_position + distance}px, 0)\"\n              @thumbnails.inner.css\n                'transform': transform\n                '-o-transform': transform\n                '-ms-transform': transform\n                '-moz-transform': transform\n                '-webkit-transform': transform\n\n          # Get starting transform position\n          else if event.type is 'panstart' and !@thumbnails.inner.hasClass 'animating'\n            @thumbnails.inner.addClass 'rock-dragging'\n\n            @thumbnails.starting_direction = event.direction\n\n          # When letting go, check if we have enough distance to go to the next slide\n          # otherwise return to the initial position\n          else if event.type is 'panend'\n            @thumbnails.inner.removeClass 'rock-dragging'\n\n            # Set new starting position\n            @thumbnails.starting_position += distance\n\n            # Don't go past last thumbnail\n            if @thumbnails.starting_position < - @thumbnails.size + @thumbnails.parent_size\n              @scroll_to_thumbnail @slides_length - 1\n\n            # Don't go past first thumbnail\n            else if @thumbnails.starting_position > 0\n              @scroll_to_thumbnail 0\n\n            # Snap to current thumbnail\n            else\n              snap_distance = 0\n              @thumbnails.elements.each (index, item) =>\n                if @thumbnails.starting_position > -snap_distance\n                  @scroll_to_thumbnail index\n                  return false\n\n                if @settings.thumbnails.orientation == 'horizontal'\n                  snap_distance += $(item).width()\n                else if @settings.thumbnails.orientation == 'vertical'\n                  snap_distance += $(item).height()\n\n                return\n\n          event.preventDefault()\n          return\n      return\n\n    @slide = ->\n      # Scroll to the i-th thumbnail in the collection\n      #\n      scroll_to_thumbnail = (i) =>\n        i = 0 if i < 0\n\n        # Calculate distance to thumbnail\n        # thumbnails may have variable sizes\n        distance = 0\n        @thumbnails.elements.each (index, item) =>\n          return false if index == i\n          if @settings.thumbnails.orientation == 'horizontal'\n            distance += $(item).width()\n          else if @settings.thumbnails.orientation == 'vertical'\n            distance += $(item).height()\n          return\n\n        # If distance required is greater than the last set of thumbnails we can\n        # see, then don't go past them\n        if @thumbnails.size - distance < @thumbnails.parent_size\n          distance = @thumbnails.size - @thumbnails.parent_size\n\n        # Set the new starting position\n        @thumbnails.starting_position = -distance\n\n        # Animate the thumbnails to the new position\n        if @settings.thumbnails.orientation == 'horizontal'\n          transform = 'translate3d(' + (-distance) + 'px, 0, 0)'\n        else if @settings.thumbnails.orientation == 'vertical'\n          transform = 'translate3d(0, ' + (-distance) + 'px, 0)'\n\n        @thumbnails.inner.addClass('animating').css\n          'transform': transform\n          '-o-transform': transform\n          '-ms-transform': transform\n          '-moz-transform': transform\n          '-webkit-transform': transform\n        setTimeout =>\n          @thumbnails.inner.removeClass 'animating'\n          return\n        , 700\n        return\n\n    # Resize thumbnails when window resize happens\n    #\n    @resize = =>\n      thumbs_count = @settings.thumbnails.visible[@current_responsive_size]\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        individual_size = @element_width / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'width'\n      else if @settings.thumbnails.orientation == 'vertical'\n        individual_size = @thumbnails.wrapper.parent().height() / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'height'\n\n      @thumbnails.inner[css_param] inner_size\n      @thumbnails.elements[css_param] individual_size\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        @thumbnails.size = inner_size\n      else if @settings.thumbnails.orientation == 'vertical'\n        @thumbnails.size = inner_size\n\n      @thumbnails.parent_size = @thumbnails.wrapper[css_param]()\n\n      size = undefined\n      if @settings.thumbnails.orientation == 'horizontal'\n        size = $(\"img\", @thumbnails.elements.eq(0)).height()\n        @thumbnails.inner.height size\n      else if @settings.thumbnails.orientation == 'vertical'\n        size = $(\"img\", @thumbnails.elements.eq(0)).width()\n        @thumbnails.inner.width size\n\n      @scroll_to_thumbnail @current\n\n      return\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_component 'thumbnails', $.fn.rockSlider.thumbnails\n\n) window.jQuery, window, document\n"]}