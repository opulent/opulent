{"version":3,"sources":["rock-slider.coffee","modules/content-scaling.coffee","modules/controls.coffee","modules/keyboard.coffee","modules/loader.coffee","modules/mousewheel.coffee","modules/pagination.coffee","modules/pause-on-hover.coffee","modules/prevent-dragging.coffee","modules/progress-bar.coffee","modules/retina.coffee","modules/scroller.coffee","modules/thumbnails.coffee","modules/touch.coffee","modules/video-cover.coffee","modules/video.coffee"],"names":[],"mappings":"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","file":"pixevil.rock-slider.js","sourceRoot":"/source/","sourcesContent":[null,"(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.contentScaling = ->\n    ###\n    Enable or disable content scaling feature\n    ###\n    @settings =\n      enabled: false # Scale content based on parent width\n      factor: # Scale multiplication coefficient\n        xs: 1\n        sm: 1\n        md: 1\n        lg: 1\n        xlg: 1\n      content_width: null # Set content reference width. Default: canvas width\n\n    ###\n    Scale content on window resize\n    ###\n    @resize = ->\n      $content = $('.slidea-content-wrapper', @element)\n      origin_x = '0%'\n      origin_y = '0%'\n\n      # Calculate scaling width based on scaling factor\n      calculated_width = @wrapper.width()\n\n      # Calculate scaling value based on current width\n      @scaling_value = calculated_width / @scaling_reference * @settings.content_scaling.factor[@current_responsive_size]\n\n      # Center content based on current resize value 8\n      if @settings.content_scaling.factor[@current_responsive_size] == 1\n        $.Velocity.hook $content, 'translateX', \"0px\"\n      else\n        $.Velocity.hook $content, 'translateX', \"#{calculated_width * (1 - @settings.content_scaling.factor[@current_responsive_size]) / 2}px\"\n\n      # $.Velocity.hook $content, 'translateX', '-50%'\n      $.Velocity.hook $content, 'translateZ', '0px'\n      $.Velocity.hook $content, 'transformOriginX', origin_x\n      $.Velocity.hook $content, 'transformOriginY', origin_y\n      $.Velocity.hook $content, 'scaleX', @scaling_value\n      $.Velocity.hook $content, 'scaleY', @scaling_value\n\n      @log \"Content has been scaled with #{@scaling_value}.\"\n\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'content_scaling', $.fn.rockSlider.contentScaling\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.controls = ->\n    ###\n    Set up slider controls\n    ###\n    @settings =\n      enabled: false # Add next / prev buttons\n      thumbnail: false # Add thumbnail to controls\n      html:\n        prev: \"&lt;\"\n        next: \"&gt;\"\n      class: \"slidea-controls-alternate\" # Additional control classes\n\n    ###\n    Update slide data\n    ###\n    @get_slide_data = (index, slide) ->\n      if @settings.controls.thumbnail and !@data[index].thumbnail?\n        thumbnail = slide.attr('data-slidea-thumbnail')\n        if thumbnail?\n          @data[index].thumbnail = thumbnail\n        else\n          @data[index].thumbnail = $(@settings.selector.background, slide).attr('src')\n      return\n\n    ###\n    Add controls to the slider\n    ###\n    @load = ->\n      html = ''\n      for control in ['next', 'prev']\n        alt = control.toLowerCase().replace /\\b[a-z]/g, (letter) ->\n          return letter.toUpperCase()\n\n        html += '<a href=\"javascript:void(0);\" class=\"slidea-control slidea-' + control + ' ' + @settings.controls.class + '\">'\n        html += '<div class=\"slidea-control-inner\">'\n        if @settings.controls.thumbnail is true\n          html += '<div class=\"slidea-control-thumbnail\">'\n          html += '<img src=\"\" alt=\"' + alt + ' Slide\" class=\"slidea-control-image\"/>'\n          html += '</div>'\n        html += '<div class=\"slidea-control-text\">'\n        html += @settings.controls.html[control]\n        html += '</div>'\n        html += '</div>'\n        html += '</a>'\n\n      # Add controls HTML\n      @wrapper.append html\n\n      # Set previous button\n      @prev_button = $(@settings.selector.prev, @element)\n      @prev_button.on 'click', =>\n        @slide @current - 1\n        return\n\n      # Set next button\n      @next_button = $(@settings.selector.next, @element)\n      @next_button.on 'click', =>\n        @slide @current + 1\n        return\n\n      # Set thumbnails\n      if @settings.controls.thumbnail is true\n        @prev_thumbnail = $('.slidea-control-image', @prev_button)\n        @next_thumbnail = $('.slidea-control-image', @next_button)\n\n      return\n\n    ###\n    Run on slide modifiers for controls\n    ###\n    @slide = (from, to) ->\n      if @settings.controls.thumbnail\n        @prev_thumbnail.attr 'src', @data[@prev].thumbnail\n        @next_thumbnail.attr 'src', @data[@next].thumbnail\n\n        @log \"Changed control thumbnails to prev[#{from}] and next[#{to}].\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'controls', $.fn.rockSlider.controls\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.keyboard = ->\n    ###\n    Enable or disable keyboard handler\n    ###\n    @settings = true\n\n    ###\n    Add keyboard bindings\n    ###\n    @load = ->\n      $(document).keydown (e) =>\n        switch e.which\n          when 37 then @slide @current - 1\n          when 39 then @slide @current + 1\n          else return\n      @log \"Bound keyboard arrows event.\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'keyboard', $.fn.rockSlider.keyboard\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.loader = ->\n    ###\n    Enable or disable loader component\n    ###\n    @settings = true\n\n    ###\n    Add the loader element if it hasn't been added with HTML\n    ###\n    @initialize = ->\n      if $(\".slidea-loader-wrapper\", @element).length is 0\n        html = \"\"\n        html += '<div class=\"slidea-loader-wrapper\">'\n        html += '<div class=\"slidea-loader\">'\n        html += '<div class=\"slidea-loader-inner\">'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '</div>'\n        html += '</div>'\n        # html += '<div class=\"slidea-loader-text\">'\n        # html += '<h5 class=\"slidea-loader-title font-normal\">'\n        # html += 'SLIDEA'\n        # html += '</h5>'\n        # html += '<h6 class=\"slidea-loader-subtitle font-thin\">'\n        # html += 'A Smarter Slider Plugin'\n        # html += '</h6>'\n        # html += '</div>'\n        html += '</div>'\n\n        @element.prepend html\n\n        @log \"No loader found. Added default loader.\"\n      else\n        @log \"Loader markup already exists.\"\n\n      @loader = $(\".slidea-loader-wrapper\", @element)\n      return\n\n    ###\n    When all the slider images have been loaded, hide the\n    loading spinner\n    ###\n    @load = ->\n      @animate.to '.slidea-loader-wrapper', 0.5,\n        opacity: 0\n        onComplete: =>\n          @loader.css 'display', 'none'\n          @log \"Loader element faded out.\"\n          return\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'loader', $.fn.rockSlider.loader\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.mousewheel = ->\n    ###\n    Enable or disable mousewheel handler\n    ###\n    @settings = false\n\n    ###\n    Add mousewheel handler\n    @require mousewheel.js\n    ###\n    @load = ->\n      @element.mousewheel (event) =>\n        if event.deltaY == -1\n          @slide @current + 1\n        if event.deltaY == 1\n          @slide @current - 1\n        if @settings.prevent_scrolling is true\n          event.preventDefault()\n        return\n\n      @log \"Bound mousewheel event.\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'mousewheel', $.fn.rockSlider.mousewheel\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.pagination = ->\n    ###\n    Set up pagination component\n    ###\n    @settings =\n      enabled: false # Add pagination\n      position: \"inside\" # Pagination position outside / inside\n      class: \"slidea-pagination-light\" # Additional pagination classes\n\n    ###\n    Add pagination bullets to the slider\n    ###\n    @load = ->\n      position = (if @settings.pagination.position is \"inside\" then \"slidea-pagination-inside\" else \"slidea-pagination-outside\")\n\n      # Don't add pagination if we have only one slide\n      return if @slides_length == 1\n\n      html = \"\"\n      html += \"<div class=\\\"slidea-pagination \" + position + \" \" + @settings.pagination.class + \"\\\">\"\n      i = 0\n      while i < @slides_length\n        html += \"<div class=\\\"slidea-pagination-bullet\\\"></div>\"\n        i++\n      html += \"</div>\"\n      pagination = $(html)\n\n      if @settings.pagination.position is \"inside\"\n        @element.prepend pagination\n      else\n        @element.after pagination\n\n      @pagination = $(\".slidea-pagination-bullet\", pagination)\n      @pagination.each (i, el) =>\n        pagination_bullet = $(el)\n        pagination_bullet.on \"click\", =>\n          @pagination.filter(\".active\").removeClass \"active\"\n          pagination_bullet.addClass \"active\"\n          @slide i\n          return\n        return\n      return\n\n    @slide = (from, to) ->\n      @pagination.filter('.active').removeClass 'active'\n      @pagination.eq(to).addClass 'active'\n      return\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'pagination', $.fn.rockSlider.pagination\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.pauseOnHover = ->\n    ###\n    Enable or disable pause on hover feature\n    ###\n    @settings = false\n\n    ###\n    Pause the slider on mouse hover\n    ###\n    @load = ->\n      @element.on 'mouseenter', =>\n        @pause_timer()\n        return\n      @element.on 'mouseleave', =>\n        @unpause_timer()\n        return\n\n      @log \"Enabled pause on hover.\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'pause_on_hover', $.fn.rockSlider.pauseOnHover\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.preventDragging = ->\n    ###\n    Enable or disable image dragging\n    ###\n    @settings = true\n\n    # Check if current screen is retina. If yes, replace images with their larger\n    # versions using the data-slidea-at2x attribute\n    #\n    @initialize = ->\n      $(\"img\", @element).on \"dragstart\", (event) =>\n        event.preventDefault()\n        return\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'prevent_dragging', $.fn.rockSlider.preventDragging\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.progressBar = ->\n    ###\n    Set up progress bar element\n    ###\n    @settings =\n      enabled: false # Add progress bar\n      position: \"bottom\" # Progress bar position top / bottom\n      class: \"slidea-progress-light\" # Additional thumbnail classes\n\n    ###\n    Add progress bar\n    ###\n    @load = ->\n      position = (if @settings.progress.position is \"top\" then \"slidea-progress-top\" else \"slidea-progress-bottom\")\n\n      html = \"\"\n      html += \"<div class=\\\"slidea-progress \" + position + \" \" + @settings.progress.class + \"\\\">\"\n      html += \"<div class=\\\"slidea-progress-bar\\\">\"\n      html += \"</div>\"\n      html += \"</div>\"\n      @element.prepend html\n\n      @progress = {}\n      @progress.element = $(\".slidea-progress\", @element)\n      @progress.bar = $(\".slidea-progress-bar\", @element)\n\n      return\n\n    ###\n\n    ###\n    @slide = (from, to) ->\n      @progress_animation = @animate.fromTo @progress.bar,\n        @timer.remaining,\n        { width: '0%' },\n        { width: '100%' }\n\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'progress', $.fn.rockSlider.progressBar\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.retina = ->\n    ###\n    Enable or disable retina feature\n    ###\n    @settings = true\n\n    # Check if current screen is retina. If yes, replace images with their larger\n    # versions using the data-slidea-at2x attribute\n    #\n    @initialize = ->\n      retina = false\n      root = (exports? ? window : exports)\n      mediaQuery = '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)';\n\n      if root.devicePixelRatio > 1\n          retina = true\n\n      if root.matchMedia && root.matchMedia(mediaQuery).matches\n          retina = true\n\n      if retina\n        @log \"This device has a retina display.\"\n\n        $('img[data-slidea-at2x]', $slide).each (index, element) =>\n          img = $(element)\n          src = img.attr('data-slidea-src')\n          retina_src = img.attr 'data-slidea-at2x'\n\n          if retina_src == \"true\"\n            src = src.replace /(\\.[\\w\\?=]+)$/, \"@2x$1\"\n          else\n            src = retina_src\n\n          @log \"Found a Retina image with src=\\\"#{src}\\\".\"\n\n          img.attr 'data-slidea-src', src\n          return\n      else\n        @log \"This device doesn't have a Retina display.\"\n      return\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'retina', $.fn.rockSlider.retina\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.scroller = ->\n    ###\n    Set up scroller component\n    ###\n    @settings =\n      enabled: false # Enable Scroller Item\n      markup: \"<span class=\\\"slidea-scroller-1\\\"></span>\" # Markup for scroller item (1 or 2)\n      position: \"center\" # Scroller position: left, center, right\n\n\n    @load = ->\n      scroller = \"<div class=\\\"slidea-scroller-wrapper slidea-scroller-\" + @settings.scroller_position + \"\\\">\"\n      scroller += @settings.scroller_markup\n      scroller += \"</div>\"\n\n      @scroller = $ scroller\n      @element.prepend @scroller\n\n      @scroller.on \"click\", =>\n        $(\"html\").velocity \"scroll\",\n          offset: @element.height()\n          mobileHA: true\n          duration: 1000\n        return\n      return\n\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'scroller', $.fn.rockSlider.scroller\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.thumbnails = ->\n    ###\n    Set up slider thumbnails\n    ###\n    @settings =\n      enabled: false # Add thumbnails\n      visible: # Maximum number of thumbnails on page\n        xs: 3\n        sm: 4\n        md: 5\n        lg: 6\n        xlg: 8\n      position: \"after\" # Thumbnails position before or after\n      orientation: \"horizontal\" # Thumbnails scroll orientation\n      class: \"\" # Additional thumbnail classes\n\n    ###\n    Update slide data\n    ###\n    @get_slide_data = (index, slide) ->\n      unless @data[index].thumbnail?\n        thumbnail = slide.attr('data-slidea-thumbnail')\n        if thumbnail?\n          @data[index].thumbnail = thumbnail\n        else\n          @data[index].thumbnail = $(@settings.selector.background, slide).attr('src')\n      return\n\n      # Scroll to the i-th thumbnail in the collection\n      #\n      @scroll_to_thumbnail = (to) =>\n        to = 0 if to < 0\n\n        # Calculate distance to thumbnail\n        # thumbnails may have variable sizes\n        distance = 0\n        @thumbnails.elements.each (index, item) =>\n          return false if index == to\n          if @settings.thumbnails.orientation == 'horizontal'\n            distance += $(item).width()\n          else if @settings.thumbnails.orientation == 'vertical'\n            distance += $(item).height()\n          return\n\n        # If distance required is greater than the last set of thumbnails we can\n        # see, then don't go past them\n        if @thumbnails.size - distance < @thumbnails.parent_size\n          distance = @thumbnails.size - @thumbnails.parent_size\n\n        # Set the new starting position\n        @thumbnails.starting_position = -distance\n\n        # Animate the thumbnails to the new position\n        if @settings.thumbnails.orientation == 'horizontal'\n          transform = 'translate3d(' + (-distance) + 'px, 0, 0)'\n        else if @settings.thumbnails.orientation == 'vertical'\n          transform = 'translate3d(0, ' + (-distance) + 'px, 0)'\n\n        @thumbnails.inner.addClass('animating').css\n          'transform': transform\n          '-o-transform': transform\n          '-ms-transform': transform\n          '-moz-transform': transform\n          '-webkit-transform': transform\n        setTimeout =>\n          @thumbnails.inner.removeClass 'animating'\n          return\n        , 700\n        return\n      return\n\n    ###\n    Add thumbnails to the slider\n    ###\n    @load = ->\n      # Get thumbnails count for the current responsive size\n      thumbs_count = @settings.thumbnails.visible[@current_responsive_size]\n\n      # Set parameters for horizontal or vertical thumbnails\n      # scrolling orientation\n      if @settings.thumbnails.orientation == 'horizontal'\n        individual_size = @element_width / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'width'\n      else if @settings.thumbnails.orientation == 'vertical'\n        individual_size = @element_height / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'height'\n\n      html = \"\"\n      html += \"<div class=\\\"slidea-thumbnails #{@settings.thumbnails.class} #{@settings.thumbnails.orientation}\\\">\"\n      html += \"<div class=\\\"slidea-thumbnails-inner\\\" style=\\\"#{css_param}: \" + inner_size + \"px;\\\">\"\n      $.each @cache, (index, item) ->\n        html += \"<div class=\\\"slidea-thumbnail-wrapper\\\" style=\\\"#{css_param}: \" + individual_size + \"px;\\\">\"\n        html += \"<img class=\\\"slidea-thumbnail\\\" src=\\\"\" + item.thumbnail + \"\\\" alt=\\\"Slide \" + index + \"\\\" />\"\n        html += \"</div>\"\n      html += \"</div>\"\n      html += \"</div>\"\n\n      @thumbnails = {}\n      @thumbnails.wrapper = $(html)\n\n      if @settings.thumbnails.position is \"before\"\n        @element.before @thumbnails.wrapper\n      else if @settings.thumbnails.position is \"after\"\n        @element.after @thumbnails.wrapper\n      else\n        @settings.thumbnails.position.append @thumbnails.wrapper\n\n      @thumbnails.inner = $(\".slidea-thumbnails-inner\", @thumbnails.wrapper)\n      @thumbnails.elements = $(\".slidea-thumbnail-wrapper\", @thumbnails.wrapper)\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        @thumbnails.size = @thumbnails.inner.width()\n        @thumbnails.parent_size = @thumbnails.wrapper.width()\n      else if @settings.thumbnails.orientation == 'vertical'\n        @thumbnails.size = @thumbnails.inner.height()\n        @thumbnails.parent_size = @thumbnails.wrapper.height()\n\n      @thumbnails.starting_position = 0\n      @thumbnails.starting_direction = undefined\n\n      @thumbnails.elements.each (i, el) =>\n        $thumbnail = $(el)\n        $thumbnail.on \"click\", =>\n          @thumbnails.elements.filter(\".active\").removeClass \"active\"\n          $thumbnail.addClass \"active\"\n          @slide i\n          return\n        return\n\n      $(\"img\", @thumbnails.elements.eq(0)).each (i, el) =>\n        $(el).load =>\n          height = $(el).height()\n\n          if @settings.thumbnails.orientation == 'horizontal'\n            @thumbnails.inner.height height\n          else if @settings.thumbnails.orientation == 'vertical'\n            @thumbnails.inner.height height * @slides_length\n          return\n        return\n\n      $(\"img\", @thumbnails.elements).on \"dragstart\", (event) ->\n        event.preventDefault()\n        return\n\n      if @settings.touch is true\n        touch_thumbnails = new Hammer @thumbnails.wrapper[0]\n\n        if @settings.thumbnails.orientation == 'horizontal'\n          pan_events = 'panleft panright'\n          touch_thumbnails.get('pan').set\n            direction: Hammer.DIRECTION_HORIZONTAL\n        else if @settings.thumbnails.orientation == 'vertical'\n          pan_events = 'panup pandown'\n          touch_thumbnails.get('pan').set\n            direction: Hammer.DIRECTION_VERTICAL\n\n\n        # Bind touch event to the thumbnails\n        touch_thumbnails.on \"panstart pancancel panend #{pan_events}\", (event) =>\n          if @settings.thumbnails.orientation == 'horizontal'\n            distance = event.deltaX\n          else if @settings.thumbnails.orientation == 'vertical'\n            distance = event.deltaY\n\n          # When moving, sync the slider with the mouse movement\n          if @settings.thumbnails.orientation == 'horizontal' and event.type is 'panleft' or event.type is 'panright'\n            if event.direction is Hammer.DIRECTION_LEFT or event.direction is Hammer.DIRECTION_RIGHT\n              transform = \"translate3d(#{@thumbnails.starting_position + distance}px, 0, 0)\"\n              @thumbnails.inner.css\n                'transform': transform\n                '-o-transform': transform\n                '-ms-transform': transform\n                '-moz-transform': transform\n                '-webkit-transform': transform\n\n          else if @settings.thumbnails.orientation == 'vertical' and event.type is 'panup' or event.type is 'pandown'\n            if event.direction is Hammer.DIRECTION_UP or event.direction is Hammer.DIRECTION_DOWN\n              transform = \"translate3d(0, #{@thumbnails.starting_position + distance}px, 0)\"\n              @thumbnails.inner.css\n                'transform': transform\n                '-o-transform': transform\n                '-ms-transform': transform\n                '-moz-transform': transform\n                '-webkit-transform': transform\n\n          # Get starting transform position\n          else if event.type is 'panstart' and !@thumbnails.inner.hasClass 'animating'\n            @thumbnails.inner.addClass 'slidea-dragging'\n\n            @thumbnails.starting_direction = event.direction\n\n          # When letting go, check if we have enough distance to go to the next slide\n          # otherwise return to the initial position\n          else if event.type is 'panend'\n            @thumbnails.inner.removeClass 'slidea-dragging'\n\n            # Set new starting position\n            @thumbnails.starting_position += distance\n\n            # Don't go past last thumbnail\n            if @thumbnails.starting_position < - @thumbnails.size + @thumbnails.parent_size\n              @scroll_to_thumbnail @slides_length - 1\n\n            # Don't go past first thumbnail\n            else if @thumbnails.starting_position > 0\n              @scroll_to_thumbnail 0\n\n            # Snap to current thumbnail\n            else\n              snap_distance = 0\n              @thumbnails.elements.each (index, item) =>\n                if @thumbnails.starting_position > -snap_distance\n                  @scroll_to_thumbnail index\n                  return false\n\n                if @settings.thumbnails.orientation == 'horizontal'\n                  snap_distance += $(item).width()\n                else if @settings.thumbnails.orientation == 'vertical'\n                  snap_distance += $(item).height()\n\n                return\n\n          event.preventDefault()\n          return\n      return\n\n    # Resize thumbnails when window resize happens\n    #\n    @resize = =>\n      thumbs_count = @settings.thumbnails.visible[@current_responsive_size]\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        individual_size = @element_width / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'width'\n      else if @settings.thumbnails.orientation == 'vertical'\n        individual_size = @thumbnails.wrapper.parent().height() / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'height'\n\n      @thumbnails.inner[css_param] inner_size\n      @thumbnails.elements[css_param] individual_size\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        @thumbnails.size = inner_size\n      else if @settings.thumbnails.orientation == 'vertical'\n        @thumbnails.size = inner_size\n\n      @thumbnails.parent_size = @thumbnails.wrapper[css_param]()\n\n      size = undefined\n      if @settings.thumbnails.orientation == 'horizontal'\n        size = $(\"img\", @thumbnails.elements.eq(0)).height()\n        @thumbnails.inner.height size\n      else if @settings.thumbnails.orientation == 'vertical'\n        size = $(\"img\", @thumbnails.elements.eq(0)).width()\n        @thumbnails.inner.width size\n\n      @scroll_to_thumbnail @current\n\n      return\n\n    @slide = (from, to) ->\n      @thumbnails.elements.filter('.active').removeClass 'active'\n      @thumbnails.elements.eq(to).addClass 'active'\n      @scroll_to_thumbnail to\n\n      @log \"Scrolled to thumbnail #{to}.\"\n      return\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'thumbnails', $.fn.rockSlider.thumbnails\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.touch = ->\n    ###\n    Enable or disable video features\n    ###\n    @settings = true\n\n    ###\n    Enable touch handler for the slider.\n    @require Hammer.js\n    ###\n    @load = ->\n      # Get touch target\n      @touch_object = new Hammer @element[0]\n\n      # Allow horizontal touch only\n      @touch_object.get('pan').set\n        direction: Hammer.DIRECTION_HORIZONTAL\n\n      # Add panleft and panright events\n      @touch_object.on 'panleft panright', (event) =>\n        # Show dragging cursor on drag start\n        if event.eventType is Hammer.INPUT_START\n          @element.addClass 'slidea-dragging'\n\n        else if event.eventType is Hammer.INPUT_END or event.eventType is Hammer.INPUT_CANCEL\n          @element.removeClass 'slidea-dragging'\n\n          # Swipe left or right based on direction\n          if event.direction is Hammer.DIRECTION_LEFT\n            @slide @current + 1\n          else if event.direction is Hammer.DIRECTION_RIGHT\n            @slide @current - 1\n\n        return\n\n      @log \"Bound touch pan left and right events.\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'touch', $.fn.rockSlider.touch\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.videoCover = ->\n    ###\n    Enable or disable video cover features\n    ###\n    @settings = true\n\n    ###\n    Set up the video covers so that they fade out and play the\n    actual video on click event\n    ###\n    @initialize = ->\n      covers = $(@settings.selector.video_cover, @element)\n\n      covers.each (i, el) =>\n        $cover = $(el)\n        $parent = $cover.parent()\n        $video = $(@settings.selector.video, $parent)\n        type = video_type\n        id = $video.attr(\"id\")\n\n        switch type\n          when \"html5\"\n            $cover.on \"click\", =>\n              $video.get(0).play()\n              $cover.velocity \"fadeOut\"\n              return\n\n          when \"youtube\"\n            $cover.on \"click\", =>\n              @youtube_player[id].playVideo()\n              $cover.velocity \"fadeOut\"\n              return\n\n          when \"vimeo\"\n            $cover.on \"click\", =>\n              @vimeo_player[id].api \"play\"\n              $cover.velocity \"fadeOut\"\n              return\n\n        return\n\n      @log \"Added video cover events.\" if covers.length > 0\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'video_cover', $.fn.rockSlider.videoCover\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.video = ->\n    ###\n    Enable or disable video features\n    ###\n    @settings = true\n\n    ###\n    Setup video events at slide start for HTML5, YouTube and Vimeo videos\n    ###\n    @initialize = ->\n      ###\n      Handle autoplay timeouts using a timeout timeline\n      ###\n      @video_timeline = {}\n\n      delay = 500\n      interval = undefined\n      i = 0\n      tries = 10\n\n      # Handle background videos\n      $('.slidea-video-background').each (index, background) ->\n        unless $(background).hasClass 'slidea-object'\n          $(background).addClass 'slidea-object'\n        return\n\n      $(\"video.slidea-video\", @element).attr \"data-slidea-video-type\", \"html5\"\n      $(\"iframe[data-slidea-src*=\\\"youtube.com\\\"].slidea-video\", @element).attr \"data-slidea-video-type\", \"youtube\"\n      $(\"iframe[data-slidea-src*=\\\"vimeo.com\\\"].slidea-video\", @element).attr \"data-slidea-video-type\", \"vimeo\"\n\n      $(@settings.selector.video, @element).each (i, el) =>\n        # Get video\n        $video = $(el)\n\n        # Get volume\n        volume = $video.attr(\"data-slidea-volume\")\n        volume = (if isNaN(volume) then 0 else volume)\n\n        # Get controls\n        controls = ($video.attr(\"data-slidea-controls\") is \"true\")\n\n        # Pause slider on video play\n        pause_slider= ($video.attr(\"data-slidea-pause-slider\") is \"true\")\n\n        # Get src\n        src = $video.attr(\"data-slidea-src\")\n\n        # Get video type\n        video_type = $video.attr(\"data-slidea-video-type\")\n\n        # Get video id\n        $video.attr \"id\", @get_random_id(\"slidea-video\") unless $video.attr(\"id\")?\n        id = $video.attr(\"id\")\n\n        # HTML5\n        if video_type is \"html5\"\n          # Set volume\n          $video.get(0).volume = volume\n\n          # Enable or disable controls\n          $video.attr \"controls\", \"controls\"  if controls is true\n\n          # If slider is set to autoplay, pause the slider when video starts\n          if @settings.autoplay is true and pause_slider is true\n            # On video play\n            $video.on \"play\", =>\n              @pause_timer()\n              return\n\n            # On video pause\n            $video.on \"pause ended\", =>\n              @unpause_timer()\n              return\n\n\n        # YouTube\n        if video_type is \"youtube\"\n          video_id = undefined\n          separator = undefined\n\n          # Enable video JS API\n          if src.indexOf(\"enablejsapi=1\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?enablejsapi=1\"\n            else\n              $video.attr \"src\", src + \"&enablejsapi=1\"\n            src = $video.attr(\"src\")\n\n          # Set player API ID\n          if src.indexOf(\"playerapiid=\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?playerapiid=\" + id\n            else\n              $video.attr \"src\", src + \"&playerapiid=\" + id\n            src = $video.attr(\"src\")\n\n          # Get youtube Video ID\n          unless src.indexOf(\"embed\") is \"-1\"\n            video_id = src.split(\"/\")\n            video_id = video_id[video_id.length - 1]\n            separator = video_id.indexOf(\"?\")\n            video_id = video_id.substring(0, separator)  unless separator is -1\n          else\n            video_id = src.split(\"v=\")[1]\n            separator = video_id.indexOf(\"&\")\n            video_id = video_id.substring(0, separator)  unless separator is -1\n\n          # Create a new YT Player using the API\n          $video.load =>\n            @youtube_player[id] = new YT.Player(id,\n              height: \"720\"\n              width: \"1280\"\n              video_id: video_id\n              events:\n                onStateChange: (e) =>\n                  @pause_timer()  if e.data is 1\n                  @unpause_timer()  if e.data is 2 or e.data is 0\n            )\n\n            # Try to set the video volume\n            i = 0\n            interval = setInterval(=>\n              i++\n              if i is tries\n                clearInterval interval\n              else if not @youtube_player[id]? or typeof @youtube_player[id].setVolume isnt \"function\"\n                return\n              else\n                clearInterval interval\n              @youtube_player[id].setVolume volume\n            , delay)\n            return\n\n        # Vimeo\n        if video_type is \"vimeo\"\n\n          # Enable vimeo JS API\n          if src.indexOf(\"api=1\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?api=1\"\n            else\n              $video.attr \"src\", src + \"&api=1\"\n            src = $video.attr(\"src\")\n\n          # Setup Vimeo player ID\n          if src.indexOf(\"player_id=\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?player_id=\" + id\n            else\n              $video.attr \"src\", src + \"&player_id=\" + id\n            src = $video.attr(\"src\")\n\n          # Create a new Vimeo Player API\n          $video.load =>\n            @vimeo_player[id] = $f(id)\n            @vimeo_player[id].addEvent \"ready\", =>\n              $video.attr \"data-slidea-ready\", \"true\"\n              @vimeo_player[id].api \"setVolume\", volume\n              if @settings.autoplay is true and pause_slider is true\n                @vimeo_player[id].addEvent \"play\", @pause_timer\n                @vimeo_player[id].addEvent \"pause\", @unpause_timer\n                @vimeo_player[id].addEvent \"finish\", @unpause_timer\n            return\n        return\n\n    ###\n    Handle video events at slide start for HTML5, YouTube and Vimeo videos\n    ###\n    @handle_videos = (previous, current) ->\n      $previous = @slides.eq(previous)\n      $current = @slides.eq(current)\n\n      previous_videos = $(@settings.selector.video, $previous)\n      current_videos = $(@settings.selector.video, $previous)\n\n      # Pause or stop videos from previous slide\n      if previous != -1 and previous_videos.length > 0\n        previous_videos.each =>\n          # Current Video\n          $video = $(` this `)\n\n          # Get video ID\n          id = $video.attr('id')\n\n          # Get video type\n          video_type = $video.attr('data-slidea-video-type')\n\n          # Check if the video resets when next slide is triggered\n          reset = $video.attr('data-slidea-reset') == 'true'\n\n          # Clear the video timeout for the current video\n          clearTimeout @video_timeline[id]\n\n          # HTML5\n          if video_type == 'html5'\n            # Pause the video\n            $video.get(0).pause()\n\n            # Reset the video after the slide animation has finished\n            if reset\n              setTimeout (=>\n                $video.get(0).current_time = 0\n                return\n              ), @data[current].background[0].animation[0].duration\n\n          # Youtube\n          else if video_type == 'youtube'\n            # Pause the video\n            @youtube_player[id].pauseVideo()\n\n            # Reset the video after the slide animation has finished\n            if reset\n              setTimeout (=>\n                @youtube_player[id].stopVideo()\n                return\n              ), @data[current].background[0].animation[0].duration\n\n          # Vimeo\n          else if video_type == 'vimeo'\n            # Pause the video\n            @vimeo_player[id].api 'pause'\n\n            # Reset the video after the slide animation has finished\n            if reset\n              setTimeout (=>\n                @vimeo_player[id].api 'unload'\n                return\n              ), @data[current].background[0].animation[0].duration\n          return\n\n        @log \"Paused (handled) videos from slide #{previous}.\"\n\n      if current_videos.length > 0\n        # Play videos from current slide\n        current_videos.each =>\n          # Get video\n          $video = $(` this `)\n\n          # Get video ID\n          id = $video.attr('id')\n\n          # Set try interval data\n          delay = 500\n          interval = undefined\n          i = 0\n          tries = 10\n\n          # Check if video should autoplay\n          autoplay = $video.attr('data-slidea-autoplay') == 'true'\n\n          # Get autoplay time\n          autoplay_time = if $video.attr('data-slidea-autoplay-time')? then parseInt($video.attr('data-slidea-autoplay-time'), 10) else 100\n\n          # Check if the video pauses the slider\n          pause_slider = $video.attr('data-slidea-pause-slider') == 'true'\n\n          # HTML5\n          if $video.attr('data-slidea-video-type') == 'html5'\n            if autoplay == true\n              # Start the video player after the set delay\n              @video_timeline[id] = setTimeout((->\n                $video.get(0).play()\n                return\n              ), autoplay_time)\n\n          # Youtube\n          if $video.attr('data-slidea-video-type') == 'youtube'\n            if autoplay == true\n              # Try to get the youtube player\n              i = 0\n              interval = setInterval((=>\n                i++\n                if i == tries\n                  clearInterval interval\n                else if !$video.attr('data-slidea-ready')? or\n                        !defined(@youtube_player[id]) or\n                        typeof @youtube_player[id].playVideo != 'function'\n                  return\n                else\n                  clearInterval interval\n\n                # Start the video player after the set delay\n                @video_timeline[id] = setTimeout((=>\n                  @youtube_player[id].playVideo()\n                  return\n                ), autoplay_time)\n                return\n              ), delay)\n\n          # Vimeo\n          if $video.attr('data-slidea-video-type') == 'vimeo'\n            if autoplay == true\n              # Try to get the vimeo player\n              i = 0\n              interval = setInterval((=>\n                i++\n                if i == tries\n                  clearInterval interval\n                else if !$video.attr('data-slidea-ready')? or\n                        typeof @vimeo_player[id].api != 'function'\n                  return\n                else\n                  clearInterval interval\n\n                # Start the video player after the set delay\n                @video_timeline[id] = setTimeout((->\n                  Froogaloop(id).api 'play'\n                  return\n                ), autoplay_time)\n                return\n              ), delay)\n          return\n\n        @log \"Played (handled) videos from slide #{current}.\"\n\n      return\n\n    @resize = ->\n      @slides.each (i, element) =>\n        slide = $ element\n        # Fit slidea-slider videos to their containers\n        $(@settings.selector.video, @element).each (i, video)=>\n          video = $(video)\n          parent = video.parent()\n\n          if parent.is('.slidea-video-background')\n            return\n\n          height = parent.height()\n          width = parent.width()\n\n          video.css\n            width: width\n            height: height\n\n          return\n\n        # Set slide to have a full screen Video Background\n        video_background = $('.slidea-video-background', slide)\n        if video_background.length > 0\n          video = $('.video', $video_background)\n\n          data_width = parseInt($video.attr('data-slidea-width'))\n          data_height = parseInt($video.attr('data-slidea-height'))\n\n          video_width = @slider_width\n          video_height = video_width * data_height / data_width\n\n          margin_left = -(video_width - (@parent_width)) / 2\n          margin_top = -(video_height - (@parent_height)) / 2\n\n          video.css\n            'width': video_width\n            'height': video_height\n            'margin-left': margin_left\n            'margin-top': margin_top\n        return\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'video', $.fn.rockSlider.video\n\n) window.jQuery, window, document\n"]}e\n\n# A factory that uses AMD, CommonJS or window globals to\n# create the jQuery plugin.\n# do (plugin = slidea-slider, window) ->\n#   hasDefine  = typeof define is \"function\" and define.amd?\n#   hasExports = typeof module isnt \"undefined\" and module.exports?\n#\n#   # AMD.\n#   if hasDefine\n#     define [\"jquery\"], plugin\n#\n#   # NodeJS/CommonJS.\n#   else if hasExports\n#     module.exports = plugin require \"jquery\"\n#\n#   # Window globals.\n#   else\n#     plugin window.jQuery or window.$\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.contentScaling = ->\n    ###\n    Enable or disable content scaling feature\n    ###\n    @settings =\n      enabled: false # Scale content based on parent width\n      factor: # Scale multiplication coefficient\n        xs: 1\n        sm: 1\n        md: 1\n        lg: 1\n        xlg: 1\n      content_width: null # Set content reference width. Default: canvas width\n\n    ###\n    Scale content on window resize\n    ###\n    @resize = ->\n      $content = $('.slidea-content-wrapper', @element)\n      origin_x = '0%'\n      origin_y = '0%'\n\n      # Calculate scaling width based on scaling factor\n      calculated_width = @wrapper.width()\n\n      # Calculate scaling value based on current width\n      @scaling_value = calculated_width / @scaling_reference * @settings.content_scaling.factor[@current_responsive_size]\n\n      # Center content based on current resize value 8\n      if @settings.content_scaling.factor[@current_responsive_size] == 1\n        $.Velocity.hook $content, 'translateX', \"0px\"\n      else\n        $.Velocity.hook $content, 'translateX', \"#{calculated_width * (1 - @settings.content_scaling.factor[@current_responsive_size]) / 2}px\"\n\n      # $.Velocity.hook $content, 'translateX', '-50%'\n      $.Velocity.hook $content, 'translateZ', '0px'\n      $.Velocity.hook $content, 'transformOriginX', origin_x\n      $.Velocity.hook $content, 'transformOriginY', origin_y\n      $.Velocity.hook $content, 'scaleX', @scaling_value\n      $.Velocity.hook $content, 'scaleY', @scaling_value\n\n      @log \"Content has been scaled with #{@scaling_value}.\"\n\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'content_scaling', $.fn.rockSlider.contentScaling\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.controls = ->\n    ###\n    Set up slider controls\n    ###\n    @settings =\n      enabled: false # Add next / prev buttons\n      thumbnail: false # Add thumbnail to controls\n      html:\n        prev: \"&lt;\"\n        next: \"&gt;\"\n      class: \"slidea-controls-alternate\" # Additional control classes\n\n    ###\n    Update slide data\n    ###\n    @get_slide_data = (index, slide) ->\n      if @settings.controls.thumbnail and !@data[index].thumbnail?\n        thumbnail = slide.attr('data-slidea-thumbnail')\n        if thumbnail?\n          @data[index].thumbnail = thumbnail\n        else\n          @data[index].thumbnail = $(@settings.selector.background, slide).attr('src')\n      return\n\n    ###\n    Add controls to the slider\n    ###\n    @load = ->\n      html = ''\n      for control in ['next', 'prev']\n        alt = control.toLowerCase().replace /\\b[a-z]/g, (letter) ->\n          return letter.toUpperCase()\n\n        html += '<a href=\"javascript:void(0);\" class=\"slidea-control slidea-' + control + ' ' + @settings.controls.class + '\">'\n        html += '<div class=\"slidea-control-inner\">'\n        if @settings.controls.thumbnail is true\n          html += '<div class=\"slidea-control-thumbnail\">'\n          html += '<img src=\"\" alt=\"' + alt + ' Slide\" class=\"slidea-control-image\"/>'\n          html += '</div>'\n        html += '<div class=\"slidea-control-text\">'\n        html += @settings.controls.html[control]\n        html += '</div>'\n        html += '</div>'\n        html += '</a>'\n\n      # Add controls HTML\n      @wrapper.append html\n\n      # Set previous button\n      @prev_button = $(@settings.selector.prev, @element)\n      @prev_button.on 'click', =>\n        @slide @current - 1\n        return\n\n      # Set next button\n      @next_button = $(@settings.selector.next, @element)\n      @next_button.on 'click', =>\n        @slide @current + 1\n        return\n\n      # Set thumbnails\n      if @settings.controls.thumbnail is true\n        @prev_thumbnail = $('.slidea-control-image', @prev_button)\n        @next_thumbnail = $('.slidea-control-image', @next_button)\n\n      return\n\n    ###\n    Run on slide modifiers for controls\n    ###\n    @slide = (from, to) ->\n      if @settings.controls.thumbnail\n        @prev_thumbnail.attr 'src', @data[@prev].thumbnail\n        @next_thumbnail.attr 'src', @data[@next].thumbnail\n\n        @log \"Changed control thumbnails to prev[#{from}] and next[#{to}].\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'controls', $.fn.rockSlider.controls\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.keyboard = ->\n    ###\n    Enable or disable keyboard handler\n    ###\n    @settings = true\n\n    ###\n    Add keyboard bindings\n    ###\n    @load = ->\n      $(document).keydown (e) =>\n        switch e.which\n          when 37 then @slide @current - 1\n          when 39 then @slide @current + 1\n          else return\n      @log \"Bound keyboard arrows event.\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'keyboard', $.fn.rockSlider.keyboard\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.loader = ->\n    ###\n    Enable or disable loader component\n    ###\n    @settings = true\n\n    ###\n    Add the loader element if it hasn't been added with HTML\n    ###\n    @initialize = ->\n      if $(\".slidea-loader-wrapper\", @element).length is 0\n        html = \"\"\n        html += '<div class=\"slidea-loader-wrapper\">'\n        html += '<div class=\"slidea-loader\">'\n        html += '<div class=\"slidea-loader-inner\">'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '<div class=\"slidea-loader-tile\"></div>'\n        html += '</div>'\n        html += '</div>'\n        # html += '<div class=\"slidea-loader-text\">'\n        # html += '<h5 class=\"slidea-loader-title font-normal\">'\n        # html += 'SLIDEA'\n        # html += '</h5>'\n        # html += '<h6 class=\"slidea-loader-subtitle font-thin\">'\n        # html += 'A Smarter Slider Plugin'\n        # html += '</h6>'\n        # html += '</div>'\n        html += '</div>'\n\n        @element.prepend html\n\n        @log \"No loader found. Added default loader.\"\n      else\n        @log \"Loader markup already exists.\"\n\n      @loader = $(\".slidea-loader-wrapper\", @element)\n      return\n\n    ###\n    When all the slider images have been loaded, hide the\n    loading spinner\n    ###\n    @load = ->\n      @animate.to '.slidea-loader-wrapper', 0.5,\n        opacity: 0\n        onComplete: =>\n          @loader.css 'display', 'none'\n          @log \"Loader element faded out.\"\n          return\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'loader', $.fn.rockSlider.loader\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.mousewheel = ->\n    ###\n    Enable or disable mousewheel handler\n    ###\n    @settings = false\n\n    ###\n    Add mousewheel handler\n    @require mousewheel.js\n    ###\n    @load = ->\n      @element.mousewheel (event) =>\n        if event.deltaY == -1\n          @slide @current + 1\n        if event.deltaY == 1\n          @slide @current - 1\n        if @settings.prevent_scrolling is true\n          event.preventDefault()\n        return\n\n      @log \"Bound mousewheel event.\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'mousewheel', $.fn.rockSlider.mousewheel\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.pagination = ->\n    ###\n    Set up pagination component\n    ###\n    @settings =\n      enabled: false # Add pagination\n      position: \"inside\" # Pagination position outside / inside\n      class: \"slidea-pagination-light\" # Additional pagination classes\n\n    ###\n    Add pagination bullets to the slider\n    ###\n    @load = ->\n      position = (if @settings.pagination.position is \"inside\" then \"slidea-pagination-inside\" else \"slidea-pagination-outside\")\n\n      # Don't add pagination if we have only one slide\n      return if @slides_length == 1\n\n      html = \"\"\n      html += \"<div class=\\\"slidea-pagination \" + position + \" \" + @settings.pagination.class + \"\\\">\"\n      i = 0\n      while i < @slides_length\n        html += \"<div class=\\\"slidea-pagination-bullet\\\"></div>\"\n        i++\n      html += \"</div>\"\n      pagination = $(html)\n\n      if @settings.pagination.position is \"inside\"\n        @element.prepend pagination\n      else\n        @element.after pagination\n\n      @pagination = $(\".slidea-pagination-bullet\", pagination)\n      @pagination.each (i, el) =>\n        pagination_bullet = $(el)\n        pagination_bullet.on \"click\", =>\n          @pagination.filter(\".active\").removeClass \"active\"\n          pagination_bullet.addClass \"active\"\n          @slide i\n          return\n        return\n      return\n\n    @slide = (from, to) ->\n      @pagination.filter('.active').removeClass 'active'\n      @pagination.eq(to).addClass 'active'\n      return\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'pagination', $.fn.rockSlider.pagination\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.pauseOnHover = ->\n    ###\n    Enable or disable pause on hover feature\n    ###\n    @settings = false\n\n    ###\n    Pause the slider on mouse hover\n    ###\n    @load = ->\n      @element.on 'mouseenter', =>\n        @pause_timer()\n        return\n      @element.on 'mouseleave', =>\n        @unpause_timer()\n        return\n\n      @log \"Enabled pause on hover.\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'pause_on_hover', $.fn.rockSlider.pauseOnHover\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.preventDragging = ->\n    ###\n    Enable or disable image dragging\n    ###\n    @settings = true\n\n    # Check if current screen is retina. If yes, replace images with their larger\n    # versions using the data-slidea-at2x attribute\n    #\n    @initialize = ->\n      $(\"img\", @element).on \"dragstart\", (event) =>\n        event.preventDefault()\n        return\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'prevent_dragging', $.fn.rockSlider.preventDragging\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.progressBar = ->\n    ###\n    Set up progress bar element\n    ###\n    @settings =\n      enabled: false # Add progress bar\n      position: \"bottom\" # Progress bar position top / bottom\n      class: \"slidea-progress-light\" # Additional thumbnail classes\n\n    ###\n    Add progress bar\n    ###\n    @load = ->\n      position = (if @settings.progress.position is \"top\" then \"slidea-progress-top\" else \"slidea-progress-bottom\")\n\n      html = \"\"\n      html += \"<div class=\\\"slidea-progress \" + position + \" \" + @settings.progress.class + \"\\\">\"\n      html += \"<div class=\\\"slidea-progress-bar\\\">\"\n      html += \"</div>\"\n      html += \"</div>\"\n      @element.prepend html\n\n      @progress = {}\n      @progress.element = $(\".slidea-progress\", @element)\n      @progress.bar = $(\".slidea-progress-bar\", @element)\n\n      return\n\n    ###\n\n    ###\n    @slide = (from, to) ->\n      @progress_animation = @animate.fromTo @progress.bar,\n        @timer.remaining,\n        { width: '0%' },\n        { width: '100%' }\n\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'progress', $.fn.rockSlider.progressBar\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.retina = ->\n    ###\n    Enable or disable retina feature\n    ###\n    @settings = true\n\n    # Check if current screen is retina. If yes, replace images with their larger\n    # versions using the data-slidea-at2x attribute\n    #\n    @initialize = ->\n      retina = false\n      root = (exports? ? window : exports)\n      mediaQuery = '(-webkit-min-device-pixel-ratio: 1.5), (min--moz-device-pixel-ratio: 1.5), (-o-min-device-pixel-ratio: 3/2), (min-resolution: 1.5dppx)';\n\n      if root.devicePixelRatio > 1\n          retina = true\n\n      if root.matchMedia && root.matchMedia(mediaQuery).matches\n          retina = true\n\n      if retina\n        @log \"This device has a retina display.\"\n\n        $('img[data-slidea-at2x]', $slide).each (index, element) =>\n          img = $(element)\n          src = img.attr('data-slidea-src')\n          retina_src = img.attr 'data-slidea-at2x'\n\n          if retina_src == \"true\"\n            src = src.replace /(\\.[\\w\\?=]+)$/, \"@2x$1\"\n          else\n            src = retina_src\n\n          @log \"Found a Retina image with src=\\\"#{src}\\\".\"\n\n          img.attr 'data-slidea-src', src\n          return\n      else\n        @log \"This device doesn't have a Retina display.\"\n      return\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'retina', $.fn.rockSlider.retina\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.scroller = ->\n    ###\n    Set up scroller component\n    ###\n    @settings =\n      enabled: false # Enable Scroller Item\n      markup: \"<span class=\\\"slidea-scroller-1\\\"></span>\" # Markup for scroller item (1 or 2)\n      position: \"center\" # Scroller position: left, center, right\n\n\n    @load = ->\n      scroller = \"<div class=\\\"slidea-scroller-wrapper slidea-scroller-\" + @settings.scroller_position + \"\\\">\"\n      scroller += @settings.scroller_markup\n      scroller += \"</div>\"\n\n      @scroller = $ scroller\n      @element.prepend @scroller\n\n      @scroller.on \"click\", =>\n        $(\"html\").velocity \"scroll\",\n          offset: @element.height()\n          mobileHA: true\n          duration: 1000\n        return\n      return\n\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'scroller', $.fn.rockSlider.scroller\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.thumbnails = ->\n    ###\n    Set up slider thumbnails\n    ###\n    @settings =\n      enabled: false # Add thumbnails\n      visible: # Maximum number of thumbnails on page\n        xs: 3\n        sm: 4\n        md: 5\n        lg: 6\n        xlg: 8\n      position: \"after\" # Thumbnails position before or after\n      orientation: \"horizontal\" # Thumbnails scroll orientation\n      class: \"\" # Additional thumbnail classes\n\n    ###\n    Update slide data\n    ###\n    @get_slide_data = (index, slide) ->\n      unless @data[index].thumbnail?\n        thumbnail = slide.attr('data-slidea-thumbnail')\n        if thumbnail?\n          @data[index].thumbnail = thumbnail\n        else\n          @data[index].thumbnail = $(@settings.selector.background, slide).attr('src')\n      return\n\n      # Scroll to the i-th thumbnail in the collection\n      #\n      @scroll_to_thumbnail = (to) =>\n        to = 0 if to < 0\n\n        # Calculate distance to thumbnail\n        # thumbnails may have variable sizes\n        distance = 0\n        @thumbnails.elements.each (index, item) =>\n          return false if index == to\n          if @settings.thumbnails.orientation == 'horizontal'\n            distance += $(item).width()\n          else if @settings.thumbnails.orientation == 'vertical'\n            distance += $(item).height()\n          return\n\n        # If distance required is greater than the last set of thumbnails we can\n        # see, then don't go past them\n        if @thumbnails.size - distance < @thumbnails.parent_size\n          distance = @thumbnails.size - @thumbnails.parent_size\n\n        # Set the new starting position\n        @thumbnails.starting_position = -distance\n\n        # Animate the thumbnails to the new position\n        if @settings.thumbnails.orientation == 'horizontal'\n          transform = 'translate3d(' + (-distance) + 'px, 0, 0)'\n        else if @settings.thumbnails.orientation == 'vertical'\n          transform = 'translate3d(0, ' + (-distance) + 'px, 0)'\n\n        @thumbnails.inner.addClass('animating').css\n          'transform': transform\n          '-o-transform': transform\n          '-ms-transform': transform\n          '-moz-transform': transform\n          '-webkit-transform': transform\n        setTimeout =>\n          @thumbnails.inner.removeClass 'animating'\n          return\n        , 700\n        return\n      return\n\n    ###\n    Add thumbnails to the slider\n    ###\n    @load = ->\n      # Get thumbnails count for the current responsive size\n      thumbs_count = @settings.thumbnails.visible[@current_responsive_size]\n\n      # Set parameters for horizontal or vertical thumbnails\n      # scrolling orientation\n      if @settings.thumbnails.orientation == 'horizontal'\n        individual_size = @element_width / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'width'\n      else if @settings.thumbnails.orientation == 'vertical'\n        individual_size = @element_height / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'height'\n\n      html = \"\"\n      html += \"<div class=\\\"slidea-thumbnails #{@settings.thumbnails.class} #{@settings.thumbnails.orientation}\\\">\"\n      html += \"<div class=\\\"slidea-thumbnails-inner\\\" style=\\\"#{css_param}: \" + inner_size + \"px;\\\">\"\n      $.each @cache, (index, item) ->\n        html += \"<div class=\\\"slidea-thumbnail-wrapper\\\" style=\\\"#{css_param}: \" + individual_size + \"px;\\\">\"\n        html += \"<img class=\\\"slidea-thumbnail\\\" src=\\\"\" + item.thumbnail + \"\\\" alt=\\\"Slide \" + index + \"\\\" />\"\n        html += \"</div>\"\n      html += \"</div>\"\n      html += \"</div>\"\n\n      @thumbnails = {}\n      @thumbnails.wrapper = $(html)\n\n      if @settings.thumbnails.position is \"before\"\n        @element.before @thumbnails.wrapper\n      else if @settings.thumbnails.position is \"after\"\n        @element.after @thumbnails.wrapper\n      else\n        @settings.thumbnails.position.append @thumbnails.wrapper\n\n      @thumbnails.inner = $(\".slidea-thumbnails-inner\", @thumbnails.wrapper)\n      @thumbnails.elements = $(\".slidea-thumbnail-wrapper\", @thumbnails.wrapper)\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        @thumbnails.size = @thumbnails.inner.width()\n        @thumbnails.parent_size = @thumbnails.wrapper.width()\n      else if @settings.thumbnails.orientation == 'vertical'\n        @thumbnails.size = @thumbnails.inner.height()\n        @thumbnails.parent_size = @thumbnails.wrapper.height()\n\n      @thumbnails.starting_position = 0\n      @thumbnails.starting_direction = undefined\n\n      @thumbnails.elements.each (i, el) =>\n        $thumbnail = $(el)\n        $thumbnail.on \"click\", =>\n          @thumbnails.elements.filter(\".active\").removeClass \"active\"\n          $thumbnail.addClass \"active\"\n          @slide i\n          return\n        return\n\n      $(\"img\", @thumbnails.elements.eq(0)).each (i, el) =>\n        $(el).load =>\n          height = $(el).height()\n\n          if @settings.thumbnails.orientation == 'horizontal'\n            @thumbnails.inner.height height\n          else if @settings.thumbnails.orientation == 'vertical'\n            @thumbnails.inner.height height * @slides_length\n          return\n        return\n\n      $(\"img\", @thumbnails.elements).on \"dragstart\", (event) ->\n        event.preventDefault()\n        return\n\n      if @settings.touch is true\n        touch_thumbnails = new Hammer @thumbnails.wrapper[0]\n\n        if @settings.thumbnails.orientation == 'horizontal'\n          pan_events = 'panleft panright'\n          touch_thumbnails.get('pan').set\n            direction: Hammer.DIRECTION_HORIZONTAL\n        else if @settings.thumbnails.orientation == 'vertical'\n          pan_events = 'panup pandown'\n          touch_thumbnails.get('pan').set\n            direction: Hammer.DIRECTION_VERTICAL\n\n\n        # Bind touch event to the thumbnails\n        touch_thumbnails.on \"panstart pancancel panend #{pan_events}\", (event) =>\n          if @settings.thumbnails.orientation == 'horizontal'\n            distance = event.deltaX\n          else if @settings.thumbnails.orientation == 'vertical'\n            distance = event.deltaY\n\n          # When moving, sync the slider with the mouse movement\n          if @settings.thumbnails.orientation == 'horizontal' and event.type is 'panleft' or event.type is 'panright'\n            if event.direction is Hammer.DIRECTION_LEFT or event.direction is Hammer.DIRECTION_RIGHT\n              transform = \"translate3d(#{@thumbnails.starting_position + distance}px, 0, 0)\"\n              @thumbnails.inner.css\n                'transform': transform\n                '-o-transform': transform\n                '-ms-transform': transform\n                '-moz-transform': transform\n                '-webkit-transform': transform\n\n          else if @settings.thumbnails.orientation == 'vertical' and event.type is 'panup' or event.type is 'pandown'\n            if event.direction is Hammer.DIRECTION_UP or event.direction is Hammer.DIRECTION_DOWN\n              transform = \"translate3d(0, #{@thumbnails.starting_position + distance}px, 0)\"\n              @thumbnails.inner.css\n                'transform': transform\n                '-o-transform': transform\n                '-ms-transform': transform\n                '-moz-transform': transform\n                '-webkit-transform': transform\n\n          # Get starting transform position\n          else if event.type is 'panstart' and !@thumbnails.inner.hasClass 'animating'\n            @thumbnails.inner.addClass 'slidea-dragging'\n\n            @thumbnails.starting_direction = event.direction\n\n          # When letting go, check if we have enough distance to go to the next slide\n          # otherwise return to the initial position\n          else if event.type is 'panend'\n            @thumbnails.inner.removeClass 'slidea-dragging'\n\n            # Set new starting position\n            @thumbnails.starting_position += distance\n\n            # Don't go past last thumbnail\n            if @thumbnails.starting_position < - @thumbnails.size + @thumbnails.parent_size\n              @scroll_to_thumbnail @slides_length - 1\n\n            # Don't go past first thumbnail\n            else if @thumbnails.starting_position > 0\n              @scroll_to_thumbnail 0\n\n            # Snap to current thumbnail\n            else\n              snap_distance = 0\n              @thumbnails.elements.each (index, item) =>\n                if @thumbnails.starting_position > -snap_distance\n                  @scroll_to_thumbnail index\n                  return false\n\n                if @settings.thumbnails.orientation == 'horizontal'\n                  snap_distance += $(item).width()\n                else if @settings.thumbnails.orientation == 'vertical'\n                  snap_distance += $(item).height()\n\n                return\n\n          event.preventDefault()\n          return\n      return\n\n    # Resize thumbnails when window resize happens\n    #\n    @resize = =>\n      thumbs_count = @settings.thumbnails.visible[@current_responsive_size]\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        individual_size = @element_width / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'width'\n      else if @settings.thumbnails.orientation == 'vertical'\n        individual_size = @thumbnails.wrapper.parent().height() / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'height'\n\n      @thumbnails.inner[css_param] inner_size\n      @thumbnails.elements[css_param] individual_size\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        @thumbnails.size = inner_size\n      else if @settings.thumbnails.orientation == 'vertical'\n        @thumbnails.size = inner_size\n\n      @thumbnails.parent_size = @thumbnails.wrapper[css_param]()\n\n      size = undefined\n      if @settings.thumbnails.orientation == 'horizontal'\n        size = $(\"img\", @thumbnails.elements.eq(0)).height()\n        @thumbnails.inner.height size\n      else if @settings.thumbnails.orientation == 'vertical'\n        size = $(\"img\", @thumbnails.elements.eq(0)).width()\n        @thumbnails.inner.width size\n\n      @scroll_to_thumbnail @current\n\n      return\n\n    @slide = (from, to) ->\n      @thumbnails.elements.filter('.active').removeClass 'active'\n      @thumbnails.elements.eq(to).addClass 'active'\n      @scroll_to_thumbnail to\n\n      @log \"Scrolled to thumbnail #{to}.\"\n      return\n\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'thumbnails', $.fn.rockSlider.thumbnails\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.touch = ->\n    ###\n    Enable or disable video features\n    ###\n    @settings = true\n\n    ###\n    Enable touch handler for the slider.\n    @require Hammer.js\n    ###\n    @load = ->\n      # Get touch target\n      @touch_object = new Hammer @element[0]\n\n      # Allow horizontal touch only\n      @touch_object.get('pan').set\n        direction: Hammer.DIRECTION_HORIZONTAL\n\n      # Add panleft and panright events\n      @touch_object.on 'panleft panright', (event) =>\n        # Show dragging cursor on drag start\n        if event.eventType is Hammer.INPUT_START\n          @element.addClass 'slidea-dragging'\n\n        else if event.eventType is Hammer.INPUT_END or event.eventType is Hammer.INPUT_CANCEL\n          @element.removeClass 'slidea-dragging'\n\n          # Swipe left or right based on direction\n          if event.direction is Hammer.DIRECTION_LEFT\n            @slide @current + 1\n          else if event.direction is Hammer.DIRECTION_RIGHT\n            @slide @current - 1\n\n        return\n\n      @log \"Bound touch pan left and right events.\"\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'touch', $.fn.rockSlider.touch\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.videoCover = ->\n    ###\n    Enable or disable video cover features\n    ###\n    @settings = true\n\n    ###\n    Set up the video covers so that they fade out and play the\n    actual video on click event\n    ###\n    @initialize = ->\n      covers = $(@settings.selector.video_cover, @element)\n\n      covers.each (i, el) =>\n        $cover = $(el)\n        $parent = $cover.parent()\n        $video = $(@settings.selector.video, $parent)\n        type = video_type\n        id = $video.attr(\"id\")\n\n        switch type\n          when \"html5\"\n            $cover.on \"click\", =>\n              $video.get(0).play()\n              $cover.velocity \"fadeOut\"\n              return\n\n          when \"youtube\"\n            $cover.on \"click\", =>\n              @youtube_player[id].playVideo()\n              $cover.velocity \"fadeOut\"\n              return\n\n          when \"vimeo\"\n            $cover.on \"click\", =>\n              @vimeo_player[id].api \"play\"\n              $cover.velocity \"fadeOut\"\n              return\n\n        return\n\n      @log \"Added video cover events.\" if covers.length > 0\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'video_cover', $.fn.rockSlider.videoCover\n\n) window.jQuery, window, document\n","(($, window, document) ->\n  \"use strict\"\n\n  $.fn.rockSlider.video = ->\n    ###\n    Enable or disable video features\n    ###\n    @settings = true\n\n    ###\n    Setup video events at slide start for HTML5, YouTube and Vimeo videos\n    ###\n    @initialize = ->\n      ###\n      Handle autoplay timeouts using a timeout timeline\n      ###\n      @video_timeline = {}\n\n      delay = 500\n      interval = undefined\n      i = 0\n      tries = 10\n\n      # Handle background videos\n      $('.slidea-video-background').each (index, background) ->\n        unless $(background).hasClass 'slidea-object'\n          $(background).addClass 'slidea-object'\n        return\n\n      $(\"video.slidea-video\", @element).attr \"data-slidea-video-type\", \"html5\"\n      $(\"iframe[data-slidea-src*=\\\"youtube.com\\\"].slidea-video\", @element).attr \"data-slidea-video-type\", \"youtube\"\n      $(\"iframe[data-slidea-src*=\\\"vimeo.com\\\"].slidea-video\", @element).attr \"data-slidea-video-type\", \"vimeo\"\n\n      $(@settings.selector.video, @element).each (i, el) =>\n        # Get video\n        $video = $(el)\n\n        # Get volume\n        volume = $video.attr(\"data-slidea-volume\")\n        volume = (if isNaN(volume) then 0 else volume)\n\n        # Get controls\n        controls = ($video.attr(\"data-slidea-controls\") is \"true\")\n\n        # Pause slider on video play\n        pause_slider= ($video.attr(\"data-slidea-pause-slider\") is \"true\")\n\n        # Get src\n        src = $video.attr(\"data-slidea-src\")\n\n        # Get video type\n        video_type = $video.attr(\"data-slidea-video-type\")\n\n        # Get video id\n        $video.attr \"id\", @get_random_id(\"slidea-video\") unless $video.attr(\"id\")?\n        id = $video.attr(\"id\")\n\n        # HTML5\n        if video_type is \"html5\"\n          # Set volume\n          $video.get(0).volume = volume\n\n          # Enable or disable controls\n          $video.attr \"controls\", \"controls\"  if controls is true\n\n          # If slider is set to autoplay, pause the slider when video starts\n          if @settings.autoplay is true and pause_slider is true\n            # On video play\n            $video.on \"play\", =>\n              @pause_timer()\n              return\n\n            # On video pause\n            $video.on \"pause ended\", =>\n              @unpause_timer()\n              return\n\n\n        # YouTube\n        if video_type is \"youtube\"\n          video_id = undefined\n          separator = undefined\n\n          # Enable video JS API\n          if src.indexOf(\"enablejsapi=1\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?enablejsapi=1\"\n            else\n              $video.attr \"src\", src + \"&enablejsapi=1\"\n            src = $video.attr(\"src\")\n\n          # Set player API ID\n          if src.indexOf(\"playerapiid=\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?playerapiid=\" + id\n            else\n              $video.attr \"src\", src + \"&playerapiid=\" + id\n            src = $video.attr(\"src\")\n\n          # Get youtube Video ID\n          unless src.indexOf(\"embed\") is \"-1\"\n            video_id = src.split(\"/\")\n            video_id = video_id[video_id.length - 1]\n            separator = video_id.indexOf(\"?\")\n            video_id = video_id.substring(0, separator)  unless separator is -1\n          else\n            video_id = src.split(\"v=\")[1]\n            separator = video_id.indexOf(\"&\")\n            video_id = video_id.substring(0, separator)  unless separator is -1\n\n          # Create a new YT Player using the API\n          $video.load =>\n            @youtube_player[id] = new YT.Player(id,\n              height: \"720\"\n              width: \"1280\"\n              video_id: video_id\n              events:\n                onStateChange: (e) =>\n                  @pause_timer()  if e.data is 1\n                  @unpause_timer()  if e.data is 2 or e.data is 0\n            )\n\n            # Try to set the video volume\n            i = 0\n            interval = setInterval(=>\n              i++\n              if i is tries\n                clearInterval interval\n              else if not @youtube_player[id]? or typeof @youtube_player[id].setVolume isnt \"function\"\n                return\n              else\n                clearInterval interval\n              @youtube_player[id].setVolume volume\n            , delay)\n            return\n\n        # Vimeo\n        if video_type is \"vimeo\"\n\n          # Enable vimeo JS API\n          if src.indexOf(\"api=1\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?api=1\"\n            else\n              $video.attr \"src\", src + \"&api=1\"\n            src = $video.attr(\"src\")\n\n          # Setup Vimeo player ID\n          if src.indexOf(\"player_id=\") is -1\n            if src.indexOf(\"?\") is -1\n              $video.attr \"src\", src + \"?player_id=\" + id\n            else\n              $video.attr \"src\", src + \"&player_id=\" + id\n            src = $video.attr(\"src\")\n\n          # Create a new Vimeo Player API\n          $video.load =>\n            @vimeo_player[id] = $f(id)\n            @vimeo_player[id].addEvent \"ready\", =>\n              $video.attr \"data-slidea-ready\", \"true\"\n              @vimeo_player[id].api \"setVolume\", volume\n              if @settings.autoplay is true and pause_slider is true\n                @vimeo_player[id].addEvent \"play\", @pause_timer\n                @vimeo_player[id].addEvent \"pause\", @unpause_timer\n                @vimeo_player[id].addEvent \"finish\", @unpause_timer\n            return\n        return\n\n    ###\n    Handle video events at slide start for HTML5, YouTube and Vimeo videos\n    ###\n    @handle_videos = (previous, current) ->\n      $previous = @slides.eq(previous)\n      $current = @slides.eq(current)\n\n      previous_videos = $(@settings.selector.video, $previous)\n      current_videos = $(@settings.selector.video, $previous)\n\n      # Pause or stop videos from previous slide\n      if previous != -1 and previous_videos.length > 0\n        previous_videos.each =>\n          # Current Video\n          $video = $(` this `)\n\n          # Get video ID\n          id = $video.attr('id')\n\n          # Get video type\n          video_type = $video.attr('data-slidea-video-type')\n\n          # Check if the video resets when next slide is triggered\n          reset = $video.attr('data-slidea-reset') == 'true'\n\n          # Clear the video timeout for the current video\n          clearTimeout @video_timeline[id]\n\n          # HTML5\n          if video_type == 'html5'\n            # Pause the video\n            $video.get(0).pause()\n\n            # Reset the video after the slide animation has finished\n            if reset\n              setTimeout (=>\n                $video.get(0).current_time = 0\n                return\n              ), @data[current].background[0].animation[0].duration\n\n          # Youtube\n          else if video_type == 'youtube'\n            # Pause the video\n            @youtube_player[id].pauseVideo()\n\n            # Reset the video after the slide animation has finished\n            if reset\n              setTimeout (=>\n                @youtube_player[id].stopVideo()\n                return\n              ), @data[current].background[0].animation[0].duration\n\n          # Vimeo\n          else if video_type == 'vimeo'\n            # Pause the video\n            @vimeo_player[id].api 'pause'\n\n            # Reset the video after the slide animation has finished\n            if reset\n              setTimeout (=>\n                @vimeo_player[id].api 'unload'\n                return\n              ), @data[current].background[0].animation[0].duration\n          return\n\n        @log \"Paused (handled) videos from slide #{previous}.\"\n\n      if current_videos.length > 0\n        # Play videos from current slide\n        current_videos.each =>\n          # Get video\n          $video = $(` this `)\n\n          # Get video ID\n          id = $video.attr('id')\n\n          # Set try interval data\n          delay = 500\n          interval = undefined\n          i = 0\n          tries = 10\n\n          # Check if video should autoplay\n          autoplay = $video.attr('data-slidea-autoplay') == 'true'\n\n          # Get autoplay time\n          autoplay_time = if $video.attr('data-slidea-autoplay-time')? then parseInt($video.attr('data-slidea-autoplay-time'), 10) else 100\n\n          # Check if the video pauses the slider\n          pause_slider = $video.attr('data-slidea-pause-slider') == 'true'\n\n          # HTML5\n          if $video.attr('data-slidea-video-type') == 'html5'\n            if autoplay == true\n              # Start the video player after the set delay\n              @video_timeline[id] = setTimeout((->\n                $video.get(0).play()\n                return\n              ), autoplay_time)\n\n          # Youtube\n          if $video.attr('data-slidea-video-type') == 'youtube'\n            if autoplay == true\n              # Try to get the youtube player\n              i = 0\n              interval = setInterval((=>\n                i++\n                if i == tries\n                  clearInterval interval\n                else if !$video.attr('data-slidea-ready')? or\n                        !defined(@youtube_player[id]) or\n                        typeof @youtube_player[id].playVideo != 'function'\n                  return\n                else\n                  clearInterval interval\n\n                # Start the video player after the set delay\n                @video_timeline[id] = setTimeout((=>\n                  @youtube_player[id].playVideo()\n                  return\n                ), autoplay_time)\n                return\n              ), delay)\n\n          # Vimeo\n          if $video.attr('data-slidea-video-type') == 'vimeo'\n            if autoplay == true\n              # Try to get the vimeo player\n              i = 0\n              interval = setInterval((=>\n                i++\n                if i == tries\n                  clearInterval interval\n                else if !$video.attr('data-slidea-ready')? or\n                        typeof @vimeo_player[id].api != 'function'\n                  return\n                else\n                  clearInterval interval\n\n                # Start the video player after the set delay\n                @video_timeline[id] = setTimeout((->\n                  Froogaloop(id).api 'play'\n                  return\n                ), autoplay_time)\n                return\n              ), delay)\n          return\n\n        @log \"Played (handled) videos from slide #{current}.\"\n\n      return\n\n    @resize = ->\n      @slides.each (i, element) =>\n        slide = $ element\n        # Fit slidea-slider videos to their containers\n        $(@settings.selector.video, @element).each (i, video)=>\n          video = $(video)\n          parent = video.parent()\n\n          if parent.is('.slidea-video-background')\n            return\n\n          height = parent.height()\n          width = parent.width()\n\n          video.css\n            width: width\n            height: height\n\n          return\n\n        # Set slide to have a full screen Video Background\n        video_background = $('.slidea-video-background', slide)\n        if video_background.length > 0\n          video = $('.video', $video_background)\n\n          data_width = parseInt($video.attr('data-slidea-width'))\n          data_height = parseInt($video.attr('data-slidea-height'))\n\n          video_width = @slider_width\n          video_height = video_width * data_height / data_width\n\n          margin_left = -(video_width - (@parent_width)) / 2\n          margin_top = -(video_height - (@parent_height)) / 2\n\n          video.css\n            'width': video_width\n            'height': video_height\n            'margin-left': margin_left\n            'margin-top': margin_top\n        return\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.rockSlider.register_module 'video', $.fn.rockSlider.video\n\n) window.jQuery, window, document\n"]}