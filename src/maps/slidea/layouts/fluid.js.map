{"version":3,"sources":["slidea/layouts/fluid.coffee"],"names":[],"mappings":"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","file":"slidea/layouts/fluid.js","sourceRoot":"/source/","sourcesContent":["###\n\n         dP oo       dP\n         88          88\n.d8888b. 88 dP .d888b88 .d8888b. .d8888b.\nY8ooooo. 88 88 88'  `88 88ooood8 88'  `88\n      88 88 88 88.  .88 88.  ... 88.  .88\n`88888P' dP dP `88888P8 `88888P' `88888P8\noooooooooooooooooooooooooooooooooooooooooo\n\n@plugin    jQuery\n@license   CodeCanyon Standard / Extended\n@author    Alex Grozav\n@company   Pixevil\n@website   http://pixevil.com\n@email     alex@grozav.com\n###\n\n(($, window, document) ->\n  \"use strict\"\n\n  $.fn.slidea.fluidLayout = ->\n    # Extend layout settings\n    @settings =\n      anchor: 'center'\n      size: 'fullscreen'\n\n    ###\n    Get Parent sizes\n    ###\n    set_parent_size = ->\n      if @settings.layoutSettings.size == 'fullscreen'\n        @parent_width = @window_width\n        @parent_height = @window_height\n      else if @settings.layoutSettings.size == 'screenHeight'\n        @parent_height = @window_height\n      else if @settings.layoutSettings.size == 'screenWidth'\n        @parent_width = @window_width\n\n    ###\n    Resize slider to showcase the given slide\n    ###\n    resize_slider = (slide) ->\n      # Reset current slide index if slider hasn't started\n      if slide is -1\n        slide = @first_slide\n\n      # Set size for the current slide\n      current_slide_image_width = @data[slide].background[0].width\n      current_slide_image_height = @data[slide].background[0].height\n\n      # Get parent size\n      set_parent_size.call @\n\n      # Slider Size\n      @slider_width = @parent_width\n      @slider_height = @parent_width / current_slide_image_width * current_slide_image_height\n\n      if @parent_height > @slider_height\n        @slider_width = @parent_height / current_slide_image_height * current_slide_image_width\n        @slider_height = @parent_height\n\n      # Set overvflow wrapper size\n      @wrapper_width = @parent_width\n      @wrapper_height = @parent_height\n      @wrapper.css\n        height: @wrapper_height\n        width: @wrapper_width\n\n\n      # Set inner wrapper size\n      @inner.width @slider_width\n      @inner.height @slider_height\n\n      @log \"Slider size set to #{@slider_width} x #{@slider_height}\"\n      return\n\n    ###\n    Resize the slide with the given index\n    ###\n    resize_slide = (index) ->\n      return unless @data[index].background?\n\n      slide = @slides.eq(index)\n\n      # Get parent size\n      set_parent_size.call @\n\n      # Set slide images width\n      slide_image_width = @data[index].background[0].width\n      slide_image_height = @data[index].background[0].height\n\n      # Set slider visible width and height, meaning area which is inside the\n      # container, overflowing on the screen\n      slide_width = @slider_width\n      slide_height = slide_width / slide_image_width * slide_image_height\n\n      $(@settings.selector.contentWrapper, @element).css\n        height: @parent_height\n        width: @parent_width\n\n      # Slide Layers\n      width_ratio = slide_width / slide_image_width\n      height_ratio = slide_height / slide_image_height\n\n      # Margins for centering the images\n      switch @settings.layoutSettings.anchor\n        when 'center'\n          margin_left = -(@slider_width - (@parent_width)) / 2\n          margin_top = -(@slider_height - (@parent_height)) / 2\n        when 'top'\n          margin_left = -(@slider_width - (@parent_width)) / 2\n          margin_top = 0\n        when 'bottom'\n          margin_left = -(@slider_width - (@parent_width)) / 2\n          margin_top = -(@slider_height - (@parent_height))\n        when 'left'\n          margin_left = 0\n          margin_top = -(@slider_height - (@parent_height))\n        when 'right'\n          margin_left = -(@slider_width - (@parent_width))\n          margin_top = -(@slider_height - (@parent_height)) / 2\n        when 'top-left'\n          margin_left = 0\n          margin_top = 0\n        when 'bottom-left'\n          margin_left = 0\n          margin_top = -(@slider_height - (@parent_height))\n        when 'top-right'\n          margin_left = -(@slider_width - (@parent_width))\n          margin_top = 0\n        when 'bottom-right'\n          margin_left = -(@slider_width - (@parent_width))\n          margin_top = -(@slider_height - (@parent_height))\n\n      margin_left = 0 if margin_left > 0\n      margin_top = 0 if margin_top > 0\n\n      $(@settings.selector.backgroundWrapper, slide).css\n        'margin-top': margin_top\n        'margin-left': margin_left\n\n      # Get top, right, bottom and left position of the slide layers\n      slide_layers = $(@settings.selector.layerWrapper, slide)\n      slide_layers.each (layer_index, layer) =>\n        layer_css = {}\n\n        if 'top' of @data[index].layer[layer_index].position\n          layer_css.top = height_ratio * @data[index].layer[layer_index].position.top + margin_top\n        else if 'bottom' of @data[index].layer[layer_index].position\n          layer_css.bottom = height_ratio * @data[index].layer[layer_index].position.bottom - margin_top\n\n        if 'left' of @data[index].layer[layer_index].position\n          layer_css.left = width_ratio * @data[index].layer[layer_index].position.left + margin_left\n        else if 'right' of @data[index].layer[layer_index].position\n          layer_css.right = width_ratio * @data[index].layer[layer_index].position.right - margin_left\n\n        if 'width' of @data[index].layer[layer_index]\n          layer_css.width = width_ratio * @data[index].layer[layer_index].width\n        if 'height' of @data[index].layer[layer_index]\n          layer_css.height = height_ratio * @data[index].layer[layer_index].height\n\n        $(layer).css layer_css\n        return\n      return\n\n    ###\n    Initialize the @parameters\n    ###\n    @initialize = ->\n      # Add Classes\n      @element.addClass 'slidea-fluid-layout'\n\n      return\n\n    ###\n    Set up the slider and each of the slides\n    ###\n    @resize = ->\n      unless @data?\n        return\n\n      resize_slider.apply @, [@current]\n\n      # Compute visible background image size and set margins to center the image\n      @slides.each (index, slide) =>\n        resize_slide.apply @, [index]\n        return\n      return\n\n    # Display the slide element with index i and program the animation logic for\n    # each background, layer and object\n    #\n    # Previous slide needs to be set in order to preview the out animation so that\n    # we can create a transition between every slide\n    #\n    # The layers and objects need to be stopped and reanimated in order to prevent\n    # animation flaws.\n    #\n    # Layer and object animation will transition from an inverted\n    # animation state to a default state to provide normal slider behaviour\n    #\n    @slide = (from, to) ->\n      resize_slider.apply @, [to]\n      resize_slide.apply @, [to]\n      return\n    return\n\n  # Add the layer to Slidea as a new instance\n  #\n  $.slidea.register_layout 'fluid', $.fn.slidea.fluidLayout\n  return\n\n) jQuery, window, document\n"]}