{"version":3,"sources":["slidea/layouts/default.coffee"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;AAAA;EAkBA,CAAC,SAAC,CAAD,EAAI,MAAJ,EAAY,QAAZ;IACC;IAEA,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,aAAZ,GAA4B,SAAA;;AAC1B;;;AAAA,UAAA;MAGA,aAAA,GAAgB,SAAC,KAAD;AAEd,YAAA;QAAA,IAAG,KAAA,KAAS,CAAC,CAAb;UACE,KAAA,GAAQ,IAAC,CAAA,YADX;;QAIA,yBAAA,GAA4B,IAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,UAAW,CAAA,CAAA,CAAE,CAAC;QACvD,0BAAA,GAA6B,IAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,UAAW,CAAA,CAAA,CAAE,CAAC;QAGxD,IAAC,CAAA,YAAD,GAAgB,IAAC,CAAA;QACjB,IAAC,CAAA,aAAD,GAAiB,IAAC,CAAA,YAAD,GAAgB,yBAAhB,GAA4C;QAG7D,IAAC,CAAA,OAAO,CAAC,EAAT,CAAY,IAAC,CAAA,OAAb,EAAsB,IAAtB,EACE;UAAA,GAAA,EACE;YAAA,MAAA,EAAQ,IAAC,CAAA,aAAT;YACA,KAAA,EAAO,IAAC,CAAA,YADR;WADF;SADF;QAMA,IAAC,CAAA,KAAK,CAAC,KAAP,CAAa,IAAC,CAAA,YAAd;QACA,IAAC,CAAA,KAAK,CAAC,MAAP,CAAc,IAAC,CAAA,aAAf;QAEA,IAAC,CAAA,GAAD,CAAK,qBAAA,GAAsB,IAAC,CAAA,YAAvB,GAAoC,KAApC,GAAyC,IAAC,CAAA,aAA/C;MAvBc;;AA0BhB;;;MAGA,YAAA,GAAe,SAAC,KAAD;AACb,YAAA;QAAA,IAAc,mCAAd;AAAA,iBAAA;;QAEA,KAAA,GAAQ,IAAC,CAAA,MAAM,CAAC,EAAR,CAAW,KAAX;QAGR,iBAAA,GAAoB,IAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,UAAW,CAAA,CAAA,CAAE,CAAC;QAC/C,kBAAA,GAAqB,IAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,UAAW,CAAA,CAAA,CAAE,CAAC;QAIhD,WAAA,GAAc,IAAC,CAAA;QACf,YAAA,GAAe,WAAA,GAAc,iBAAd,GAAkC;QAGjD,WAAA,GAAc,WAAA,GAAc;QAC5B,YAAA,GAAe,YAAA,GAAe;QAG9B,YAAA,GAAe,CAAA,CAAE,IAAC,CAAA,QAAQ,CAAC,QAAQ,CAAC,YAArB,EAAmC,KAAnC;QACf,YAAY,CAAC,IAAb,CAAkB,CAAA,SAAA,KAAA;iBAAA,SAAC,WAAD,EAAc,KAAd;AAChB,gBAAA;YAAA,SAAA,GAAY;YAEZ,IAAG,KAAA,IAAS,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,QAA5C;cACE,SAAS,CAAC,GAAV,GAAgB,YAAA,GAAe,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,QAAQ,CAAC,IAD1E;aAAA,MAEK,IAAG,QAAA,IAAY,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,QAA/C;cACH,SAAS,CAAC,MAAV,GAAmB,YAAA,GAAe,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,QAAQ,CAAC,OADxE;;YAGL,IAAG,MAAA,IAAU,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,QAA7C;cACE,SAAS,CAAC,IAAV,GAAiB,WAAA,GAAc,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,QAAQ,CAAC,KAD1E;aAAA,MAEK,IAAG,OAAA,IAAW,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,QAA9C;cACH,SAAS,CAAC,KAAV,GAAkB,WAAA,GAAc,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,QAAQ,CAAC,MADtE;;YAGL,IAAG,OAAA,IAAW,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAjC;cACE,SAAS,CAAC,KAAV,GAAkB,WAAA,GAAc,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,MADlE;;YAEA,IAAG,QAAA,IAAY,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAlC;cACE,SAAS,CAAC,MAAV,GAAmB,YAAA,GAAe,KAAC,CAAA,IAAK,CAAA,KAAA,CAAM,CAAC,KAAM,CAAA,WAAA,CAAY,CAAC,OADpE;;YAGA,CAAA,CAAE,KAAF,CAAQ,CAAC,GAAT,CAAa,SAAb;UAlBgB;QAAA,CAAA,CAAA,CAAA,IAAA,CAAlB;MApBa;;AA0Cf;;;MAGA,IAAC,CAAA,UAAD,GAAc,SAAA;QAEZ,IAAC,CAAA,OAAO,CAAC,QAAT,CAAkB,uBAAlB;MAFY;;AAKd;;;MAGA,IAAC,CAAA,YAAD,GAAgB,SAAC,KAAD;QACd,YAAY,CAAC,KAAb,CAAmB,IAAnB,EAAsB,CAAC,KAAD,CAAtB;MADc;;AAIhB;;;MAGA,IAAC,CAAA,MAAD,GAAU,SAAA;QACR,IAAO,iBAAP;AACE,iBADF;;QAGA,aAAa,CAAC,KAAd,CAAoB,IAApB,EAAuB,CAAC,IAAC,CAAA,OAAF,CAAvB;QAGA,IAAC,CAAA,MAAM,CAAC,IAAR,CAAa,CAAA,SAAA,KAAA;iBAAA,SAAC,KAAD,EAAQ,KAAR;YACX,YAAY,CAAC,KAAb,CAAmB,KAAnB,EAAsB,CAAC,KAAD,CAAtB;UADW;QAAA,CAAA,CAAA,CAAA,IAAA,CAAb;MAPQ;;AAYV;;;;;;;;;;;;;MAaA,IAAC,CAAA,KAAD,GAAS,SAAC,IAAD,EAAO,EAAP;QACP,aAAa,CAAC,KAAd,CAAoB,IAApB,EAAuB,CAAC,EAAD,CAAvB;QACA,YAAY,CAAC,KAAb,CAAmB,IAAnB,EAAsB,CAAC,EAAD,CAAtB;MAFO;IAtHiB;;AA4H5B;;;IAGA,CAAC,CAAC,MAAM,CAAC,eAAT,CAAyB,SAAzB,EAAoC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,aAAhD;EAlID,CAAD,CAAA,CAqIE,MArIF,EAqIU,MArIV,EAqIkB,QArIlB;AAlBA","file":"slidea/layouts/default.js","sourceRoot":"/source/","sourcesContent":["###\n\n         dP oo       dP\n         88          88\n.d8888b. 88 dP .d888b88 .d8888b. .d8888b.\nY8ooooo. 88 88 88'  `88 88ooood8 88'  `88\n      88 88 88 88.  .88 88.  ... 88.  .88\n`88888P' dP dP `88888P8 `88888P' `88888P8\noooooooooooooooooooooooooooooooooooooooooo\n\n@plugin    jQuery\n@license   CodeCanyon Standard / Extended\n@author    Alex Grozav\n@company   Pixevil\n@website   http://pixevil.com\n@email     alex@grozav.com\n###\n\n(($, window, document) ->\n  \"use strict\"\n\n  $.fn.slidea.defaultLayout = ->\n    ###\n    Resize slider to showcase the given slide\n    ###\n    resize_slider = (slide) ->\n      # Reset current slide index if slider hasn't started\n      if slide is -1\n        slide = @first_slide\n\n      # Set size for the current slide\n      current_slide_image_width = @data[slide].background[0].width\n      current_slide_image_height = @data[slide].background[0].height\n\n      # Slider Size\n      @slider_width = @parent_width\n      @slider_height = @parent_width / current_slide_image_width * current_slide_image_height\n\n      # Set overvflow wrapper size\n      @animate.to @wrapper, 0.75,\n        css:\n          height: @slider_height\n          width: @slider_width\n\n      # Set inner wrapper size\n      @inner.width @slider_width\n      @inner.height @slider_height\n\n      @log \"Slider size set to #{@slider_width} x #{@slider_height}\"\n      return\n\n    ###\n    Resize the slide with the given index\n    ###\n    resize_slide = (index) ->\n      return unless @data[index].background?\n\n      slide = @slides.eq(index)\n\n      # Set slide images width\n      slide_image_width = @data[index].background[0].width\n      slide_image_height = @data[index].background[0].height\n\n      # Set slider visible width and height, meaning area which is inside the\n      # container, overflowing on the screen\n      slide_width = @slider_width\n      slide_height = slide_width / slide_image_width * slide_image_height\n\n      # Slide Layers\n      width_ratio = slide_width / slide_image_width\n      height_ratio = slide_height / slide_image_height\n\n      # Get top, right, bottom and left position of the slide layers\n      slide_layers = $(@settings.selector.layerWrapper, slide)\n      slide_layers.each (layer_index, layer) =>\n        layer_css = {}\n\n        if 'top' of @data[index].layer[layer_index].position\n          layer_css.top = height_ratio * @data[index].layer[layer_index].position.top\n        else if 'bottom' of @data[index].layer[layer_index].position\n          layer_css.bottom = height_ratio * @data[index].layer[layer_index].position.bottom\n\n        if 'left' of @data[index].layer[layer_index].position\n          layer_css.left = width_ratio * @data[index].layer[layer_index].position.left\n        else if 'right' of @data[index].layer[layer_index].position\n          layer_css.right = width_ratio * @data[index].layer[layer_index].position.right\n\n        if 'width' of @data[index].layer[layer_index]\n          layer_css.width = width_ratio * @data[index].layer[layer_index].width\n        if 'height' of @data[index].layer[layer_index]\n          layer_css.height = height_ratio * @data[index].layer[layer_index].height\n\n        $(layer).css layer_css\n        return\n      return\n\n    ###\n    Initialize slider layout\n    ###\n    @initialize = ->\n      # Add Classes\n      @element.addClass 'slidea-default-layout'\n      return\n\n    ###\n    Resize slide with given index\n    ###\n    @resize_slide = (index)->\n      resize_slide.apply @, [index]\n      return\n\n    ###\n    Set up the slider and each of the slides\n    ###\n    @resize = ->\n      unless @data?\n        return\n\n      resize_slider.apply @, [@current]\n\n      # Compute visible background image size and set margins to center the image\n      @slides.each (index, slide) =>\n        resize_slide.apply @, [index]\n        return\n      return\n\n    ###\n    Display the slide element with index i and program the animation logic for\n    each background, layer and object\n\n    Previous slide needs to be set in order to preview the out animation so that\n    we can create a transition between every slide\n\n    The layers and objects need to be stopped and reanimated in order to prevent\n    animation flaws.\n\n    Layer and object animation will transition from an inverted\n    animation state to a default state to provide normal slider behaviour\n    ###\n    @slide = (from, to) ->\n      resize_slider.apply @, [to]\n      resize_slide.apply @, [to]\n      return\n    return\n\n  ###\n  Add the layer to Slidea as a new instance\n  ###\n  $.slidea.register_layout 'default', $.fn.slidea.defaultLayout\n  return\n\n) jQuery, window, document\n"]}