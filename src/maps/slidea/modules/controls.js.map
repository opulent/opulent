{"version":3,"sources":["slidea/modules/controls.coffee"],"names":[],"mappings":"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","file":"slidea/modules/controls.js","sourceRoot":"/source/","sourcesContent":["(($, window, document) ->\n  \"use strict\"\n\n  $.fn.slidea.controls = ->\n    ###\n    Set up slider controls\n    ###\n    @settings =\n      enabled: false # Add next / prev buttons\n      thumbnail: false # Add thumbnail to controls\n      html:\n        prev: \"&lt;\"\n        next: \"&gt;\"\n      class: \"slidea-controls-alternate\" # Additional control classes\n\n    ###\n    Slider Initialization Event\n    ###\n    @initialize = ->\n      @settings.controls.enabled = false if @slides_length == 1\n      return\n\n    ###\n    Update slide data\n    ###\n    @get_slide_data = (index, slide) ->\n      if @settings.controls.thumbnail and !@data[index].thumbnail?\n        thumbnail = slide.attr('data-slidea-thumbnail')\n        if thumbnail?\n          @data[index].thumbnail = thumbnail\n        else\n          @data[index].thumbnail = $(@settings.selector.background, slide).attr('src')\n      return\n\n    ###\n    Add controls to the slider\n    ###\n    @load = ->\n      html = ''\n      for control in ['next', 'prev']\n        alt = control.toLowerCase().replace /\\b[a-z]/g, (letter) ->\n          return letter.toUpperCase()\n\n        html += '<a href=\"javascript:void(0);\" class=\"slidea-control slidea-' + control + ' ' + @settings.controls.class + '\">'\n        html += '<div class=\"slidea-control-inner\">'\n        if @settings.controls.thumbnail is true\n          html += '<div class=\"slidea-control-thumbnail\">'\n          html += '<img src=\"\" alt=\"' + alt + ' Slide\" class=\"slidea-control-image\"/>'\n          html += '</div>'\n        html += '<div class=\"slidea-control-text\">'\n        html += @settings.controls.html[control]\n        html += '</div>'\n        html += '</div>'\n        html += '</a>'\n\n      # Add controls HTML\n      @wrapper.append html\n\n      # Set previous button\n      @prev_button = $(@settings.selector.prev, @element)\n      @prev_button.on 'click', =>\n        @slide @current - 1\n        return\n\n      # Set next button\n      @next_button = $(@settings.selector.next, @element)\n      @next_button.on 'click', =>\n        @slide @current + 1\n        return\n\n      # Set thumbnails\n      if @settings.controls.thumbnail is true\n        @prev_thumbnail = $('.slidea-control-image', @prev_button)\n        @next_thumbnail = $('.slidea-control-image', @next_button)\n\n      return\n\n    ###\n    Run on slide modifiers for controls\n    ###\n    @slide = (from, to) ->\n      if @settings.controls.thumbnail\n        @prev_thumbnail.attr 'src', @data[@prev].thumbnail\n        @next_thumbnail.attr 'src', @data[@next].thumbnail\n\n        @log \"Changed control thumbnails to prev[#{from}] and next[#{to}].\"\n      return\n    return\n\n  # Add the feature to Slidea as a new instance\n  #\n  $.slidea.register_module 'controls', $.fn.slidea.controls\n\n) window.jQuery, window, document\n"]}