{"version":3,"sources":["slidea/modules/content-scaling.coffee"],"names":[],"mappings":"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","file":"slidea/modules/content-scaling.js","sourceRoot":"/source/","sourcesContent":["(($, window, document) ->\n  \"use strict\"\n\n  $.fn.slidea.contentScaling = ->\n    ###\n    Enable or disable content scaling feature\n    ###\n    @settings =\n      enabled: false # Scale content based on parent width\n      mode: 'responsive' # natural or responsive\n      factor: # Scale multiplication coefficient\n        xs: 1\n        sm: 1\n        md: 1\n        lg: 1\n        xlg: 1\n\n\n    scale_content = (index) ->\n      return if index == -1\n\n      current_slide = @slides.eq(index)\n      content = $('.slidea-content', current_slide)\n\n      # Set scaling origin\n      origin_x = '0%'\n      if content.hasClass 'slidea-content-center'\n        origin_y = '50%'\n      else if content.hasClass 'slidea-content-bottom'\n        origin_y = '100%'\n      else\n        origin_y = '0%'\n\n\n      # Set reference widths\n      content_width = content.width()\n      calculated_width = @wrapper_width\n\n\n      if @settings.contentScaling.mode is 'responsive'\n        # Calculate scaling value based on current width\n        scaling_value = @settings.contentScaling.factor[@current_responsive_size]\n\n        @animate.set content,\n          scale: scaling_value\n          x:  (calculated_width - content_width * scaling_value) /2\n          transformOriginX: origin_x\n          transformOriginY: origin_y\n      else\n        # Calculate scaling width based on scaling factor\n        scaling_reference = @data[index].background[0].width\n\n        # Calculate scaling value based on current width\n        scaling_value = calculated_width / scaling_reference * @settings.contentScaling.factor[@current_responsive_size]\n\n        # Center content based on current resize value 8\n        if @settings.contentScaling.factor[@current_responsive_size] == 1\n          @animate.set content, x: 0\n        else\n          @animate.set content, x: (calculated_width * (1 - @settings.contentScaling.factor[@current_responsive_size]) / 2)\n\n        # @animate.set content, 'translateX', '-50%'\n        @animate.set content,\n          z: 0\n          transformOriginX: origin_x\n          transformOriginY: origin_y\n          scaleX: scaling_value\n          scaleY: scaling_value\n\n      @log \"Content has been scaled with #{scaling_value}.\"\n\n      return\n\n    ###\n    Scale content on window resize\n    ###\n    @slide = (from, to) ->\n      scale_content.call @, to\n      return\n\n    @resize = ->\n      scale_content.call @, @current\n      return\n    return\n\n  # Add the feature to RockSlider as a new instance\n  #\n  $.slidea.register_module 'contentScaling', $.fn.slidea.contentScaling\n\n) window.jQuery, window, document\n"]}