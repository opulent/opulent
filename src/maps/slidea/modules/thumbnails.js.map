{"version":3,"sources":["slidea/modules/thumbnails.coffee"],"names":[],"mappings":"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","file":"slidea/modules/thumbnails.js","sourceRoot":"/source/","sourcesContent":["(($, window, document) ->\n  \"use strict\"\n\n  $.fn.slidea.thumbnails = ->\n    ###\n    Set up slider thumbnails\n    ###\n    @settings =\n      enabled: false # Add thumbnails\n      visible: # Maximum number of thumbnails on page\n        xs: 12\n        sm: 6\n        md: 6\n        lg: 5\n        xlg: 5\n      position: \"bottom\" # Thumbnails position before or after\n      class: \"\" # Additional thumbnail classes\n\n    ###\n    Scroll to the nth thumbnail in the collection\n    ###\n    scroll_to_thumbnail = (to) ->\n      to = 0 if to < 0\n\n      # Calculate distance to thumbnail\n      # thumbnails may have variable sizes\n      distance = 0\n      @thumbnails.elements.each (index, item) =>\n        return false if index == to\n        if @settings.thumbnails.orientation == 'horizontal'\n          distance += $(item).width()\n        else if @settings.thumbnails.orientation == 'vertical'\n          distance += $(item).height()\n        return\n\n      # If distance required is greater than the last set of thumbnails we can\n      # see, then don't go past them\n      if @thumbnails.size - distance < @thumbnails.parent_size\n        distance = @thumbnails.size - @thumbnails.parent_size\n\n      # Set the new starting position\n      @thumbnails.starting_position = -distance\n\n      # Animate the thumbnails to the new position\n      if @settings.thumbnails.orientation == 'horizontal'\n        transform = 'translate3d(' + (-distance) + 'px, 0, 0)'\n      else if @settings.thumbnails.orientation == 'vertical'\n        transform = 'translate3d(0, ' + (-distance) + 'px, 0)'\n\n      # Animate thumbnails inner wrapper\n      @thumbnails.inner.addClass('animating').css\n        'transform': transform\n        '-o-transform': transform\n        '-ms-transform': transform\n        '-moz-transform': transform\n        '-webkit-transform': transform\n      setTimeout =>\n        @thumbnails.inner.removeClass 'animating'\n        return\n      , 700\n      return\n\n    ###\n    Resize thumbnails wrapper\n    ###\n    resize_wrapper = ->\n      return unless @thumbnails.loaded\n\n      # Set thumbnails container size and set padding in case of\n      # vertical orientation\n      if @settings.thumbnails.orientation == 'horizontal'\n        thumbnail_height = $('img', @thumbnails.elements.eq(0)).height()\n        @thumbnails.container.height thumbnail_height\n      else if @settings.thumbnails.orientation == 'vertical'\n        thumbnail_width = $('img', @thumbnails.elements.eq(0)).width()\n        @parent.css \"padding-#{@settings.thumbnails.position}\": thumbnail_width\n        @thumbnails.container.width $('img', @thumbnails.elements.eq(0)).width()\n\n      return\n\n    ###\n    Update slide data\n    ###\n    @get_slide_data = (index, slide) ->\n      unless @data[index].thumbnail?\n        thumbnail = slide.attr('data-slidea-thumbnail')\n        if thumbnail?\n          @data[index].thumbnail = thumbnail\n        else\n          @data[index].thumbnail = $(@settings.selector.background, slide).attr('src')\n      return\n\n    ###\n    Initialize thumbnails\n    ###\n    @initialize = ->\n      @thumbnails.loaded = false\n      return\n\n    ###\n    Wrap slidea inside a thumbnails wrapper for position handling\n    ###\n    @wrap_objects = ->\n      @thumbnails = {}\n\n      # Add wrapper\n      @element.wrap \"<div class=\\\"slidea-with-thumbnails #{@settings.thumbnails.position}\\\"><div class='slidea-with-thumbnails-container'></div></div>\"\n\n      # Set new parent elements\n      @parent = @element.parent()\n      @thumbnails.parent = @parent.parent()\n      return\n\n    ###\n    Add thumbnails to the slider\n    ###\n    @load = ->\n      # Set thumbnails orientation\n      if ['left', 'right'].indexOf(@settings.thumbnails.position) != -1\n        @settings.thumbnails.orientation = 'vertical'\n      else\n        @settings.thumbnails.orientation = 'horizontal'\n\n      # Get thumbnails count for the current responsive size\n      thumbs_count = @settings.thumbnails.visible[@current_responsive_size]\n\n      # Get parent sizes\n      parent_height = @wrapper_height\n      parent_width = @wrapper_width\n\n      # Set parameters for horizontal or vertical thumbnails\n      # scrolling orientation\n      if @settings.thumbnails.orientation == 'horizontal'\n        individual_size = parent_width / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'width'\n      else if @settings.thumbnails.orientation == 'vertical'\n        individual_size = parent_height / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'height'\n\n      # Thumbnails HTML Code\n      html = \"\"\n      html += \"<div class=\\\"slidea-thumbnails-container\\\">\"\n      html += \"<div class=\\\"slidea-thumbnails #{@settings.thumbnails.class} #{@settings.thumbnails.orientation}\\\">\"\n      html += \"<div class=\\\"slidea-thumbnails-inner\\\" style=\\\"#{css_param}: \" + inner_size + \"px;\\\">\"\n      $.each @data, (index, item) ->\n        html += \"<div class=\\\"slidea-thumbnail-wrapper\\\" style=\\\"#{css_param}: \" + individual_size + \"px;\\\">\"\n        html += \"<img class=\\\"slidea-thumbnail\\\" src=\\\"\" + item.thumbnail + \"\\\" alt=\\\"Slide \" + index + \"\\\" />\"\n        html += \"</div>\"\n      html += \"</div>\"\n      html += \"</div>\"\n      html += \"</div>\"\n\n      # Append thumbnails wrapper\n      @thumbnails.wrapper = $(html)\n      if  [\"top\", \"left\", \"right\"].indexOf(@settings.thumbnails.position) != -1\n        @element.closest('.slidea-with-thumbnails').prepend @thumbnails.wrapper\n      else if @settings.thumbnails.position is \"bottom\"\n        @element.closest('.slidea-with-thumbnails').append @thumbnails.wrapper\n      else\n        @settings.thumbnails.position.append @thumbnails.wrapper\n\n      # Set thumbnails relevant elements\n      @thumbnails.inner = $(\".slidea-thumbnails-inner\", @thumbnails.wrapper)\n      @thumbnails.elements = $(\".slidea-thumbnail-wrapper\", @thumbnails.wrapper)\n      @thumbnails.container = $('.slidea-thumbnails-container', @thumbnails.parent)\n\n      # Set thumbnails inner size and parent size\n      if @settings.thumbnails.orientation == 'horizontal'\n        @thumbnails.size = @thumbnails.inner.width()\n        @thumbnails.parent_size = @thumbnails.wrapper.width()\n      else if @settings.thumbnails.orientation == 'vertical'\n        @thumbnails.size = @thumbnails.inner.height()\n        @thumbnails.parent_size = @thumbnails.wrapper.height()\n\n      # Set thumbnails click event\n      @thumbnails.elements.each (i, el) =>\n        $thumbnail = $(el)\n        $thumbnail.on \"click\", =>\n          @thumbnails.elements.filter(\".active\").removeClass \"active\"\n          $thumbnail.addClass \"active\"\n          @slide i\n          return\n        return\n\n      # Prevent thumbnail image dragging\n      $(\"img\", @thumbnails.elements).on \"dragstart\", (event) ->\n        event.preventDefault()\n        return\n\n      # Startind direction used for animation\n      @thumbnails.starting_position = 0\n      @thumbnails.starting_direction = undefined\n\n      # Set thumbnails on touch events\n      if @settings.touch is true\n        touch_thumbnails = new Hammer @thumbnails.wrapper[0]\n\n        if @settings.thumbnails.orientation == 'horizontal'\n          pan_events = 'panleft panright'\n          touch_thumbnails.get('pan').set\n            direction: Hammer.DIRECTION_HORIZONTAL\n        else if @settings.thumbnails.orientation == 'vertical'\n          pan_events = 'panup pandown'\n          touch_thumbnails.get('pan').set\n            direction: Hammer.DIRECTION_VERTICAL\n\n\n        # Bind touch event to the thumbnails\n        touch_thumbnails.on \"panstart pancancel panend #{pan_events}\", (event) =>\n          if @settings.thumbnails.orientation == 'horizontal'\n            distance = event.deltaX\n          else if @settings.thumbnails.orientation == 'vertical'\n            distance = event.deltaY\n\n          # When moving, sync the slider with the mouse movement\n          if @settings.thumbnails.orientation == 'horizontal' and event.type is 'panleft' or event.type is 'panright'\n            if event.direction is Hammer.DIRECTION_LEFT or event.direction is Hammer.DIRECTION_RIGHT\n              transform = \"translate3d(#{@thumbnails.starting_position + distance}px, 0, 0)\"\n              @thumbnails.inner.css\n                'transform': transform\n                '-o-transform': transform\n                '-ms-transform': transform\n                '-moz-transform': transform\n                '-webkit-transform': transform\n\n          else if @settings.thumbnails.orientation == 'vertical' and event.type is 'panup' or event.type is 'pandown'\n            if event.direction is Hammer.DIRECTION_UP or event.direction is Hammer.DIRECTION_DOWN\n              transform = \"translate3d(0, #{@thumbnails.starting_position + distance}px, 0)\"\n              @thumbnails.inner.css\n                'transform': transform\n                '-o-transform': transform\n                '-ms-transform': transform\n                '-moz-transform': transform\n                '-webkit-transform': transform\n\n          # Get starting transform position\n          else if event.type is 'panstart' and !@thumbnails.inner.hasClass 'animating'\n            @thumbnails.inner.addClass 'slidea-dragging'\n\n            @thumbnails.starting_direction = event.direction\n\n          # When letting go, check if we have enough distance to go to the next slide\n          # otherwise return to the initial position\n          else if event.type is 'panend'\n            @thumbnails.inner.removeClass 'slidea-dragging'\n\n            # Set new starting position\n            @thumbnails.starting_position += distance\n\n            # Don't go past last thumbnail\n            if @thumbnails.starting_position < - @thumbnails.size + @thumbnails.parent_size\n              scroll_to_thumbnail.call @, @slides_length - 1\n\n            # Don't go past first thumbnail\n            else if @thumbnails.starting_position > 0\n              scroll_to_thumbnail.call @, 0\n\n            # Snap to current thumbnail\n            else\n              snap_distance = 0\n              @thumbnails.elements.each (index, item) =>\n                if @thumbnails.starting_position > -snap_distance\n                  scroll_to_thumbnail.call @, index\n                  return false\n\n                if @settings.thumbnails.orientation == 'horizontal'\n                  snap_distance += $(item).width()\n                else if @settings.thumbnails.orientation == 'vertical'\n                  snap_distance += $(item).height()\n\n                return\n\n          event.preventDefault()\n          return\n\n      # Thumbnails are loaded\n      @thumbnails.loaded = true\n\n      # Resize the slider after adding thumbnails\n      $('img', @thumbnails.elements.eq(0)).load =>\n        @resize()\n        return\n\n      return\n\n    # Before resize event\n    #\n    @before_resize = ->\n      # Set wrapper sizes\n      resize_wrapper.call @\n      return\n\n    # Resize thumbnails when window resize happens\n    #\n    @resize = ->\n      return unless @thumbnails.loaded\n\n      thumbs_count = @settings.thumbnails.visible[@current_responsive_size]\n\n      # Get parent sizes\n      parent_height = @wrapper_height\n      parent_width = @wrapper_width\n\n      # Set parameters for horizontal or vertical thumbnails\n      # scrolling orientation\n      if @settings.thumbnails.orientation == 'horizontal'\n        individual_size = parent_width / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'width'\n      else if @settings.thumbnails.orientation == 'vertical'\n        individual_size = parent_height / thumbs_count\n        inner_size = individual_size * @slides_length\n        css_param = 'height'\n\n      # Set inner and thumbnails width or height\n      @thumbnails.inner[css_param] inner_size\n      @thumbnails.elements[css_param] individual_size\n\n      if @settings.thumbnails.orientation == 'horizontal'\n        @thumbnails.size = inner_size\n      else if @settings.thumbnails.orientation == 'vertical'\n        @thumbnails.size = inner_size\n\n      # Set parent size\n      @thumbnails.parent_size = @thumbnails.wrapper[css_param]()\n\n      # Scroll to current thumbnail\n      scroll_to_thumbnail.call @, @current\n\n      return\n\n    @slide = (from, to) ->\n      return unless @thumbnails.loaded\n\n      @thumbnails.elements.filter('.active').removeClass 'active'\n      @thumbnails.elements.eq(to).addClass 'active'\n      scroll_to_thumbnail.call @, to\n\n      @log \"Scrolled to thumbnail #{to}.\"\n      return\n\n    return\n\n  # Add the feature to Slidea as a new instance\n  #\n  $.slidea.register_module 'thumbnails', $.fn.slidea.thumbnails\n\n) window.jQuery, window, document\n"]}