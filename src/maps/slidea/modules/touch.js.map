{"version":3,"sources":["slidea/modules/touch.coffee"],"names":[],"mappings":"AAAA;EAAA,CAAC,SAAC,CAAD,EAAI,MAAJ,EAAY,QAAZ;IACC;IAEA,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAAZ,GAAoB,SAAA;;AAClB;;;MAGA,IAAC,CAAA,QAAD,GAAY;;AAEZ;;;;MAIA,IAAC,CAAA,IAAD,GAAQ,SAAA;QAEN,IAAC,CAAA,YAAD,GAAoB,IAAA,MAAA,CAAO,IAAC,CAAA,OAAQ,CAAA,CAAA,CAAhB;QAGpB,IAAC,CAAA,YAAY,CAAC,GAAd,CAAkB,KAAlB,CAAwB,CAAC,GAAzB,CACE;UAAA,SAAA,EAAW,MAAM,CAAC,oBAAlB;SADF;QAIA,IAAC,CAAA,YAAY,CAAC,EAAd,CAAiB,kBAAjB,EAAqC,CAAA,SAAA,KAAA;iBAAA,SAAC,KAAD;YAEnC,IAAG,KAAK,CAAC,SAAN,KAAmB,MAAM,CAAC,WAA7B;cACE,KAAC,CAAA,OAAO,CAAC,QAAT,CAAkB,iBAAlB,EADF;aAAA,MAGK,IAAG,KAAK,CAAC,SAAN,KAAmB,MAAM,CAAC,SAA1B,IAAuC,KAAK,CAAC,SAAN,KAAmB,MAAM,CAAC,YAApE;cACH,KAAC,CAAA,OAAO,CAAC,WAAT,CAAqB,iBAArB;cAGA,IAAG,KAAK,CAAC,SAAN,KAAmB,MAAM,CAAC,cAA7B;gBACE,KAAC,CAAA,KAAD,CAAO,KAAC,CAAA,OAAD,GAAW,CAAlB,EADF;eAAA,MAEK,IAAG,KAAK,CAAC,SAAN,KAAmB,MAAM,CAAC,eAA7B;gBACH,KAAC,CAAA,KAAD,CAAO,KAAC,CAAA,OAAD,GAAW,CAAlB,EADG;eANF;;UAL8B;QAAA,CAAA,CAAA,CAAA,IAAA,CAArC;QAgBA,IAAC,CAAA,GAAD,CAAK,wCAAL;MAzBM;IAVU;WAyCpB,CAAC,CAAC,MAAM,CAAC,eAAT,CAAyB,OAAzB,EAAkC,CAAC,CAAC,EAAE,CAAC,MAAM,CAAC,KAA9C;EA5CD,CAAD,CAAA,CA8CE,MAAM,CAAC,MA9CT,EA8CiB,MA9CjB,EA8CyB,QA9CzB;AAAA","file":"slidea/modules/touch.js","sourceRoot":"/source/","sourcesContent":["(($, window, document) ->\n  \"use strict\"\n\n  $.fn.slidea.touch = ->\n    ###\n    Enable or disable video features\n    ###\n    @settings = true\n\n    ###\n    Enable touch handler for the slider.\n    @require Hammer.js\n    ###\n    @load = ->\n      # Get touch target\n      @touch_object = new Hammer @element[0]\n\n      # Allow horizontal touch only\n      @touch_object.get('pan').set\n        direction: Hammer.DIRECTION_HORIZONTAL\n\n      # Add panleft and panright events\n      @touch_object.on 'panleft panright', (event) =>\n        # Show dragging cursor on drag start\n        if event.eventType is Hammer.INPUT_START\n          @element.addClass 'slidea-dragging'\n\n        else if event.eventType is Hammer.INPUT_END or event.eventType is Hammer.INPUT_CANCEL\n          @element.removeClass 'slidea-dragging'\n\n          # Swipe left or right based on direction\n          if event.direction is Hammer.DIRECTION_LEFT\n            @slide @current + 1\n          else if event.direction is Hammer.DIRECTION_RIGHT\n            @slide @current - 1\n\n        return\n\n      @log \"Bound touch pan left and right events.\"\n      return\n    return\n\n  # Add the feature to Slidea as a new instance\n  #\n  $.slidea.register_module 'touch', $.fn.slidea.touch\n\n) window.jQuery, window, document\n"]}