{"version":3,"sources":["animus/animus.coffee"],"names":[],"mappings":"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","file":"animus/animus.js","sourceRoot":"/source/","sourcesContent":["###\n\n                  oo\n\n.d8888b. 88d888b. dP 88d8b.d8b. dP    dP .d8888b.\n88'  `88 88'  `88 88 88'`88'`88 88    88 Y8ooooo.\n88.  .88 88    88 88 88  88  88 88.  .88       88\n`88888P8 dP    dP dP dP  dP  dP `88888P' `88888P'\noooooooooooooooooooooooooooooooooooooooooooooooooo\n\n@plugin    jQuery\n@license   CodeCanyon Standard / Extended\n@author    Alex Grozav\n@company   Pixevil\n@website   http://pixevil.com\n@email     alex@grozav.com\n###\n\n(($, window, document) ->\n  'use strict'\n\n  $.animus = (override) ->\n    # Animation Model\n    model = {}\n\n    # Animation duration\n    model.duration = 600\n\n    # Model Default State\n    model.defaults =\n      opacity: 1\n      rotationX: 0\n      rotationY: 0\n      rotationZ: 0\n      x: 0\n      y: 0\n      z: 0\n      xPercent: 0\n      yPercent: 0\n      scale: 1\n      scaleX: 1\n      scaleY: 1\n      scaleZ: 1\n      skewX: 0\n      skewY: 0\n      easing: \"Quad.easeOut\"\n\n\n    # List of allowed GSAP parameters\n    @parameters = [\n      'scale'\n      'scaleX'\n      'scaleY'\n      'scaleZ'\n      'x'\n      'y'\n      'z'\n      'skewX'\n      'skewY'\n      'rotation'\n      'rotationX'\n      'rotationY'\n      'rotationZ'\n      'perspective'\n      'xPercent'\n      'yPercent'\n      'shortRotation'\n      'shortRotationX'\n      'shortRotationY'\n      'shortRotationZ'\n      'transformOrigin'\n      'svgOrigin'\n      'transformPerspective'\n      'directionalRotation'\n      'parseTransform'\n      'force3D'\n      'skewType'\n      'smoothOrigin'\n      'boxShadow'\n      'borderRadius'\n      'backgroundPosition'\n      'backgroundSize'\n      'perspectiveOrigin'\n      'transformStyle'\n      'backfaceVisibility'\n      'userSelect'\n      'margin'\n      'padding'\n      'color'\n      'clip'\n      'textShadow'\n      'autoRound'\n      'strictUnits'\n      'border'\n      'borderWidth'\n      'float'\n      'cssFloat'\n      'styleFloat'\n      'perspectiveOrigin'\n      'transformStyle'\n      'backfaceVisibility'\n      'userSelect'\n      'opacity'\n      'alpha'\n      'autoAlpha'\n      'className'\n      'clearProps'\n    ]\n\n    # Override default and final animus animation model\n    #\n    @init = ->\n      $.extend model, override\n      return\n\n    ###\n    Process an animation string of the form \"rotate 45, fade in\" into\n    a usable VelocityJS animation object\n\n    @var     string      The animation string to be modified, of the form\n                         move x 300px, fade in, scale up\n    ###\n    @get = (input) ->\n      # Animation Object\n      animation = {}\n      animation.state = { z: 0 }\n      animation.duration = model.duration / 1000\n      animation.timeline = null\n\n      if input == '' or !input? or !input\n        return animation\n\n      input = input.split /(\\,\\s*)/\n      $.each input, (index, string) =>\n        i = 0\n\n        # Trim input string partial\n        string = $.trim(string)\n\n        # Replace round brackets\n        if /\\(.*\\)/.test(string)\n          string = string.replace(/\\s*\\(\\s*/, ' ').replace(/\\s*\\)\\s*/, ' ')\n\n        # Split by space\n        string = string.split /\\s+/\n\n        # Remove empty strings\n        string = $.grep string, (n) ->\n          n != \"\"\n\n        # Set current working parameter\n        parameter = string.shift()\n\n        # Set current working value\n        value = string.join ' '\n\n        # Check if we have a VelocityJS parameter\n        if ['duration', 'speed'].indexOf(parameter) != -1\n          animation.duration = parseFloat(value, 10) / 1000\n        else if ['ease', 'easing'].indexOf(parameter) != -1\n          animation.state.ease = value\n        else if parameter in @parameters\n          if value? and !/.+(\\s+.+)+/.test(value)\n            if /px/.test value\n              value = parseFloat value.replace('px', ''), 10\n            else if /deg/.test value\n              value = parseFloat value.replace('deg', ''), 10\n\n            # Set as float if it isn't a percentage value\n            if /^[0-9](\\.[0-9]+)?$/.test value\n              value = parseFloat value, 10\n\n          # @TODO Add final values\n          # else\n          #   value = model.finals[parameter]\n          animation.state[parameter] = value\n\n        # Check if we have a VelocityJS redirect\n        else if parameter of $.animus.presets\n          animation.state = parameter\n\n        return\n\n      return animation\n\n\n    ###\n    Set reset state by getting all the animation variables\n    and setting them to the default values\n\n    @param data [State] State which overwrites reset variables\n    @param data [Object] Element states data in RockSlider\n    @param deep [Boolean] Generate reset from an array of animations if true\n                          or from a single animation if false\n    ###\n    @reset = (state, data) ->\n      ###\n      Check if we need to add the percentage sign to the default state value\n      ###\n      percentage = (value) ->\n        if /\\%$/.test value\n          return '%'\n        else\n          return ''\n\n      reset = {}\n      $.each data, (anim)->\n        return if $.type(@state) is 'string'\n        $.each @state, (key, value) ->\n          if !(key of reset) and key of model.defaults\n            reset[key] = model.defaults[key] + percentage(value)\n          return\n        return\n\n      return $.extend {}, reset, state\n\n    # Initialize Animus\n    @init()\n\n    return\n\n  # Keeps all Animus presets\n  $.animus.presets = {}\n\n  # Add a new Animus preset\n  $.animus.register_preset = (name, timeline) ->\n    $.animus.presets[name] = timeline\n    return\n\n  return\n) jQuery, window, document\n"]}