{"version":3,"sources":["visuallax/visuallax.coffee"],"names":[],"mappings":"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","file":"visuallax/visuallax.js","sourceRoot":"/source/","sourcesContent":["###\n         oo                            dP dP\n                                       88 88\ndP   .dP dP .d8888b. dP    dP .d8888b. 88 88 .d8888b. dP.  .dP\n88   d8' 88 Y8ooooo. 88    88 88'  `88 88 88 88'  `88  `8bd8'\n88 .88'  88       88 88.  .88 88.  .88 88 88 88.  .88  .d88b.\n8888P'   dP `88888P' `88888P' `88888P8 dP dP `88888P8 dP'  `dP\nooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo\n\nA smart and efficient parallax plugin by Alex Grozav\nfrom Pixevil built to make the web a better place.\n\n@plugin  \tVisuallax\n@author \tAlex Grozav\n@website  http://pixevil.com\n@version \t1.0\n@license \tCommercial\n###\n\n(($, window, document) ->\n  \"use strict\"\n\n  # This is where we place our default values.\n  _defaults =\n    orientation: 'vertical'\n    mode: 'default' # 'to-middle', 'from-middle', 'default'\n\n    overflow: false # Take parent overflowing into account\n    reset: false # Reset animation when conditions not met\n\n    transform: {}\n    transform_style:\n      opacity: 'default'\n      scale: 'default'\n\n    parent: false # Parent element, by default set as direct parent\n    source: false # Element from which to gather size data\n\n    screen_size: # Refers to the current screen size\n      xs: 0\n      sm: 768\n      md: 992\n      lg: 1200\n      xlg: 1840\n    disabled: # Deactivate certain animations\n      xs: []\n      sm: []\n      md: []\n      lg: []\n      xlg: []\n\n  debug: true\n\n  # @Visuallax\n  $.visuallax = (element, options) ->\n    @_defaults = _defaults\n    @settings = $.extend true, {}, @_defaults, options\n\n    @element = $ element\n    @source = if @settings.source then @settings.source else @element\n    @parent = if @settings.parent then @settings.parent else @source.parent()\n\n    @window = $ window\n\n    @image_resize_timeout = null\n\n    # Get all child elements which have revelate\n    # events attached through data attributes\n    #\n    @initialize = =>\n      @get_data()\n\n      @set_size()\n      @set_position()\n\n      @set_responsive_context()\n\n      @bind_resize()\n      @bind_scroll()\n\n      @parallax @window.scrollTop()\n\n      return\n\n    # Initialize element cache with its data settings\n    #\n    @get_data = =>\n      data = @element.attr 'data-visuallax'\n      if data?\n        data = data.split /\\,\\s+/\n        $.each data, (index, string) =>\n          string = $.trim string\n          string = string.split /\\s+/\n          string = string.map (n) ->\n            if n is 'false' then false else n.toLowerCase()\n\n          switch string[0]\n            when 'translate', 'move'\n              if string[1] == 'x' or string[1] == 'y' or string[1] == 'z'\n                @settings.transform[\"translate#{string[1].toUpperCase()}\"] = parseFloat string[2]\n              else\n                @settings.transform.translateY = parseFloat string[1]\n\n            when 'rotate'\n              if string[1] == 'x' or string[1] == 'y' or string[1] == 'z'\n                @settings.transform[\"rotate#{string[1].toUpperCase()}\"] = parseFloat string[2]\n              else\n                @settings.transform.rotateZ = parseFloat string[1]\n\n            when 'opacity', 'fade'\n              i = 1\n              if string[i] is 'simple' or string[i] is 'default'\n                @settings.transform_style.opacity = string[i++]\n              @settings.transform.opacity = parseFloat string[i]\n\n            when 'scale'\n              i = 1\n              if string[i] is 'simple' or string[i] is 'default'\n                @settings.transform_style.scale = string[i++]\n              @settings.transform.scale = parseFloat string[i]\n\n            when 'disabled'\n              i = 1\n              while string[++i]\n                @settings.disabled[string[1]].push string[i]\n            else\n              i = 0\n              @settings[string[i++]] = string[i]\n          return\n\n      unless 'translateZ' of @settings.transform\n        @settings.transform.translateZ = 0\n\n      return\n\n    # Set element top and bottom positioning on the page\n    #\n    @set_position = =>\n      @top = @source.offset().top\n      @bottom = @top + @source_height\n\n      @left = @source.offset().left\n      @right = @left + @source_width\n\n      @parent_top = @parent.offset().top\n      @parent_bottom = @parent_top + @parent_height\n\n      @parent_left = @parent.offset().left\n      @parent_right = @parent_left + @parent_width\n\n      return\n\n\n    # Set element and slider size\n    #\n    @set_size = =>\n      @parent_width = @parent.outerWidth(true)\n      @parent_height = @parent.outerHeight(true)\n\n      @source_width = @source.outerWidth(true)\n      @source_height = @source.outerHeight(true)\n\n      @element_width = @element.outerWidth(true)\n      @element_height = @element.outerHeight(true)\n\n      @window_width = @window.width()\n      @window_height = @window.height()\n\n      return\n\n    # Set current responsive range parameter as xs,sm,md or lg\n    #\n    @set_responsive_context = =>\n      if @window_width >= @settings.screen_size.xlg\n        @current_responsive_size = 'xlg'\n      else if @window_width >= @settings.screen_size.lg\n        @current_responsive_size = 'lg'\n      else if @window_width >= @settings.screen_size.md\n        @current_responsive_size = 'md'\n      else if @window_width >= @settings.screen_size.sm\n        @current_responsive_size = 'sm'\n      else\n        @current_responsive_size = 'xs'\n\n      return\n\n    # Reset all parameters to the default values\n    #\n    @reset = (style) =>\n      reset =\n        translateX: 0\n        translateY: 0\n        rotateX: 0\n        rotateY: 0\n        rotateZ: 0\n        scale: 1\n        opacity: 1\n\n      if style is '*'\n        for key, value in reset\n          $.Velocity.hook @element, key, value\n      else\n        $.Velocity.hook @element, style, reset[style]\n\n      return\n\n\n    # Binds the slider window resize event to cache current window\n    # width and height and to set the layout up\n    #\n    @bind_resize = =>\n      @window.resize =>\n        @set_size()\n        @set_position()\n        @set_responsive_context()\n\n        @parallax @window.scrollTop()\n        return\n      return\n\n    # Bind the window scroll event to fade content on scroll down\n    #\n    @bind_scroll = =>\n      @window.on 'scroll', =>\n        @parallax @window.scrollTop()\n        return\n      return\n\n    # Parallax images when in fluid layout mode\n    #\n    # @param position [Fixnum] Current scrolling position\n    #\n    @parallax = (position) =>\n      delta_y = (position + @window_height / 2 - (@top + @bottom) / 2)\n\n      # Check if element is in view\n      in_view = position + @window_height < @top || position > @bottom\n\n      # Only parallax until the middle point or start from the middle point\n      # if set as mode\n      middle_trigger = (@settings.mode is 'to-middle' and delta_y >= 0) ||\n                       (@settings.mode is 'from-middle' and delta_y <= 0)\n\n      # Check if our element height is smaller than our parent height\n      smaller_than_parent = @source_height < @parent_height\n\n      # Do not overflow the parent height when parallaxing\n      translated = if 'translateY' of @settings.transform\n        @settings.transform.translateY * delta_y\n      else\n        0\n\n      # Check if the translation we're using is overflowing our parent container\n      overflowing_translation = (@top + translated > @parent_top) ||\n                                (@bottom + translated > @parent_bottom)\n\n      # If we need to check containment overflowing, this will be set to true\n      overflow_condition = @settings.overflow && (smaller_than_parent || overflowing_translation)\n\n      # Check if we need to return\n      if in_view || middle_trigger || overflow_condition\n        @reset '*' if @settings.reset\n        return\n\n      for transform, value of @settings.transform\n        unless $.inArray(transform, @settings.disabled[@current_responsive_size]) is -1\n          @reset transform\n          return\n\n        transform_unit = if transform.indexOf('translate') != -1\n          'px'\n        else if transform.indexOf('rotate') != -1\n          'deg'\n        else\n          ''\n\n        transform_factor = if transform of @settings.transform_style\n          if @settings.transform_style[transform] is 'default'\n            1 - Math.abs (delta_y / 100 * @settings.transform[transform])\n          else\n            1 - delta_y / 100 * @settings.transform[transform]\n        else\n          delta_y * value\n\n        transform_string = \"#{transform_factor}#{transform_unit}\"\n\n        $.Velocity.hook @element, transform, transform_string\n\n      return\n\n    @initialize()\n\n  # Lightweight plugin wrapper that prevents multiple instantiations.\n  #\n  $.fn.visuallax = (opts) ->\n    @each (index, element) ->\n      unless $.data element, \"visuallax\"\n        $.data element, \"visuallax\", new $.visuallax element, opts\n\n) window.jQuery, window, document\n"]}